// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v3.21.12
// source: worktree.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LocalSettingsKind int32

const (
	LocalSettingsKind_Settings     LocalSettingsKind = 0
	LocalSettingsKind_Tasks        LocalSettingsKind = 1
	LocalSettingsKind_Editorconfig LocalSettingsKind = 2
)

// Enum value maps for LocalSettingsKind.
var (
	LocalSettingsKind_name = map[int32]string{
		0: "Settings",
		1: "Tasks",
		2: "Editorconfig",
	}
	LocalSettingsKind_value = map[string]int32{
		"Settings":     0,
		"Tasks":        1,
		"Editorconfig": 2,
	}
)

func (x LocalSettingsKind) Enum() *LocalSettingsKind {
	p := new(LocalSettingsKind)
	*p = x
	return p
}

func (x LocalSettingsKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LocalSettingsKind) Descriptor() protoreflect.EnumDescriptor {
	return file_worktree_proto_enumTypes[0].Descriptor()
}

func (LocalSettingsKind) Type() protoreflect.EnumType {
	return &file_worktree_proto_enumTypes[0]
}

func (x LocalSettingsKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LocalSettingsKind.Descriptor instead.
func (LocalSettingsKind) EnumDescriptor() ([]byte, []int) {
	return file_worktree_proto_rawDescGZIP(), []int{0}
}

type Timestamp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seconds uint64 `protobuf:"varint,1,opt,name=seconds,proto3" json:"seconds,omitempty"`
	Nanos   uint32 `protobuf:"varint,2,opt,name=nanos,proto3" json:"nanos,omitempty"`
}

func (x *Timestamp) Reset() {
	*x = Timestamp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worktree_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Timestamp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timestamp) ProtoMessage() {}

func (x *Timestamp) ProtoReflect() protoreflect.Message {
	mi := &file_worktree_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timestamp.ProtoReflect.Descriptor instead.
func (*Timestamp) Descriptor() ([]byte, []int) {
	return file_worktree_proto_rawDescGZIP(), []int{0}
}

func (x *Timestamp) GetSeconds() uint64 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

func (x *Timestamp) GetNanos() uint32 {
	if x != nil {
		return x.Nanos
	}
	return 0
}

type File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorktreeId uint64     `protobuf:"varint,1,opt,name=worktree_id,json=worktreeId,proto3" json:"worktree_id,omitempty"`
	EntryId    *uint64    `protobuf:"varint,2,opt,name=entry_id,json=entryId,proto3,oneof" json:"entry_id,omitempty"`
	Path       string     `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Mtime      *Timestamp `protobuf:"bytes,4,opt,name=mtime,proto3" json:"mtime,omitempty"`
	IsDeleted  bool       `protobuf:"varint,5,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
}

func (x *File) Reset() {
	*x = File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worktree_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_worktree_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_worktree_proto_rawDescGZIP(), []int{1}
}

func (x *File) GetWorktreeId() uint64 {
	if x != nil {
		return x.WorktreeId
	}
	return 0
}

func (x *File) GetEntryId() uint64 {
	if x != nil && x.EntryId != nil {
		return *x.EntryId
	}
	return 0
}

func (x *File) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *File) GetMtime() *Timestamp {
	if x != nil {
		return x.Mtime
	}
	return nil
}

func (x *File) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

type Entry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	IsDir         bool       `protobuf:"varint,2,opt,name=is_dir,json=isDir,proto3" json:"is_dir,omitempty"`
	Path          string     `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Inode         uint64     `protobuf:"varint,4,opt,name=inode,proto3" json:"inode,omitempty"`
	Mtime         *Timestamp `protobuf:"bytes,5,opt,name=mtime,proto3" json:"mtime,omitempty"`
	IsIgnored     bool       `protobuf:"varint,7,opt,name=is_ignored,json=isIgnored,proto3" json:"is_ignored,omitempty"`
	IsExternal    bool       `protobuf:"varint,8,opt,name=is_external,json=isExternal,proto3" json:"is_external,omitempty"`
	IsFifo        bool       `protobuf:"varint,10,opt,name=is_fifo,json=isFifo,proto3" json:"is_fifo,omitempty"`
	Size          *uint64    `protobuf:"varint,11,opt,name=size,proto3,oneof" json:"size,omitempty"`
	CanonicalPath *string    `protobuf:"bytes,12,opt,name=canonical_path,json=canonicalPath,proto3,oneof" json:"canonical_path,omitempty"`
}

func (x *Entry) Reset() {
	*x = Entry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worktree_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entry) ProtoMessage() {}

func (x *Entry) ProtoReflect() protoreflect.Message {
	mi := &file_worktree_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entry.ProtoReflect.Descriptor instead.
func (*Entry) Descriptor() ([]byte, []int) {
	return file_worktree_proto_rawDescGZIP(), []int{2}
}

func (x *Entry) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Entry) GetIsDir() bool {
	if x != nil {
		return x.IsDir
	}
	return false
}

func (x *Entry) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Entry) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *Entry) GetMtime() *Timestamp {
	if x != nil {
		return x.Mtime
	}
	return nil
}

func (x *Entry) GetIsIgnored() bool {
	if x != nil {
		return x.IsIgnored
	}
	return false
}

func (x *Entry) GetIsExternal() bool {
	if x != nil {
		return x.IsExternal
	}
	return false
}

func (x *Entry) GetIsFifo() bool {
	if x != nil {
		return x.IsFifo
	}
	return false
}

func (x *Entry) GetSize() uint64 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return 0
}

func (x *Entry) GetCanonicalPath() string {
	if x != nil && x.CanonicalPath != nil {
		return *x.CanonicalPath
	}
	return ""
}

type AddWorktree struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path      string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	ProjectId uint64 `protobuf:"varint,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Visible   bool   `protobuf:"varint,3,opt,name=visible,proto3" json:"visible,omitempty"`
}

func (x *AddWorktree) Reset() {
	*x = AddWorktree{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worktree_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddWorktree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWorktree) ProtoMessage() {}

func (x *AddWorktree) ProtoReflect() protoreflect.Message {
	mi := &file_worktree_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWorktree.ProtoReflect.Descriptor instead.
func (*AddWorktree) Descriptor() ([]byte, []int) {
	return file_worktree_proto_rawDescGZIP(), []int{3}
}

func (x *AddWorktree) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *AddWorktree) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *AddWorktree) GetVisible() bool {
	if x != nil {
		return x.Visible
	}
	return false
}

type AddWorktreeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorktreeId        uint64 `protobuf:"varint,1,opt,name=worktree_id,json=worktreeId,proto3" json:"worktree_id,omitempty"`
	CanonicalizedPath string `protobuf:"bytes,2,opt,name=canonicalized_path,json=canonicalizedPath,proto3" json:"canonicalized_path,omitempty"`
}

func (x *AddWorktreeResponse) Reset() {
	*x = AddWorktreeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worktree_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddWorktreeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWorktreeResponse) ProtoMessage() {}

func (x *AddWorktreeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_worktree_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWorktreeResponse.ProtoReflect.Descriptor instead.
func (*AddWorktreeResponse) Descriptor() ([]byte, []int) {
	return file_worktree_proto_rawDescGZIP(), []int{4}
}

func (x *AddWorktreeResponse) GetWorktreeId() uint64 {
	if x != nil {
		return x.WorktreeId
	}
	return 0
}

func (x *AddWorktreeResponse) GetCanonicalizedPath() string {
	if x != nil {
		return x.CanonicalizedPath
	}
	return ""
}

type RemoveWorktree struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorktreeId uint64 `protobuf:"varint,1,opt,name=worktree_id,json=worktreeId,proto3" json:"worktree_id,omitempty"`
}

func (x *RemoveWorktree) Reset() {
	*x = RemoveWorktree{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worktree_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveWorktree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveWorktree) ProtoMessage() {}

func (x *RemoveWorktree) ProtoReflect() protoreflect.Message {
	mi := &file_worktree_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveWorktree.ProtoReflect.Descriptor instead.
func (*RemoveWorktree) Descriptor() ([]byte, []int) {
	return file_worktree_proto_rawDescGZIP(), []int{5}
}

func (x *RemoveWorktree) GetWorktreeId() uint64 {
	if x != nil {
		return x.WorktreeId
	}
	return 0
}

type GetPathMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint64 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Path      string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *GetPathMetadata) Reset() {
	*x = GetPathMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worktree_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPathMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPathMetadata) ProtoMessage() {}

func (x *GetPathMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_worktree_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPathMetadata.ProtoReflect.Descriptor instead.
func (*GetPathMetadata) Descriptor() ([]byte, []int) {
	return file_worktree_proto_rawDescGZIP(), []int{6}
}

func (x *GetPathMetadata) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *GetPathMetadata) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type GetPathMetadataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exists bool   `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
	Path   string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	IsDir  bool   `protobuf:"varint,3,opt,name=is_dir,json=isDir,proto3" json:"is_dir,omitempty"`
}

func (x *GetPathMetadataResponse) Reset() {
	*x = GetPathMetadataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worktree_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPathMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPathMetadataResponse) ProtoMessage() {}

func (x *GetPathMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_worktree_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPathMetadataResponse.ProtoReflect.Descriptor instead.
func (*GetPathMetadataResponse) Descriptor() ([]byte, []int) {
	return file_worktree_proto_rawDescGZIP(), []int{7}
}

func (x *GetPathMetadataResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

func (x *GetPathMetadataResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *GetPathMetadataResponse) GetIsDir() bool {
	if x != nil {
		return x.IsDir
	}
	return false
}

type WorktreeMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RootName string `protobuf:"bytes,2,opt,name=root_name,json=rootName,proto3" json:"root_name,omitempty"`
	Visible  bool   `protobuf:"varint,3,opt,name=visible,proto3" json:"visible,omitempty"`
	AbsPath  string `protobuf:"bytes,4,opt,name=abs_path,json=absPath,proto3" json:"abs_path,omitempty"`
}

func (x *WorktreeMetadata) Reset() {
	*x = WorktreeMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worktree_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorktreeMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorktreeMetadata) ProtoMessage() {}

func (x *WorktreeMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_worktree_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorktreeMetadata.ProtoReflect.Descriptor instead.
func (*WorktreeMetadata) Descriptor() ([]byte, []int) {
	return file_worktree_proto_rawDescGZIP(), []int{8}
}

func (x *WorktreeMetadata) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WorktreeMetadata) GetRootName() string {
	if x != nil {
		return x.RootName
	}
	return ""
}

func (x *WorktreeMetadata) GetVisible() bool {
	if x != nil {
		return x.Visible
	}
	return false
}

func (x *WorktreeMetadata) GetAbsPath() string {
	if x != nil {
		return x.AbsPath
	}
	return ""
}

type ProjectPath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorktreeId uint64 `protobuf:"varint,1,opt,name=worktree_id,json=worktreeId,proto3" json:"worktree_id,omitempty"`
	Path       string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *ProjectPath) Reset() {
	*x = ProjectPath{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worktree_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectPath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectPath) ProtoMessage() {}

func (x *ProjectPath) ProtoReflect() protoreflect.Message {
	mi := &file_worktree_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectPath.ProtoReflect.Descriptor instead.
func (*ProjectPath) Descriptor() ([]byte, []int) {
	return file_worktree_proto_rawDescGZIP(), []int{9}
}

func (x *ProjectPath) GetWorktreeId() uint64 {
	if x != nil {
		return x.WorktreeId
	}
	return 0
}

func (x *ProjectPath) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type ListRemoteDirectoryConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsDir bool `protobuf:"varint,1,opt,name=is_dir,json=isDir,proto3" json:"is_dir,omitempty"`
}

func (x *ListRemoteDirectoryConfig) Reset() {
	*x = ListRemoteDirectoryConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worktree_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRemoteDirectoryConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRemoteDirectoryConfig) ProtoMessage() {}

func (x *ListRemoteDirectoryConfig) ProtoReflect() protoreflect.Message {
	mi := &file_worktree_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRemoteDirectoryConfig.ProtoReflect.Descriptor instead.
func (*ListRemoteDirectoryConfig) Descriptor() ([]byte, []int) {
	return file_worktree_proto_rawDescGZIP(), []int{10}
}

func (x *ListRemoteDirectoryConfig) GetIsDir() bool {
	if x != nil {
		return x.IsDir
	}
	return false
}

type ListRemoteDirectory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DevServerId uint64                     `protobuf:"varint,1,opt,name=dev_server_id,json=devServerId,proto3" json:"dev_server_id,omitempty"`
	Path        string                     `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Config      *ListRemoteDirectoryConfig `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *ListRemoteDirectory) Reset() {
	*x = ListRemoteDirectory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worktree_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRemoteDirectory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRemoteDirectory) ProtoMessage() {}

func (x *ListRemoteDirectory) ProtoReflect() protoreflect.Message {
	mi := &file_worktree_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRemoteDirectory.ProtoReflect.Descriptor instead.
func (*ListRemoteDirectory) Descriptor() ([]byte, []int) {
	return file_worktree_proto_rawDescGZIP(), []int{11}
}

func (x *ListRemoteDirectory) GetDevServerId() uint64 {
	if x != nil {
		return x.DevServerId
	}
	return 0
}

func (x *ListRemoteDirectory) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ListRemoteDirectory) GetConfig() *ListRemoteDirectoryConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type EntryInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsDir bool `protobuf:"varint,1,opt,name=is_dir,json=isDir,proto3" json:"is_dir,omitempty"`
}

func (x *EntryInfo) Reset() {
	*x = EntryInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worktree_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntryInfo) ProtoMessage() {}

func (x *EntryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_worktree_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntryInfo.ProtoReflect.Descriptor instead.
func (*EntryInfo) Descriptor() ([]byte, []int) {
	return file_worktree_proto_rawDescGZIP(), []int{12}
}

func (x *EntryInfo) GetIsDir() bool {
	if x != nil {
		return x.IsDir
	}
	return false
}

type ListRemoteDirectoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries   []string     `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	EntryInfo []*EntryInfo `protobuf:"bytes,2,rep,name=entry_info,json=entryInfo,proto3" json:"entry_info,omitempty"`
}

func (x *ListRemoteDirectoryResponse) Reset() {
	*x = ListRemoteDirectoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worktree_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRemoteDirectoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRemoteDirectoryResponse) ProtoMessage() {}

func (x *ListRemoteDirectoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_worktree_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRemoteDirectoryResponse.ProtoReflect.Descriptor instead.
func (*ListRemoteDirectoryResponse) Descriptor() ([]byte, []int) {
	return file_worktree_proto_rawDescGZIP(), []int{13}
}

func (x *ListRemoteDirectoryResponse) GetEntries() []string {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *ListRemoteDirectoryResponse) GetEntryInfo() []*EntryInfo {
	if x != nil {
		return x.EntryInfo
	}
	return nil
}

type CreateProjectEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId   uint64 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	WorktreeId  uint64 `protobuf:"varint,2,opt,name=worktree_id,json=worktreeId,proto3" json:"worktree_id,omitempty"`
	Path        string `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	IsDirectory bool   `protobuf:"varint,4,opt,name=is_directory,json=isDirectory,proto3" json:"is_directory,omitempty"`
}

func (x *CreateProjectEntry) Reset() {
	*x = CreateProjectEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worktree_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProjectEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProjectEntry) ProtoMessage() {}

func (x *CreateProjectEntry) ProtoReflect() protoreflect.Message {
	mi := &file_worktree_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProjectEntry.ProtoReflect.Descriptor instead.
func (*CreateProjectEntry) Descriptor() ([]byte, []int) {
	return file_worktree_proto_rawDescGZIP(), []int{14}
}

func (x *CreateProjectEntry) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *CreateProjectEntry) GetWorktreeId() uint64 {
	if x != nil {
		return x.WorktreeId
	}
	return 0
}

func (x *CreateProjectEntry) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CreateProjectEntry) GetIsDirectory() bool {
	if x != nil {
		return x.IsDirectory
	}
	return false
}

type RenameProjectEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint64 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	EntryId   uint64 `protobuf:"varint,2,opt,name=entry_id,json=entryId,proto3" json:"entry_id,omitempty"`
	NewPath   string `protobuf:"bytes,3,opt,name=new_path,json=newPath,proto3" json:"new_path,omitempty"`
}

func (x *RenameProjectEntry) Reset() {
	*x = RenameProjectEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worktree_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenameProjectEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameProjectEntry) ProtoMessage() {}

func (x *RenameProjectEntry) ProtoReflect() protoreflect.Message {
	mi := &file_worktree_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenameProjectEntry.ProtoReflect.Descriptor instead.
func (*RenameProjectEntry) Descriptor() ([]byte, []int) {
	return file_worktree_proto_rawDescGZIP(), []int{15}
}

func (x *RenameProjectEntry) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *RenameProjectEntry) GetEntryId() uint64 {
	if x != nil {
		return x.EntryId
	}
	return 0
}

func (x *RenameProjectEntry) GetNewPath() string {
	if x != nil {
		return x.NewPath
	}
	return ""
}

type CopyProjectEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId                  uint64  `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	EntryId                    uint64  `protobuf:"varint,2,opt,name=entry_id,json=entryId,proto3" json:"entry_id,omitempty"`
	NewPath                    string  `protobuf:"bytes,3,opt,name=new_path,json=newPath,proto3" json:"new_path,omitempty"`
	RelativeWorktreeSourcePath *string `protobuf:"bytes,4,opt,name=relative_worktree_source_path,json=relativeWorktreeSourcePath,proto3,oneof" json:"relative_worktree_source_path,omitempty"`
}

func (x *CopyProjectEntry) Reset() {
	*x = CopyProjectEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worktree_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CopyProjectEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyProjectEntry) ProtoMessage() {}

func (x *CopyProjectEntry) ProtoReflect() protoreflect.Message {
	mi := &file_worktree_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyProjectEntry.ProtoReflect.Descriptor instead.
func (*CopyProjectEntry) Descriptor() ([]byte, []int) {
	return file_worktree_proto_rawDescGZIP(), []int{16}
}

func (x *CopyProjectEntry) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *CopyProjectEntry) GetEntryId() uint64 {
	if x != nil {
		return x.EntryId
	}
	return 0
}

func (x *CopyProjectEntry) GetNewPath() string {
	if x != nil {
		return x.NewPath
	}
	return ""
}

func (x *CopyProjectEntry) GetRelativeWorktreeSourcePath() string {
	if x != nil && x.RelativeWorktreeSourcePath != nil {
		return *x.RelativeWorktreeSourcePath
	}
	return ""
}

type DeleteProjectEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint64 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	EntryId   uint64 `protobuf:"varint,2,opt,name=entry_id,json=entryId,proto3" json:"entry_id,omitempty"`
	UseTrash  bool   `protobuf:"varint,3,opt,name=use_trash,json=useTrash,proto3" json:"use_trash,omitempty"`
}

func (x *DeleteProjectEntry) Reset() {
	*x = DeleteProjectEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worktree_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProjectEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProjectEntry) ProtoMessage() {}

func (x *DeleteProjectEntry) ProtoReflect() protoreflect.Message {
	mi := &file_worktree_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProjectEntry.ProtoReflect.Descriptor instead.
func (*DeleteProjectEntry) Descriptor() ([]byte, []int) {
	return file_worktree_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteProjectEntry) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *DeleteProjectEntry) GetEntryId() uint64 {
	if x != nil {
		return x.EntryId
	}
	return 0
}

func (x *DeleteProjectEntry) GetUseTrash() bool {
	if x != nil {
		return x.UseTrash
	}
	return false
}

type ExpandProjectEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint64 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	EntryId   uint64 `protobuf:"varint,2,opt,name=entry_id,json=entryId,proto3" json:"entry_id,omitempty"`
}

func (x *ExpandProjectEntry) Reset() {
	*x = ExpandProjectEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worktree_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpandProjectEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpandProjectEntry) ProtoMessage() {}

func (x *ExpandProjectEntry) ProtoReflect() protoreflect.Message {
	mi := &file_worktree_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpandProjectEntry.ProtoReflect.Descriptor instead.
func (*ExpandProjectEntry) Descriptor() ([]byte, []int) {
	return file_worktree_proto_rawDescGZIP(), []int{18}
}

func (x *ExpandProjectEntry) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ExpandProjectEntry) GetEntryId() uint64 {
	if x != nil {
		return x.EntryId
	}
	return 0
}

type ExpandProjectEntryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorktreeScanId uint64 `protobuf:"varint,1,opt,name=worktree_scan_id,json=worktreeScanId,proto3" json:"worktree_scan_id,omitempty"`
}

func (x *ExpandProjectEntryResponse) Reset() {
	*x = ExpandProjectEntryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worktree_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpandProjectEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpandProjectEntryResponse) ProtoMessage() {}

func (x *ExpandProjectEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_worktree_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpandProjectEntryResponse.ProtoReflect.Descriptor instead.
func (*ExpandProjectEntryResponse) Descriptor() ([]byte, []int) {
	return file_worktree_proto_rawDescGZIP(), []int{19}
}

func (x *ExpandProjectEntryResponse) GetWorktreeScanId() uint64 {
	if x != nil {
		return x.WorktreeScanId
	}
	return 0
}

type ExpandAllForProjectEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint64 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	EntryId   uint64 `protobuf:"varint,2,opt,name=entry_id,json=entryId,proto3" json:"entry_id,omitempty"`
}

func (x *ExpandAllForProjectEntry) Reset() {
	*x = ExpandAllForProjectEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worktree_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpandAllForProjectEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpandAllForProjectEntry) ProtoMessage() {}

func (x *ExpandAllForProjectEntry) ProtoReflect() protoreflect.Message {
	mi := &file_worktree_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpandAllForProjectEntry.ProtoReflect.Descriptor instead.
func (*ExpandAllForProjectEntry) Descriptor() ([]byte, []int) {
	return file_worktree_proto_rawDescGZIP(), []int{20}
}

func (x *ExpandAllForProjectEntry) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ExpandAllForProjectEntry) GetEntryId() uint64 {
	if x != nil {
		return x.EntryId
	}
	return 0
}

type ExpandAllForProjectEntryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorktreeScanId uint64 `protobuf:"varint,1,opt,name=worktree_scan_id,json=worktreeScanId,proto3" json:"worktree_scan_id,omitempty"`
}

func (x *ExpandAllForProjectEntryResponse) Reset() {
	*x = ExpandAllForProjectEntryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worktree_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpandAllForProjectEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpandAllForProjectEntryResponse) ProtoMessage() {}

func (x *ExpandAllForProjectEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_worktree_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpandAllForProjectEntryResponse.ProtoReflect.Descriptor instead.
func (*ExpandAllForProjectEntryResponse) Descriptor() ([]byte, []int) {
	return file_worktree_proto_rawDescGZIP(), []int{21}
}

func (x *ExpandAllForProjectEntryResponse) GetWorktreeScanId() uint64 {
	if x != nil {
		return x.WorktreeScanId
	}
	return 0
}

type ProjectEntryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry          *Entry `protobuf:"bytes,1,opt,name=entry,proto3,oneof" json:"entry,omitempty"`
	WorktreeScanId uint64 `protobuf:"varint,2,opt,name=worktree_scan_id,json=worktreeScanId,proto3" json:"worktree_scan_id,omitempty"`
}

func (x *ProjectEntryResponse) Reset() {
	*x = ProjectEntryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worktree_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectEntryResponse) ProtoMessage() {}

func (x *ProjectEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_worktree_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectEntryResponse.ProtoReflect.Descriptor instead.
func (*ProjectEntryResponse) Descriptor() ([]byte, []int) {
	return file_worktree_proto_rawDescGZIP(), []int{22}
}

func (x *ProjectEntryResponse) GetEntry() *Entry {
	if x != nil {
		return x.Entry
	}
	return nil
}

func (x *ProjectEntryResponse) GetWorktreeScanId() uint64 {
	if x != nil {
		return x.WorktreeScanId
	}
	return 0
}

type UpdateWorktreeSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId  uint64             `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	WorktreeId uint64             `protobuf:"varint,2,opt,name=worktree_id,json=worktreeId,proto3" json:"worktree_id,omitempty"`
	Path       string             `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Content    *string            `protobuf:"bytes,4,opt,name=content,proto3,oneof" json:"content,omitempty"`
	Kind       *LocalSettingsKind `protobuf:"varint,5,opt,name=kind,proto3,enum=zed.messages.LocalSettingsKind,oneof" json:"kind,omitempty"`
}

func (x *UpdateWorktreeSettings) Reset() {
	*x = UpdateWorktreeSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worktree_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWorktreeSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorktreeSettings) ProtoMessage() {}

func (x *UpdateWorktreeSettings) ProtoReflect() protoreflect.Message {
	mi := &file_worktree_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorktreeSettings.ProtoReflect.Descriptor instead.
func (*UpdateWorktreeSettings) Descriptor() ([]byte, []int) {
	return file_worktree_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateWorktreeSettings) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *UpdateWorktreeSettings) GetWorktreeId() uint64 {
	if x != nil {
		return x.WorktreeId
	}
	return 0
}

func (x *UpdateWorktreeSettings) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *UpdateWorktreeSettings) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

func (x *UpdateWorktreeSettings) GetKind() LocalSettingsKind {
	if x != nil && x.Kind != nil {
		return *x.Kind
	}
	return LocalSettingsKind_Settings
}

var File_worktree_proto protoreflect.FileDescriptor

var file_worktree_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x74, 0x72, 0x65, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0c, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x3b,
	0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6e, 0x6f, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x61, 0x6e, 0x6f, 0x73, 0x22, 0xb6, 0x01, 0x0a, 0x04,
	0x46, 0x69, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x74, 0x72, 0x65, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x74,
	0x72, 0x65, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x79,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x2d, 0x0a, 0x05, 0x6d, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x05, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x65, 0x6e, 0x74, 0x72,
	0x79, 0x5f, 0x69, 0x64, 0x22, 0xcd, 0x02, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15,
	0x0a, 0x06, 0x69, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x69, 0x73, 0x44, 0x69, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x6f,
	0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x12,
	0x2d, 0x0a, 0x05, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x69, 0x73, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x12, 0x17,
	0x0a, 0x07, 0x69, 0x73, 0x5f, 0x66, 0x69, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x69, 0x73, 0x46, 0x69, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x2a, 0x0a, 0x0e, 0x63, 0x61, 0x6e, 0x6f, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0d, 0x63, 0x61, 0x6e, 0x6f,
	0x6e, 0x69, 0x63, 0x61, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x63, 0x61, 0x6e, 0x6f, 0x6e, 0x69,
	0x63, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x4a, 0x04, 0x08, 0x06, 0x10, 0x07, 0x4a, 0x04,
	0x08, 0x09, 0x10, 0x0a, 0x22, 0x5a, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x74,
	0x72, 0x65, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65,
	0x22, 0x65, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x74, 0x72, 0x65, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x74,
	0x72, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x77, 0x6f,
	0x72, 0x6b, 0x74, 0x72, 0x65, 0x65, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x61, 0x6e, 0x6f,
	0x6e, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x61, 0x6e, 0x6f, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x64, 0x50, 0x61, 0x74, 0x68, 0x22, 0x31, 0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x57, 0x6f, 0x72, 0x6b, 0x74, 0x72, 0x65, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x6f, 0x72,
	0x6b, 0x74, 0x72, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x77, 0x6f, 0x72, 0x6b, 0x74, 0x72, 0x65, 0x65, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x22, 0x5c, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65,
	0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x78, 0x69,
	0x73, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x64, 0x69,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x44, 0x69, 0x72, 0x22, 0x74,
	0x0a, 0x10, 0x57, 0x6f, 0x72, 0x6b, 0x74, 0x72, 0x65, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x62, 0x73,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x62, 0x73,
	0x50, 0x61, 0x74, 0x68, 0x22, 0x42, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x74, 0x72, 0x65, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x74, 0x72,
	0x65, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x32, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x44, 0x69, 0x72, 0x22, 0x8e, 0x01, 0x0a,
	0x13, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x12, 0x22, 0x0a, 0x0d, 0x64, 0x65, 0x76, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x64, 0x65, 0x76,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x3f, 0x0a, 0x06,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x7a,
	0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x22, 0x0a,
	0x09, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73,
	0x5f, 0x64, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x44, 0x69,
	0x72, 0x22, 0x6f, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x0a, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x8b, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b,
	0x74, 0x72, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x77,
	0x6f, 0x72, 0x6b, 0x74, 0x72, 0x65, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x21, 0x0a,
	0x0c, 0x69, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x22, 0x69, 0x0a, 0x12, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x74, 0x68, 0x22, 0xd1, 0x01, 0x0a, 0x10,
	0x43, 0x6f, 0x70, 0x79, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65,
	0x77, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65,
	0x77, 0x50, 0x61, 0x74, 0x68, 0x12, 0x46, 0x0a, 0x1d, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x74, 0x72, 0x65, 0x65, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x1a,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x74, 0x72, 0x65, 0x65,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x88, 0x01, 0x01, 0x42, 0x20, 0x0a,
	0x1e, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x74,
	0x72, 0x65, 0x65, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x22,
	0x6b, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x75, 0x73, 0x65, 0x54, 0x72, 0x61, 0x73, 0x68, 0x22, 0x4e, 0x0a, 0x12,
	0x45, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x1a,
	0x45, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x77, 0x6f,
	0x72, 0x6b, 0x74, 0x72, 0x65, 0x65, 0x5f, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x74, 0x72, 0x65, 0x65, 0x53, 0x63,
	0x61, 0x6e, 0x49, 0x64, 0x22, 0x54, 0x0a, 0x18, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x41, 0x6c,
	0x6c, 0x46, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x64, 0x22, 0x4c, 0x0a, 0x20, 0x45, 0x78,
	0x70, 0x61, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x46, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28,
	0x0a, 0x10, 0x77, 0x6f, 0x72, 0x6b, 0x74, 0x72, 0x65, 0x65, 0x5f, 0x73, 0x63, 0x61, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x74, 0x72,
	0x65, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x49, 0x64, 0x22, 0x7a, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2e, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x48, 0x00, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x88, 0x01, 0x01,
	0x12, 0x28, 0x0a, 0x10, 0x77, 0x6f, 0x72, 0x6b, 0x74, 0x72, 0x65, 0x65, 0x5f, 0x73, 0x63, 0x61,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x77, 0x6f, 0x72, 0x6b,
	0x74, 0x72, 0x65, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x49, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65,
	0x6e, 0x74, 0x72, 0x79, 0x22, 0xda, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57,
	0x6f, 0x72, 0x6b, 0x74, 0x72, 0x65, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x74, 0x72, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x74, 0x72, 0x65, 0x65, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x38, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1f, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x4b, 0x69, 0x6e,
	0x64, 0x48, 0x01, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6b, 0x69, 0x6e,
	0x64, 0x2a, 0x3e, 0x0a, 0x11, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x10, 0x01, 0x12,
	0x10, 0x0a, 0x0c, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x10,
	0x02, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_worktree_proto_rawDescOnce sync.Once
	file_worktree_proto_rawDescData = file_worktree_proto_rawDesc
)

func file_worktree_proto_rawDescGZIP() []byte {
	file_worktree_proto_rawDescOnce.Do(func() {
		file_worktree_proto_rawDescData = protoimpl.X.CompressGZIP(file_worktree_proto_rawDescData)
	})
	return file_worktree_proto_rawDescData
}

var file_worktree_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_worktree_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_worktree_proto_goTypes = []interface{}{
	(LocalSettingsKind)(0),                   // 0: zed.messages.LocalSettingsKind
	(*Timestamp)(nil),                        // 1: zed.messages.Timestamp
	(*File)(nil),                             // 2: zed.messages.File
	(*Entry)(nil),                            // 3: zed.messages.Entry
	(*AddWorktree)(nil),                      // 4: zed.messages.AddWorktree
	(*AddWorktreeResponse)(nil),              // 5: zed.messages.AddWorktreeResponse
	(*RemoveWorktree)(nil),                   // 6: zed.messages.RemoveWorktree
	(*GetPathMetadata)(nil),                  // 7: zed.messages.GetPathMetadata
	(*GetPathMetadataResponse)(nil),          // 8: zed.messages.GetPathMetadataResponse
	(*WorktreeMetadata)(nil),                 // 9: zed.messages.WorktreeMetadata
	(*ProjectPath)(nil),                      // 10: zed.messages.ProjectPath
	(*ListRemoteDirectoryConfig)(nil),        // 11: zed.messages.ListRemoteDirectoryConfig
	(*ListRemoteDirectory)(nil),              // 12: zed.messages.ListRemoteDirectory
	(*EntryInfo)(nil),                        // 13: zed.messages.EntryInfo
	(*ListRemoteDirectoryResponse)(nil),      // 14: zed.messages.ListRemoteDirectoryResponse
	(*CreateProjectEntry)(nil),               // 15: zed.messages.CreateProjectEntry
	(*RenameProjectEntry)(nil),               // 16: zed.messages.RenameProjectEntry
	(*CopyProjectEntry)(nil),                 // 17: zed.messages.CopyProjectEntry
	(*DeleteProjectEntry)(nil),               // 18: zed.messages.DeleteProjectEntry
	(*ExpandProjectEntry)(nil),               // 19: zed.messages.ExpandProjectEntry
	(*ExpandProjectEntryResponse)(nil),       // 20: zed.messages.ExpandProjectEntryResponse
	(*ExpandAllForProjectEntry)(nil),         // 21: zed.messages.ExpandAllForProjectEntry
	(*ExpandAllForProjectEntryResponse)(nil), // 22: zed.messages.ExpandAllForProjectEntryResponse
	(*ProjectEntryResponse)(nil),             // 23: zed.messages.ProjectEntryResponse
	(*UpdateWorktreeSettings)(nil),           // 24: zed.messages.UpdateWorktreeSettings
}
var file_worktree_proto_depIdxs = []int32{
	1,  // 0: zed.messages.File.mtime:type_name -> zed.messages.Timestamp
	1,  // 1: zed.messages.Entry.mtime:type_name -> zed.messages.Timestamp
	11, // 2: zed.messages.ListRemoteDirectory.config:type_name -> zed.messages.ListRemoteDirectoryConfig
	13, // 3: zed.messages.ListRemoteDirectoryResponse.entry_info:type_name -> zed.messages.EntryInfo
	3,  // 4: zed.messages.ProjectEntryResponse.entry:type_name -> zed.messages.Entry
	0,  // 5: zed.messages.UpdateWorktreeSettings.kind:type_name -> zed.messages.LocalSettingsKind
	6,  // [6:6] is the sub-list for method output_type
	6,  // [6:6] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_worktree_proto_init() }
func file_worktree_proto_init() {
	if File_worktree_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_worktree_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Timestamp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worktree_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worktree_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Entry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worktree_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddWorktree); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worktree_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddWorktreeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worktree_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveWorktree); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worktree_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPathMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worktree_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPathMetadataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worktree_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorktreeMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worktree_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectPath); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worktree_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRemoteDirectoryConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worktree_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRemoteDirectory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worktree_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntryInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worktree_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRemoteDirectoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worktree_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProjectEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worktree_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenameProjectEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worktree_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CopyProjectEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worktree_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProjectEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worktree_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpandProjectEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worktree_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpandProjectEntryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worktree_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpandAllForProjectEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worktree_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpandAllForProjectEntryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worktree_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectEntryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worktree_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWorktreeSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_worktree_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_worktree_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_worktree_proto_msgTypes[16].OneofWrappers = []interface{}{}
	file_worktree_proto_msgTypes[22].OneofWrappers = []interface{}{}
	file_worktree_proto_msgTypes[23].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_worktree_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_worktree_proto_goTypes,
		DependencyIndexes: file_worktree_proto_depIdxs,
		EnumInfos:         file_worktree_proto_enumTypes,
		MessageInfos:      file_worktree_proto_msgTypes,
	}.Build()
	File_worktree_proto = out.File
	file_worktree_proto_rawDesc = nil
	file_worktree_proto_goTypes = nil
	file_worktree_proto_depIdxs = nil
}
