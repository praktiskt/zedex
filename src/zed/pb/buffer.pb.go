// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v3.21.12
// source: buffer.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LineEnding int32

const (
	LineEnding_Unix    LineEnding = 0
	LineEnding_Windows LineEnding = 1
)

// Enum value maps for LineEnding.
var (
	LineEnding_name = map[int32]string{
		0: "Unix",
		1: "Windows",
	}
	LineEnding_value = map[string]int32{
		"Unix":    0,
		"Windows": 1,
	}
)

func (x LineEnding) Enum() *LineEnding {
	p := new(LineEnding)
	*p = x
	return p
}

func (x LineEnding) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LineEnding) Descriptor() protoreflect.EnumDescriptor {
	return file_buffer_proto_enumTypes[0].Descriptor()
}

func (LineEnding) Type() protoreflect.EnumType {
	return &file_buffer_proto_enumTypes[0]
}

func (x LineEnding) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LineEnding.Descriptor instead.
func (LineEnding) EnumDescriptor() ([]byte, []int) {
	return file_buffer_proto_rawDescGZIP(), []int{0}
}

type CursorShape int32

const (
	CursorShape_CursorBar        CursorShape = 0
	CursorShape_CursorBlock      CursorShape = 1
	CursorShape_CursorUnderscore CursorShape = 2
	CursorShape_CursorHollow     CursorShape = 3
)

// Enum value maps for CursorShape.
var (
	CursorShape_name = map[int32]string{
		0: "CursorBar",
		1: "CursorBlock",
		2: "CursorUnderscore",
		3: "CursorHollow",
	}
	CursorShape_value = map[string]int32{
		"CursorBar":        0,
		"CursorBlock":      1,
		"CursorUnderscore": 2,
		"CursorHollow":     3,
	}
)

func (x CursorShape) Enum() *CursorShape {
	p := new(CursorShape)
	*p = x
	return p
}

func (x CursorShape) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CursorShape) Descriptor() protoreflect.EnumDescriptor {
	return file_buffer_proto_enumTypes[1].Descriptor()
}

func (CursorShape) Type() protoreflect.EnumType {
	return &file_buffer_proto_enumTypes[1]
}

func (x CursorShape) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CursorShape.Descriptor instead.
func (CursorShape) EnumDescriptor() ([]byte, []int) {
	return file_buffer_proto_rawDescGZIP(), []int{1}
}

type Bias int32

const (
	Bias_Left  Bias = 0
	Bias_Right Bias = 1
)

// Enum value maps for Bias.
var (
	Bias_name = map[int32]string{
		0: "Left",
		1: "Right",
	}
	Bias_value = map[string]int32{
		"Left":  0,
		"Right": 1,
	}
)

func (x Bias) Enum() *Bias {
	p := new(Bias)
	*p = x
	return p
}

func (x Bias) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Bias) Descriptor() protoreflect.EnumDescriptor {
	return file_buffer_proto_enumTypes[2].Descriptor()
}

func (Bias) Type() protoreflect.EnumType {
	return &file_buffer_proto_enumTypes[2]
}

func (x Bias) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Bias.Descriptor instead.
func (Bias) EnumDescriptor() ([]byte, []int) {
	return file_buffer_proto_rawDescGZIP(), []int{2}
}

type Diagnostic_SourceKind int32

const (
	Diagnostic_Pulled Diagnostic_SourceKind = 0
	Diagnostic_Pushed Diagnostic_SourceKind = 1
	Diagnostic_Other  Diagnostic_SourceKind = 2
)

// Enum value maps for Diagnostic_SourceKind.
var (
	Diagnostic_SourceKind_name = map[int32]string{
		0: "Pulled",
		1: "Pushed",
		2: "Other",
	}
	Diagnostic_SourceKind_value = map[string]int32{
		"Pulled": 0,
		"Pushed": 1,
		"Other":  2,
	}
)

func (x Diagnostic_SourceKind) Enum() *Diagnostic_SourceKind {
	p := new(Diagnostic_SourceKind)
	*p = x
	return p
}

func (x Diagnostic_SourceKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Diagnostic_SourceKind) Descriptor() protoreflect.EnumDescriptor {
	return file_buffer_proto_enumTypes[3].Descriptor()
}

func (Diagnostic_SourceKind) Type() protoreflect.EnumType {
	return &file_buffer_proto_enumTypes[3]
}

func (x Diagnostic_SourceKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Diagnostic_SourceKind.Descriptor instead.
func (Diagnostic_SourceKind) EnumDescriptor() ([]byte, []int) {
	return file_buffer_proto_rawDescGZIP(), []int{32, 0}
}

type Diagnostic_Severity int32

const (
	Diagnostic_None        Diagnostic_Severity = 0
	Diagnostic_Error       Diagnostic_Severity = 1
	Diagnostic_Warning     Diagnostic_Severity = 2
	Diagnostic_Information Diagnostic_Severity = 3
	Diagnostic_Hint        Diagnostic_Severity = 4
)

// Enum value maps for Diagnostic_Severity.
var (
	Diagnostic_Severity_name = map[int32]string{
		0: "None",
		1: "Error",
		2: "Warning",
		3: "Information",
		4: "Hint",
	}
	Diagnostic_Severity_value = map[string]int32{
		"None":        0,
		"Error":       1,
		"Warning":     2,
		"Information": 3,
		"Hint":        4,
	}
)

func (x Diagnostic_Severity) Enum() *Diagnostic_Severity {
	p := new(Diagnostic_Severity)
	*p = x
	return p
}

func (x Diagnostic_Severity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Diagnostic_Severity) Descriptor() protoreflect.EnumDescriptor {
	return file_buffer_proto_enumTypes[4].Descriptor()
}

func (Diagnostic_Severity) Type() protoreflect.EnumType {
	return &file_buffer_proto_enumTypes[4]
}

func (x Diagnostic_Severity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Diagnostic_Severity.Descriptor instead.
func (Diagnostic_Severity) EnumDescriptor() ([]byte, []int) {
	return file_buffer_proto_rawDescGZIP(), []int{32, 1}
}

type OpenNewBuffer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint64 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *OpenNewBuffer) Reset() {
	*x = OpenNewBuffer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buffer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenNewBuffer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenNewBuffer) ProtoMessage() {}

func (x *OpenNewBuffer) ProtoReflect() protoreflect.Message {
	mi := &file_buffer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenNewBuffer.ProtoReflect.Descriptor instead.
func (*OpenNewBuffer) Descriptor() ([]byte, []int) {
	return file_buffer_proto_rawDescGZIP(), []int{0}
}

func (x *OpenNewBuffer) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

type OpenBufferResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BufferId uint64 `protobuf:"varint,1,opt,name=buffer_id,json=bufferId,proto3" json:"buffer_id,omitempty"`
}

func (x *OpenBufferResponse) Reset() {
	*x = OpenBufferResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buffer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenBufferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenBufferResponse) ProtoMessage() {}

func (x *OpenBufferResponse) ProtoReflect() protoreflect.Message {
	mi := &file_buffer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenBufferResponse.ProtoReflect.Descriptor instead.
func (*OpenBufferResponse) Descriptor() ([]byte, []int) {
	return file_buffer_proto_rawDescGZIP(), []int{1}
}

func (x *OpenBufferResponse) GetBufferId() uint64 {
	if x != nil {
		return x.BufferId
	}
	return 0
}

type CreateBufferForPeer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint64  `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	PeerId    *PeerId `protobuf:"bytes,2,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	// Types that are assignable to Variant:
	//
	//	*CreateBufferForPeer_State
	//	*CreateBufferForPeer_Chunk
	Variant isCreateBufferForPeer_Variant `protobuf_oneof:"variant"`
}

func (x *CreateBufferForPeer) Reset() {
	*x = CreateBufferForPeer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buffer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBufferForPeer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBufferForPeer) ProtoMessage() {}

func (x *CreateBufferForPeer) ProtoReflect() protoreflect.Message {
	mi := &file_buffer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBufferForPeer.ProtoReflect.Descriptor instead.
func (*CreateBufferForPeer) Descriptor() ([]byte, []int) {
	return file_buffer_proto_rawDescGZIP(), []int{2}
}

func (x *CreateBufferForPeer) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *CreateBufferForPeer) GetPeerId() *PeerId {
	if x != nil {
		return x.PeerId
	}
	return nil
}

func (m *CreateBufferForPeer) GetVariant() isCreateBufferForPeer_Variant {
	if m != nil {
		return m.Variant
	}
	return nil
}

func (x *CreateBufferForPeer) GetState() *BufferState {
	if x, ok := x.GetVariant().(*CreateBufferForPeer_State); ok {
		return x.State
	}
	return nil
}

func (x *CreateBufferForPeer) GetChunk() *BufferChunk {
	if x, ok := x.GetVariant().(*CreateBufferForPeer_Chunk); ok {
		return x.Chunk
	}
	return nil
}

type isCreateBufferForPeer_Variant interface {
	isCreateBufferForPeer_Variant()
}

type CreateBufferForPeer_State struct {
	State *BufferState `protobuf:"bytes,3,opt,name=state,proto3,oneof"`
}

type CreateBufferForPeer_Chunk struct {
	Chunk *BufferChunk `protobuf:"bytes,4,opt,name=chunk,proto3,oneof"`
}

func (*CreateBufferForPeer_State) isCreateBufferForPeer_Variant() {}

func (*CreateBufferForPeer_Chunk) isCreateBufferForPeer_Variant() {}

type UpdateBuffer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId  uint64       `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	BufferId   uint64       `protobuf:"varint,2,opt,name=buffer_id,json=bufferId,proto3" json:"buffer_id,omitempty"`
	Operations []*Operation `protobuf:"bytes,3,rep,name=operations,proto3" json:"operations,omitempty"`
}

func (x *UpdateBuffer) Reset() {
	*x = UpdateBuffer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buffer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBuffer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBuffer) ProtoMessage() {}

func (x *UpdateBuffer) ProtoReflect() protoreflect.Message {
	mi := &file_buffer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBuffer.ProtoReflect.Descriptor instead.
func (*UpdateBuffer) Descriptor() ([]byte, []int) {
	return file_buffer_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateBuffer) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *UpdateBuffer) GetBufferId() uint64 {
	if x != nil {
		return x.BufferId
	}
	return 0
}

func (x *UpdateBuffer) GetOperations() []*Operation {
	if x != nil {
		return x.Operations
	}
	return nil
}

type OpenBufferByPath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId  uint64 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	WorktreeId uint64 `protobuf:"varint,2,opt,name=worktree_id,json=worktreeId,proto3" json:"worktree_id,omitempty"`
	Path       string `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *OpenBufferByPath) Reset() {
	*x = OpenBufferByPath{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buffer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenBufferByPath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenBufferByPath) ProtoMessage() {}

func (x *OpenBufferByPath) ProtoReflect() protoreflect.Message {
	mi := &file_buffer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenBufferByPath.ProtoReflect.Descriptor instead.
func (*OpenBufferByPath) Descriptor() ([]byte, []int) {
	return file_buffer_proto_rawDescGZIP(), []int{4}
}

func (x *OpenBufferByPath) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *OpenBufferByPath) GetWorktreeId() uint64 {
	if x != nil {
		return x.WorktreeId
	}
	return 0
}

func (x *OpenBufferByPath) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type OpenBufferById struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint64 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id        uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *OpenBufferById) Reset() {
	*x = OpenBufferById{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buffer_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenBufferById) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenBufferById) ProtoMessage() {}

func (x *OpenBufferById) ProtoReflect() protoreflect.Message {
	mi := &file_buffer_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenBufferById.ProtoReflect.Descriptor instead.
func (*OpenBufferById) Descriptor() ([]byte, []int) {
	return file_buffer_proto_rawDescGZIP(), []int{5}
}

func (x *OpenBufferById) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *OpenBufferById) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateBufferFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint64 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	BufferId  uint64 `protobuf:"varint,2,opt,name=buffer_id,json=bufferId,proto3" json:"buffer_id,omitempty"`
	File      *File  `protobuf:"bytes,3,opt,name=file,proto3" json:"file,omitempty"`
}

func (x *UpdateBufferFile) Reset() {
	*x = UpdateBufferFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buffer_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBufferFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBufferFile) ProtoMessage() {}

func (x *UpdateBufferFile) ProtoReflect() protoreflect.Message {
	mi := &file_buffer_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBufferFile.ProtoReflect.Descriptor instead.
func (*UpdateBufferFile) Descriptor() ([]byte, []int) {
	return file_buffer_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateBufferFile) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *UpdateBufferFile) GetBufferId() uint64 {
	if x != nil {
		return x.BufferId
	}
	return 0
}

func (x *UpdateBufferFile) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

type SaveBuffer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint64              `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	BufferId  uint64              `protobuf:"varint,2,opt,name=buffer_id,json=bufferId,proto3" json:"buffer_id,omitempty"`
	Version   []*VectorClockEntry `protobuf:"bytes,3,rep,name=version,proto3" json:"version,omitempty"`
	NewPath   *ProjectPath        `protobuf:"bytes,4,opt,name=new_path,json=newPath,proto3,oneof" json:"new_path,omitempty"`
}

func (x *SaveBuffer) Reset() {
	*x = SaveBuffer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buffer_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveBuffer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveBuffer) ProtoMessage() {}

func (x *SaveBuffer) ProtoReflect() protoreflect.Message {
	mi := &file_buffer_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveBuffer.ProtoReflect.Descriptor instead.
func (*SaveBuffer) Descriptor() ([]byte, []int) {
	return file_buffer_proto_rawDescGZIP(), []int{7}
}

func (x *SaveBuffer) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *SaveBuffer) GetBufferId() uint64 {
	if x != nil {
		return x.BufferId
	}
	return 0
}

func (x *SaveBuffer) GetVersion() []*VectorClockEntry {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *SaveBuffer) GetNewPath() *ProjectPath {
	if x != nil {
		return x.NewPath
	}
	return nil
}

type CloseBuffer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint64 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	BufferId  uint64 `protobuf:"varint,2,opt,name=buffer_id,json=bufferId,proto3" json:"buffer_id,omitempty"`
}

func (x *CloseBuffer) Reset() {
	*x = CloseBuffer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buffer_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseBuffer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseBuffer) ProtoMessage() {}

func (x *CloseBuffer) ProtoReflect() protoreflect.Message {
	mi := &file_buffer_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseBuffer.ProtoReflect.Descriptor instead.
func (*CloseBuffer) Descriptor() ([]byte, []int) {
	return file_buffer_proto_rawDescGZIP(), []int{8}
}

func (x *CloseBuffer) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *CloseBuffer) GetBufferId() uint64 {
	if x != nil {
		return x.BufferId
	}
	return 0
}

type BufferSaved struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint64              `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	BufferId  uint64              `protobuf:"varint,2,opt,name=buffer_id,json=bufferId,proto3" json:"buffer_id,omitempty"`
	Version   []*VectorClockEntry `protobuf:"bytes,3,rep,name=version,proto3" json:"version,omitempty"`
	Mtime     *Timestamp          `protobuf:"bytes,4,opt,name=mtime,proto3" json:"mtime,omitempty"`
}

func (x *BufferSaved) Reset() {
	*x = BufferSaved{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buffer_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BufferSaved) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BufferSaved) ProtoMessage() {}

func (x *BufferSaved) ProtoReflect() protoreflect.Message {
	mi := &file_buffer_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BufferSaved.ProtoReflect.Descriptor instead.
func (*BufferSaved) Descriptor() ([]byte, []int) {
	return file_buffer_proto_rawDescGZIP(), []int{9}
}

func (x *BufferSaved) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *BufferSaved) GetBufferId() uint64 {
	if x != nil {
		return x.BufferId
	}
	return 0
}

func (x *BufferSaved) GetVersion() []*VectorClockEntry {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *BufferSaved) GetMtime() *Timestamp {
	if x != nil {
		return x.Mtime
	}
	return nil
}

type BufferReloaded struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId  uint64              `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	BufferId   uint64              `protobuf:"varint,2,opt,name=buffer_id,json=bufferId,proto3" json:"buffer_id,omitempty"`
	Version    []*VectorClockEntry `protobuf:"bytes,3,rep,name=version,proto3" json:"version,omitempty"`
	Mtime      *Timestamp          `protobuf:"bytes,4,opt,name=mtime,proto3" json:"mtime,omitempty"`
	LineEnding LineEnding          `protobuf:"varint,6,opt,name=line_ending,json=lineEnding,proto3,enum=zed.messages.LineEnding" json:"line_ending,omitempty"`
}

func (x *BufferReloaded) Reset() {
	*x = BufferReloaded{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buffer_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BufferReloaded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BufferReloaded) ProtoMessage() {}

func (x *BufferReloaded) ProtoReflect() protoreflect.Message {
	mi := &file_buffer_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BufferReloaded.ProtoReflect.Descriptor instead.
func (*BufferReloaded) Descriptor() ([]byte, []int) {
	return file_buffer_proto_rawDescGZIP(), []int{10}
}

func (x *BufferReloaded) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *BufferReloaded) GetBufferId() uint64 {
	if x != nil {
		return x.BufferId
	}
	return 0
}

func (x *BufferReloaded) GetVersion() []*VectorClockEntry {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *BufferReloaded) GetMtime() *Timestamp {
	if x != nil {
		return x.Mtime
	}
	return nil
}

func (x *BufferReloaded) GetLineEnding() LineEnding {
	if x != nil {
		return x.LineEnding
	}
	return LineEnding_Unix
}

type ReloadBuffers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint64   `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	BufferIds []uint64 `protobuf:"varint,2,rep,packed,name=buffer_ids,json=bufferIds,proto3" json:"buffer_ids,omitempty"`
}

func (x *ReloadBuffers) Reset() {
	*x = ReloadBuffers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buffer_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReloadBuffers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReloadBuffers) ProtoMessage() {}

func (x *ReloadBuffers) ProtoReflect() protoreflect.Message {
	mi := &file_buffer_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReloadBuffers.ProtoReflect.Descriptor instead.
func (*ReloadBuffers) Descriptor() ([]byte, []int) {
	return file_buffer_proto_rawDescGZIP(), []int{11}
}

func (x *ReloadBuffers) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ReloadBuffers) GetBufferIds() []uint64 {
	if x != nil {
		return x.BufferIds
	}
	return nil
}

type ReloadBuffersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transaction *ProjectTransaction `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
}

func (x *ReloadBuffersResponse) Reset() {
	*x = ReloadBuffersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buffer_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReloadBuffersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReloadBuffersResponse) ProtoMessage() {}

func (x *ReloadBuffersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_buffer_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReloadBuffersResponse.ProtoReflect.Descriptor instead.
func (*ReloadBuffersResponse) Descriptor() ([]byte, []int) {
	return file_buffer_proto_rawDescGZIP(), []int{12}
}

func (x *ReloadBuffersResponse) GetTransaction() *ProjectTransaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type SynchronizeBuffers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint64           `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Buffers   []*BufferVersion `protobuf:"bytes,2,rep,name=buffers,proto3" json:"buffers,omitempty"`
}

func (x *SynchronizeBuffers) Reset() {
	*x = SynchronizeBuffers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buffer_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SynchronizeBuffers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SynchronizeBuffers) ProtoMessage() {}

func (x *SynchronizeBuffers) ProtoReflect() protoreflect.Message {
	mi := &file_buffer_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SynchronizeBuffers.ProtoReflect.Descriptor instead.
func (*SynchronizeBuffers) Descriptor() ([]byte, []int) {
	return file_buffer_proto_rawDescGZIP(), []int{13}
}

func (x *SynchronizeBuffers) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *SynchronizeBuffers) GetBuffers() []*BufferVersion {
	if x != nil {
		return x.Buffers
	}
	return nil
}

type SynchronizeBuffersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Buffers []*BufferVersion `protobuf:"bytes,1,rep,name=buffers,proto3" json:"buffers,omitempty"`
}

func (x *SynchronizeBuffersResponse) Reset() {
	*x = SynchronizeBuffersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buffer_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SynchronizeBuffersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SynchronizeBuffersResponse) ProtoMessage() {}

func (x *SynchronizeBuffersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_buffer_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SynchronizeBuffersResponse.ProtoReflect.Descriptor instead.
func (*SynchronizeBuffersResponse) Descriptor() ([]byte, []int) {
	return file_buffer_proto_rawDescGZIP(), []int{14}
}

func (x *SynchronizeBuffersResponse) GetBuffers() []*BufferVersion {
	if x != nil {
		return x.Buffers
	}
	return nil
}

type BufferVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      uint64              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Version []*VectorClockEntry `protobuf:"bytes,2,rep,name=version,proto3" json:"version,omitempty"`
}

func (x *BufferVersion) Reset() {
	*x = BufferVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buffer_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BufferVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BufferVersion) ProtoMessage() {}

func (x *BufferVersion) ProtoReflect() protoreflect.Message {
	mi := &file_buffer_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BufferVersion.ProtoReflect.Descriptor instead.
func (*BufferVersion) Descriptor() ([]byte, []int) {
	return file_buffer_proto_rawDescGZIP(), []int{15}
}

func (x *BufferVersion) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BufferVersion) GetVersion() []*VectorClockEntry {
	if x != nil {
		return x.Version
	}
	return nil
}

type BufferState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint64              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	File         *File               `protobuf:"bytes,2,opt,name=file,proto3,oneof" json:"file,omitempty"`
	BaseText     string              `protobuf:"bytes,3,opt,name=base_text,json=baseText,proto3" json:"base_text,omitempty"`
	LineEnding   LineEnding          `protobuf:"varint,5,opt,name=line_ending,json=lineEnding,proto3,enum=zed.messages.LineEnding" json:"line_ending,omitempty"`
	SavedVersion []*VectorClockEntry `protobuf:"bytes,6,rep,name=saved_version,json=savedVersion,proto3" json:"saved_version,omitempty"`
	SavedMtime   *Timestamp          `protobuf:"bytes,8,opt,name=saved_mtime,json=savedMtime,proto3" json:"saved_mtime,omitempty"`
}

func (x *BufferState) Reset() {
	*x = BufferState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buffer_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BufferState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BufferState) ProtoMessage() {}

func (x *BufferState) ProtoReflect() protoreflect.Message {
	mi := &file_buffer_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BufferState.ProtoReflect.Descriptor instead.
func (*BufferState) Descriptor() ([]byte, []int) {
	return file_buffer_proto_rawDescGZIP(), []int{16}
}

func (x *BufferState) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BufferState) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *BufferState) GetBaseText() string {
	if x != nil {
		return x.BaseText
	}
	return ""
}

func (x *BufferState) GetLineEnding() LineEnding {
	if x != nil {
		return x.LineEnding
	}
	return LineEnding_Unix
}

func (x *BufferState) GetSavedVersion() []*VectorClockEntry {
	if x != nil {
		return x.SavedVersion
	}
	return nil
}

func (x *BufferState) GetSavedMtime() *Timestamp {
	if x != nil {
		return x.SavedMtime
	}
	return nil
}

type BufferChunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BufferId   uint64       `protobuf:"varint,1,opt,name=buffer_id,json=bufferId,proto3" json:"buffer_id,omitempty"`
	Operations []*Operation `protobuf:"bytes,2,rep,name=operations,proto3" json:"operations,omitempty"`
	IsLast     bool         `protobuf:"varint,3,opt,name=is_last,json=isLast,proto3" json:"is_last,omitempty"`
}

func (x *BufferChunk) Reset() {
	*x = BufferChunk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buffer_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BufferChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BufferChunk) ProtoMessage() {}

func (x *BufferChunk) ProtoReflect() protoreflect.Message {
	mi := &file_buffer_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BufferChunk.ProtoReflect.Descriptor instead.
func (*BufferChunk) Descriptor() ([]byte, []int) {
	return file_buffer_proto_rawDescGZIP(), []int{17}
}

func (x *BufferChunk) GetBufferId() uint64 {
	if x != nil {
		return x.BufferId
	}
	return 0
}

func (x *BufferChunk) GetOperations() []*Operation {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *BufferChunk) GetIsLast() bool {
	if x != nil {
		return x.IsLast
	}
	return false
}

type VectorClockEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplicaId uint32 `protobuf:"varint,1,opt,name=replica_id,json=replicaId,proto3" json:"replica_id,omitempty"`
	Timestamp uint32 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *VectorClockEntry) Reset() {
	*x = VectorClockEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buffer_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VectorClockEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VectorClockEntry) ProtoMessage() {}

func (x *VectorClockEntry) ProtoReflect() protoreflect.Message {
	mi := &file_buffer_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VectorClockEntry.ProtoReflect.Descriptor instead.
func (*VectorClockEntry) Descriptor() ([]byte, []int) {
	return file_buffer_proto_rawDescGZIP(), []int{18}
}

func (x *VectorClockEntry) GetReplicaId() uint32 {
	if x != nil {
		return x.ReplicaId
	}
	return 0
}

func (x *VectorClockEntry) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type UndoMapEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplicaId      uint32       `protobuf:"varint,1,opt,name=replica_id,json=replicaId,proto3" json:"replica_id,omitempty"`
	LocalTimestamp uint32       `protobuf:"varint,2,opt,name=local_timestamp,json=localTimestamp,proto3" json:"local_timestamp,omitempty"`
	Counts         []*UndoCount `protobuf:"bytes,3,rep,name=counts,proto3" json:"counts,omitempty"`
}

func (x *UndoMapEntry) Reset() {
	*x = UndoMapEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buffer_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UndoMapEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UndoMapEntry) ProtoMessage() {}

func (x *UndoMapEntry) ProtoReflect() protoreflect.Message {
	mi := &file_buffer_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UndoMapEntry.ProtoReflect.Descriptor instead.
func (*UndoMapEntry) Descriptor() ([]byte, []int) {
	return file_buffer_proto_rawDescGZIP(), []int{19}
}

func (x *UndoMapEntry) GetReplicaId() uint32 {
	if x != nil {
		return x.ReplicaId
	}
	return 0
}

func (x *UndoMapEntry) GetLocalTimestamp() uint32 {
	if x != nil {
		return x.LocalTimestamp
	}
	return 0
}

func (x *UndoMapEntry) GetCounts() []*UndoCount {
	if x != nil {
		return x.Counts
	}
	return nil
}

type UndoCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplicaId        uint32 `protobuf:"varint,1,opt,name=replica_id,json=replicaId,proto3" json:"replica_id,omitempty"`
	LamportTimestamp uint32 `protobuf:"varint,2,opt,name=lamport_timestamp,json=lamportTimestamp,proto3" json:"lamport_timestamp,omitempty"`
	Count            uint32 `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *UndoCount) Reset() {
	*x = UndoCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buffer_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UndoCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UndoCount) ProtoMessage() {}

func (x *UndoCount) ProtoReflect() protoreflect.Message {
	mi := &file_buffer_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UndoCount.ProtoReflect.Descriptor instead.
func (*UndoCount) Descriptor() ([]byte, []int) {
	return file_buffer_proto_rawDescGZIP(), []int{20}
}

func (x *UndoCount) GetReplicaId() uint32 {
	if x != nil {
		return x.ReplicaId
	}
	return 0
}

func (x *UndoCount) GetLamportTimestamp() uint32 {
	if x != nil {
		return x.LamportTimestamp
	}
	return 0
}

func (x *UndoCount) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type Operation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Variant:
	//
	//	*Operation_Edit_
	//	*Operation_Undo_
	//	*Operation_UpdateSelections_
	//	*Operation_UpdateDiagnostics
	//	*Operation_UpdateCompletionTriggers_
	Variant isOperation_Variant `protobuf_oneof:"variant"`
}

func (x *Operation) Reset() {
	*x = Operation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buffer_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation) ProtoMessage() {}

func (x *Operation) ProtoReflect() protoreflect.Message {
	mi := &file_buffer_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operation.ProtoReflect.Descriptor instead.
func (*Operation) Descriptor() ([]byte, []int) {
	return file_buffer_proto_rawDescGZIP(), []int{21}
}

func (m *Operation) GetVariant() isOperation_Variant {
	if m != nil {
		return m.Variant
	}
	return nil
}

func (x *Operation) GetEdit() *Operation_Edit {
	if x, ok := x.GetVariant().(*Operation_Edit_); ok {
		return x.Edit
	}
	return nil
}

func (x *Operation) GetUndo() *Operation_Undo {
	if x, ok := x.GetVariant().(*Operation_Undo_); ok {
		return x.Undo
	}
	return nil
}

func (x *Operation) GetUpdateSelections() *Operation_UpdateSelections {
	if x, ok := x.GetVariant().(*Operation_UpdateSelections_); ok {
		return x.UpdateSelections
	}
	return nil
}

func (x *Operation) GetUpdateDiagnostics() *UpdateDiagnostics {
	if x, ok := x.GetVariant().(*Operation_UpdateDiagnostics); ok {
		return x.UpdateDiagnostics
	}
	return nil
}

func (x *Operation) GetUpdateCompletionTriggers() *Operation_UpdateCompletionTriggers {
	if x, ok := x.GetVariant().(*Operation_UpdateCompletionTriggers_); ok {
		return x.UpdateCompletionTriggers
	}
	return nil
}

type isOperation_Variant interface {
	isOperation_Variant()
}

type Operation_Edit_ struct {
	Edit *Operation_Edit `protobuf:"bytes,1,opt,name=edit,proto3,oneof"`
}

type Operation_Undo_ struct {
	Undo *Operation_Undo `protobuf:"bytes,2,opt,name=undo,proto3,oneof"`
}

type Operation_UpdateSelections_ struct {
	UpdateSelections *Operation_UpdateSelections `protobuf:"bytes,3,opt,name=update_selections,json=updateSelections,proto3,oneof"`
}

type Operation_UpdateDiagnostics struct {
	UpdateDiagnostics *UpdateDiagnostics `protobuf:"bytes,4,opt,name=update_diagnostics,json=updateDiagnostics,proto3,oneof"`
}

type Operation_UpdateCompletionTriggers_ struct {
	UpdateCompletionTriggers *Operation_UpdateCompletionTriggers `protobuf:"bytes,5,opt,name=update_completion_triggers,json=updateCompletionTriggers,proto3,oneof"`
}

func (*Operation_Edit_) isOperation_Variant() {}

func (*Operation_Undo_) isOperation_Variant() {}

func (*Operation_UpdateSelections_) isOperation_Variant() {}

func (*Operation_UpdateDiagnostics) isOperation_Variant() {}

func (*Operation_UpdateCompletionTriggers_) isOperation_Variant() {}

type ProjectTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BufferIds    []uint64       `protobuf:"varint,1,rep,packed,name=buffer_ids,json=bufferIds,proto3" json:"buffer_ids,omitempty"`
	Transactions []*Transaction `protobuf:"bytes,2,rep,name=transactions,proto3" json:"transactions,omitempty"`
}

func (x *ProjectTransaction) Reset() {
	*x = ProjectTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buffer_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectTransaction) ProtoMessage() {}

func (x *ProjectTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_buffer_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectTransaction.ProtoReflect.Descriptor instead.
func (*ProjectTransaction) Descriptor() ([]byte, []int) {
	return file_buffer_proto_rawDescGZIP(), []int{22}
}

func (x *ProjectTransaction) GetBufferIds() []uint64 {
	if x != nil {
		return x.BufferIds
	}
	return nil
}

func (x *ProjectTransaction) GetTransactions() []*Transaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      *LamportTimestamp   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	EditIds []*LamportTimestamp `protobuf:"bytes,2,rep,name=edit_ids,json=editIds,proto3" json:"edit_ids,omitempty"`
	Start   []*VectorClockEntry `protobuf:"bytes,3,rep,name=start,proto3" json:"start,omitempty"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buffer_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_buffer_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_buffer_proto_rawDescGZIP(), []int{23}
}

func (x *Transaction) GetId() *LamportTimestamp {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Transaction) GetEditIds() []*LamportTimestamp {
	if x != nil {
		return x.EditIds
	}
	return nil
}

func (x *Transaction) GetStart() []*VectorClockEntry {
	if x != nil {
		return x.Start
	}
	return nil
}

type LamportTimestamp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplicaId uint32 `protobuf:"varint,1,opt,name=replica_id,json=replicaId,proto3" json:"replica_id,omitempty"`
	Value     uint32 `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *LamportTimestamp) Reset() {
	*x = LamportTimestamp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buffer_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LamportTimestamp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LamportTimestamp) ProtoMessage() {}

func (x *LamportTimestamp) ProtoReflect() protoreflect.Message {
	mi := &file_buffer_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LamportTimestamp.ProtoReflect.Descriptor instead.
func (*LamportTimestamp) Descriptor() ([]byte, []int) {
	return file_buffer_proto_rawDescGZIP(), []int{24}
}

func (x *LamportTimestamp) GetReplicaId() uint32 {
	if x != nil {
		return x.ReplicaId
	}
	return 0
}

func (x *LamportTimestamp) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Range struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start uint64 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End   uint64 `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *Range) Reset() {
	*x = Range{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buffer_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Range) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Range) ProtoMessage() {}

func (x *Range) ProtoReflect() protoreflect.Message {
	mi := &file_buffer_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Range.ProtoReflect.Descriptor instead.
func (*Range) Descriptor() ([]byte, []int) {
	return file_buffer_proto_rawDescGZIP(), []int{25}
}

func (x *Range) GetStart() uint64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *Range) GetEnd() uint64 {
	if x != nil {
		return x.End
	}
	return 0
}

type Selection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint64        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Start    *EditorAnchor `protobuf:"bytes,2,opt,name=start,proto3" json:"start,omitempty"`
	End      *EditorAnchor `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
	Reversed bool          `protobuf:"varint,4,opt,name=reversed,proto3" json:"reversed,omitempty"`
}

func (x *Selection) Reset() {
	*x = Selection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buffer_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Selection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Selection) ProtoMessage() {}

func (x *Selection) ProtoReflect() protoreflect.Message {
	mi := &file_buffer_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Selection.ProtoReflect.Descriptor instead.
func (*Selection) Descriptor() ([]byte, []int) {
	return file_buffer_proto_rawDescGZIP(), []int{26}
}

func (x *Selection) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Selection) GetStart() *EditorAnchor {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *Selection) GetEnd() *EditorAnchor {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *Selection) GetReversed() bool {
	if x != nil {
		return x.Reversed
	}
	return false
}

type EditorAnchor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExcerptId uint64  `protobuf:"varint,1,opt,name=excerpt_id,json=excerptId,proto3" json:"excerpt_id,omitempty"`
	Anchor    *Anchor `protobuf:"bytes,2,opt,name=anchor,proto3" json:"anchor,omitempty"`
}

func (x *EditorAnchor) Reset() {
	*x = EditorAnchor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buffer_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditorAnchor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditorAnchor) ProtoMessage() {}

func (x *EditorAnchor) ProtoReflect() protoreflect.Message {
	mi := &file_buffer_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditorAnchor.ProtoReflect.Descriptor instead.
func (*EditorAnchor) Descriptor() ([]byte, []int) {
	return file_buffer_proto_rawDescGZIP(), []int{27}
}

func (x *EditorAnchor) GetExcerptId() uint64 {
	if x != nil {
		return x.ExcerptId
	}
	return 0
}

func (x *EditorAnchor) GetAnchor() *Anchor {
	if x != nil {
		return x.Anchor
	}
	return nil
}

type UpdateDiagnostics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplicaId        uint32        `protobuf:"varint,1,opt,name=replica_id,json=replicaId,proto3" json:"replica_id,omitempty"`
	LamportTimestamp uint32        `protobuf:"varint,2,opt,name=lamport_timestamp,json=lamportTimestamp,proto3" json:"lamport_timestamp,omitempty"`
	ServerId         uint64        `protobuf:"varint,3,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Diagnostics      []*Diagnostic `protobuf:"bytes,4,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
}

func (x *UpdateDiagnostics) Reset() {
	*x = UpdateDiagnostics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buffer_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDiagnostics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDiagnostics) ProtoMessage() {}

func (x *UpdateDiagnostics) ProtoReflect() protoreflect.Message {
	mi := &file_buffer_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDiagnostics.ProtoReflect.Descriptor instead.
func (*UpdateDiagnostics) Descriptor() ([]byte, []int) {
	return file_buffer_proto_rawDescGZIP(), []int{28}
}

func (x *UpdateDiagnostics) GetReplicaId() uint32 {
	if x != nil {
		return x.ReplicaId
	}
	return 0
}

func (x *UpdateDiagnostics) GetLamportTimestamp() uint32 {
	if x != nil {
		return x.LamportTimestamp
	}
	return 0
}

func (x *UpdateDiagnostics) GetServerId() uint64 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *UpdateDiagnostics) GetDiagnostics() []*Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

type Anchor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplicaId uint32  `protobuf:"varint,1,opt,name=replica_id,json=replicaId,proto3" json:"replica_id,omitempty"`
	Timestamp uint32  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Offset    uint64  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Bias      Bias    `protobuf:"varint,4,opt,name=bias,proto3,enum=zed.messages.Bias" json:"bias,omitempty"`
	BufferId  *uint64 `protobuf:"varint,5,opt,name=buffer_id,json=bufferId,proto3,oneof" json:"buffer_id,omitempty"`
}

func (x *Anchor) Reset() {
	*x = Anchor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buffer_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Anchor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Anchor) ProtoMessage() {}

func (x *Anchor) ProtoReflect() protoreflect.Message {
	mi := &file_buffer_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Anchor.ProtoReflect.Descriptor instead.
func (*Anchor) Descriptor() ([]byte, []int) {
	return file_buffer_proto_rawDescGZIP(), []int{29}
}

func (x *Anchor) GetReplicaId() uint32 {
	if x != nil {
		return x.ReplicaId
	}
	return 0
}

func (x *Anchor) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Anchor) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *Anchor) GetBias() Bias {
	if x != nil {
		return x.Bias
	}
	return Bias_Left
}

func (x *Anchor) GetBufferId() uint64 {
	if x != nil && x.BufferId != nil {
		return *x.BufferId
	}
	return 0
}

type AnchorRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start *Anchor `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End   *Anchor `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *AnchorRange) Reset() {
	*x = AnchorRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buffer_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnchorRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnchorRange) ProtoMessage() {}

func (x *AnchorRange) ProtoReflect() protoreflect.Message {
	mi := &file_buffer_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnchorRange.ProtoReflect.Descriptor instead.
func (*AnchorRange) Descriptor() ([]byte, []int) {
	return file_buffer_proto_rawDescGZIP(), []int{30}
}

func (x *AnchorRange) GetStart() *Anchor {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *AnchorRange) GetEnd() *Anchor {
	if x != nil {
		return x.End
	}
	return nil
}

type Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BufferId uint64  `protobuf:"varint,1,opt,name=buffer_id,json=bufferId,proto3" json:"buffer_id,omitempty"`
	Start    *Anchor `protobuf:"bytes,2,opt,name=start,proto3" json:"start,omitempty"`
	End      *Anchor `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *Location) Reset() {
	*x = Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buffer_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_buffer_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_buffer_proto_rawDescGZIP(), []int{31}
}

func (x *Location) GetBufferId() uint64 {
	if x != nil {
		return x.BufferId
	}
	return 0
}

func (x *Location) GetStart() *Anchor {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *Location) GetEnd() *Anchor {
	if x != nil {
		return x.End
	}
	return nil
}

type Diagnostic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start           *Anchor               `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End             *Anchor               `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	Source          *string               `protobuf:"bytes,3,opt,name=source,proto3,oneof" json:"source,omitempty"`
	SourceKind      Diagnostic_SourceKind `protobuf:"varint,16,opt,name=source_kind,json=sourceKind,proto3,enum=zed.messages.Diagnostic_SourceKind" json:"source_kind,omitempty"`
	Severity        Diagnostic_Severity   `protobuf:"varint,4,opt,name=severity,proto3,enum=zed.messages.Diagnostic_Severity" json:"severity,omitempty"`
	Message         string                `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	Code            *string               `protobuf:"bytes,6,opt,name=code,proto3,oneof" json:"code,omitempty"`
	GroupId         uint64                `protobuf:"varint,7,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	IsPrimary       bool                  `protobuf:"varint,8,opt,name=is_primary,json=isPrimary,proto3" json:"is_primary,omitempty"`
	IsDiskBased     bool                  `protobuf:"varint,10,opt,name=is_disk_based,json=isDiskBased,proto3" json:"is_disk_based,omitempty"`
	IsUnnecessary   bool                  `protobuf:"varint,11,opt,name=is_unnecessary,json=isUnnecessary,proto3" json:"is_unnecessary,omitempty"`
	Underline       bool                  `protobuf:"varint,15,opt,name=underline,proto3" json:"underline,omitempty"`
	Data            *string               `protobuf:"bytes,12,opt,name=data,proto3,oneof" json:"data,omitempty"`
	CodeDescription *string               `protobuf:"bytes,13,opt,name=code_description,json=codeDescription,proto3,oneof" json:"code_description,omitempty"`
	Markdown        *string               `protobuf:"bytes,14,opt,name=markdown,proto3,oneof" json:"markdown,omitempty"`
}

func (x *Diagnostic) Reset() {
	*x = Diagnostic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buffer_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Diagnostic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Diagnostic) ProtoMessage() {}

func (x *Diagnostic) ProtoReflect() protoreflect.Message {
	mi := &file_buffer_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Diagnostic.ProtoReflect.Descriptor instead.
func (*Diagnostic) Descriptor() ([]byte, []int) {
	return file_buffer_proto_rawDescGZIP(), []int{32}
}

func (x *Diagnostic) GetStart() *Anchor {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *Diagnostic) GetEnd() *Anchor {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *Diagnostic) GetSource() string {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return ""
}

func (x *Diagnostic) GetSourceKind() Diagnostic_SourceKind {
	if x != nil {
		return x.SourceKind
	}
	return Diagnostic_Pulled
}

func (x *Diagnostic) GetSeverity() Diagnostic_Severity {
	if x != nil {
		return x.Severity
	}
	return Diagnostic_None
}

func (x *Diagnostic) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Diagnostic) GetCode() string {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return ""
}

func (x *Diagnostic) GetGroupId() uint64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *Diagnostic) GetIsPrimary() bool {
	if x != nil {
		return x.IsPrimary
	}
	return false
}

func (x *Diagnostic) GetIsDiskBased() bool {
	if x != nil {
		return x.IsDiskBased
	}
	return false
}

func (x *Diagnostic) GetIsUnnecessary() bool {
	if x != nil {
		return x.IsUnnecessary
	}
	return false
}

func (x *Diagnostic) GetUnderline() bool {
	if x != nil {
		return x.Underline
	}
	return false
}

func (x *Diagnostic) GetData() string {
	if x != nil && x.Data != nil {
		return *x.Data
	}
	return ""
}

func (x *Diagnostic) GetCodeDescription() string {
	if x != nil && x.CodeDescription != nil {
		return *x.CodeDescription
	}
	return ""
}

func (x *Diagnostic) GetMarkdown() string {
	if x != nil && x.Markdown != nil {
		return *x.Markdown
	}
	return ""
}

type SearchQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query          string `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	Regex          bool   `protobuf:"varint,3,opt,name=regex,proto3" json:"regex,omitempty"`
	WholeWord      bool   `protobuf:"varint,4,opt,name=whole_word,json=wholeWord,proto3" json:"whole_word,omitempty"`
	CaseSensitive  bool   `protobuf:"varint,5,opt,name=case_sensitive,json=caseSensitive,proto3" json:"case_sensitive,omitempty"`
	FilesToInclude string `protobuf:"bytes,6,opt,name=files_to_include,json=filesToInclude,proto3" json:"files_to_include,omitempty"`
	FilesToExclude string `protobuf:"bytes,7,opt,name=files_to_exclude,json=filesToExclude,proto3" json:"files_to_exclude,omitempty"`
	MatchFullPaths bool   `protobuf:"varint,9,opt,name=match_full_paths,json=matchFullPaths,proto3" json:"match_full_paths,omitempty"`
	IncludeIgnored bool   `protobuf:"varint,8,opt,name=include_ignored,json=includeIgnored,proto3" json:"include_ignored,omitempty"`
}

func (x *SearchQuery) Reset() {
	*x = SearchQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buffer_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchQuery) ProtoMessage() {}

func (x *SearchQuery) ProtoReflect() protoreflect.Message {
	mi := &file_buffer_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchQuery.ProtoReflect.Descriptor instead.
func (*SearchQuery) Descriptor() ([]byte, []int) {
	return file_buffer_proto_rawDescGZIP(), []int{33}
}

func (x *SearchQuery) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchQuery) GetRegex() bool {
	if x != nil {
		return x.Regex
	}
	return false
}

func (x *SearchQuery) GetWholeWord() bool {
	if x != nil {
		return x.WholeWord
	}
	return false
}

func (x *SearchQuery) GetCaseSensitive() bool {
	if x != nil {
		return x.CaseSensitive
	}
	return false
}

func (x *SearchQuery) GetFilesToInclude() string {
	if x != nil {
		return x.FilesToInclude
	}
	return ""
}

func (x *SearchQuery) GetFilesToExclude() string {
	if x != nil {
		return x.FilesToExclude
	}
	return ""
}

func (x *SearchQuery) GetMatchFullPaths() bool {
	if x != nil {
		return x.MatchFullPaths
	}
	return false
}

func (x *SearchQuery) GetIncludeIgnored() bool {
	if x != nil {
		return x.IncludeIgnored
	}
	return false
}

type FindSearchCandidates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint64       `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Query     *SearchQuery `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	Limit     uint64       `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *FindSearchCandidates) Reset() {
	*x = FindSearchCandidates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buffer_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindSearchCandidates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindSearchCandidates) ProtoMessage() {}

func (x *FindSearchCandidates) ProtoReflect() protoreflect.Message {
	mi := &file_buffer_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindSearchCandidates.ProtoReflect.Descriptor instead.
func (*FindSearchCandidates) Descriptor() ([]byte, []int) {
	return file_buffer_proto_rawDescGZIP(), []int{34}
}

func (x *FindSearchCandidates) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *FindSearchCandidates) GetQuery() *SearchQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *FindSearchCandidates) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type FindSearchCandidatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BufferIds []uint64 `protobuf:"varint,1,rep,packed,name=buffer_ids,json=bufferIds,proto3" json:"buffer_ids,omitempty"`
}

func (x *FindSearchCandidatesResponse) Reset() {
	*x = FindSearchCandidatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buffer_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindSearchCandidatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindSearchCandidatesResponse) ProtoMessage() {}

func (x *FindSearchCandidatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_buffer_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindSearchCandidatesResponse.ProtoReflect.Descriptor instead.
func (*FindSearchCandidatesResponse) Descriptor() ([]byte, []int) {
	return file_buffer_proto_rawDescGZIP(), []int{35}
}

func (x *FindSearchCandidatesResponse) GetBufferIds() []uint64 {
	if x != nil {
		return x.BufferIds
	}
	return nil
}

type Operation_Edit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplicaId        uint32              `protobuf:"varint,1,opt,name=replica_id,json=replicaId,proto3" json:"replica_id,omitempty"`
	LamportTimestamp uint32              `protobuf:"varint,2,opt,name=lamport_timestamp,json=lamportTimestamp,proto3" json:"lamport_timestamp,omitempty"`
	Version          []*VectorClockEntry `protobuf:"bytes,3,rep,name=version,proto3" json:"version,omitempty"`
	Ranges           []*Range            `protobuf:"bytes,4,rep,name=ranges,proto3" json:"ranges,omitempty"`
	NewText          []string            `protobuf:"bytes,5,rep,name=new_text,json=newText,proto3" json:"new_text,omitempty"`
}

func (x *Operation_Edit) Reset() {
	*x = Operation_Edit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buffer_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operation_Edit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation_Edit) ProtoMessage() {}

func (x *Operation_Edit) ProtoReflect() protoreflect.Message {
	mi := &file_buffer_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operation_Edit.ProtoReflect.Descriptor instead.
func (*Operation_Edit) Descriptor() ([]byte, []int) {
	return file_buffer_proto_rawDescGZIP(), []int{21, 0}
}

func (x *Operation_Edit) GetReplicaId() uint32 {
	if x != nil {
		return x.ReplicaId
	}
	return 0
}

func (x *Operation_Edit) GetLamportTimestamp() uint32 {
	if x != nil {
		return x.LamportTimestamp
	}
	return 0
}

func (x *Operation_Edit) GetVersion() []*VectorClockEntry {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *Operation_Edit) GetRanges() []*Range {
	if x != nil {
		return x.Ranges
	}
	return nil
}

func (x *Operation_Edit) GetNewText() []string {
	if x != nil {
		return x.NewText
	}
	return nil
}

type Operation_Undo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplicaId        uint32              `protobuf:"varint,1,opt,name=replica_id,json=replicaId,proto3" json:"replica_id,omitempty"`
	LamportTimestamp uint32              `protobuf:"varint,2,opt,name=lamport_timestamp,json=lamportTimestamp,proto3" json:"lamport_timestamp,omitempty"`
	Version          []*VectorClockEntry `protobuf:"bytes,3,rep,name=version,proto3" json:"version,omitempty"`
	Counts           []*UndoCount        `protobuf:"bytes,4,rep,name=counts,proto3" json:"counts,omitempty"`
}

func (x *Operation_Undo) Reset() {
	*x = Operation_Undo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buffer_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operation_Undo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation_Undo) ProtoMessage() {}

func (x *Operation_Undo) ProtoReflect() protoreflect.Message {
	mi := &file_buffer_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operation_Undo.ProtoReflect.Descriptor instead.
func (*Operation_Undo) Descriptor() ([]byte, []int) {
	return file_buffer_proto_rawDescGZIP(), []int{21, 1}
}

func (x *Operation_Undo) GetReplicaId() uint32 {
	if x != nil {
		return x.ReplicaId
	}
	return 0
}

func (x *Operation_Undo) GetLamportTimestamp() uint32 {
	if x != nil {
		return x.LamportTimestamp
	}
	return 0
}

func (x *Operation_Undo) GetVersion() []*VectorClockEntry {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *Operation_Undo) GetCounts() []*UndoCount {
	if x != nil {
		return x.Counts
	}
	return nil
}

type Operation_UpdateSelections struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplicaId        uint32       `protobuf:"varint,1,opt,name=replica_id,json=replicaId,proto3" json:"replica_id,omitempty"`
	LamportTimestamp uint32       `protobuf:"varint,2,opt,name=lamport_timestamp,json=lamportTimestamp,proto3" json:"lamport_timestamp,omitempty"`
	Selections       []*Selection `protobuf:"bytes,3,rep,name=selections,proto3" json:"selections,omitempty"`
	LineMode         bool         `protobuf:"varint,4,opt,name=line_mode,json=lineMode,proto3" json:"line_mode,omitempty"`
	CursorShape      CursorShape  `protobuf:"varint,5,opt,name=cursor_shape,json=cursorShape,proto3,enum=zed.messages.CursorShape" json:"cursor_shape,omitempty"`
}

func (x *Operation_UpdateSelections) Reset() {
	*x = Operation_UpdateSelections{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buffer_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operation_UpdateSelections) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation_UpdateSelections) ProtoMessage() {}

func (x *Operation_UpdateSelections) ProtoReflect() protoreflect.Message {
	mi := &file_buffer_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operation_UpdateSelections.ProtoReflect.Descriptor instead.
func (*Operation_UpdateSelections) Descriptor() ([]byte, []int) {
	return file_buffer_proto_rawDescGZIP(), []int{21, 2}
}

func (x *Operation_UpdateSelections) GetReplicaId() uint32 {
	if x != nil {
		return x.ReplicaId
	}
	return 0
}

func (x *Operation_UpdateSelections) GetLamportTimestamp() uint32 {
	if x != nil {
		return x.LamportTimestamp
	}
	return 0
}

func (x *Operation_UpdateSelections) GetSelections() []*Selection {
	if x != nil {
		return x.Selections
	}
	return nil
}

func (x *Operation_UpdateSelections) GetLineMode() bool {
	if x != nil {
		return x.LineMode
	}
	return false
}

func (x *Operation_UpdateSelections) GetCursorShape() CursorShape {
	if x != nil {
		return x.CursorShape
	}
	return CursorShape_CursorBar
}

type Operation_UpdateCompletionTriggers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplicaId        uint32   `protobuf:"varint,1,opt,name=replica_id,json=replicaId,proto3" json:"replica_id,omitempty"`
	LamportTimestamp uint32   `protobuf:"varint,2,opt,name=lamport_timestamp,json=lamportTimestamp,proto3" json:"lamport_timestamp,omitempty"`
	Triggers         []string `protobuf:"bytes,3,rep,name=triggers,proto3" json:"triggers,omitempty"`
	LanguageServerId uint64   `protobuf:"varint,4,opt,name=language_server_id,json=languageServerId,proto3" json:"language_server_id,omitempty"`
}

func (x *Operation_UpdateCompletionTriggers) Reset() {
	*x = Operation_UpdateCompletionTriggers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buffer_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operation_UpdateCompletionTriggers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation_UpdateCompletionTriggers) ProtoMessage() {}

func (x *Operation_UpdateCompletionTriggers) ProtoReflect() protoreflect.Message {
	mi := &file_buffer_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operation_UpdateCompletionTriggers.ProtoReflect.Descriptor instead.
func (*Operation_UpdateCompletionTriggers) Descriptor() ([]byte, []int) {
	return file_buffer_proto_rawDescGZIP(), []int{21, 3}
}

func (x *Operation_UpdateCompletionTriggers) GetReplicaId() uint32 {
	if x != nil {
		return x.ReplicaId
	}
	return 0
}

func (x *Operation_UpdateCompletionTriggers) GetLamportTimestamp() uint32 {
	if x != nil {
		return x.LamportTimestamp
	}
	return 0
}

func (x *Operation_UpdateCompletionTriggers) GetTriggers() []string {
	if x != nil {
		return x.Triggers
	}
	return nil
}

func (x *Operation_UpdateCompletionTriggers) GetLanguageServerId() uint64 {
	if x != nil {
		return x.LanguageServerId
	}
	return 0
}

var File_buffer_proto protoreflect.FileDescriptor

var file_buffer_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c,
	0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x1a, 0x0a, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x74, 0x72,
	0x65, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2e, 0x0a, 0x0d, 0x4f, 0x70, 0x65, 0x6e,
	0x4e, 0x65, 0x77, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x12, 0x4f, 0x70, 0x65, 0x6e,
	0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x49, 0x64, 0x22, 0xd4, 0x01, 0x0a, 0x13,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x50,
	0x65, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x2d, 0x0a, 0x07, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x49, 0x64, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x31, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x48, 0x00,
	0x52, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x42, 0x09, 0x0a, 0x07, 0x76, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x74, 0x22, 0x83, 0x01, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x66,
	0x66, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x37, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x66, 0x0a, 0x10, 0x4f, 0x70, 0x65, 0x6e,
	0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x42, 0x79, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x77,
	0x6f, 0x72, 0x6b, 0x74, 0x72, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x74, 0x72, 0x65, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x22, 0x3f, 0x0a, 0x0e, 0x4f, 0x70, 0x65, 0x6e, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x42, 0x79,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x76, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x66, 0x66, 0x65,
	0x72, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x26, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x22, 0xca, 0x01, 0x0a, 0x0a, 0x53, 0x61,
	0x76, 0x65, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x66, 0x66, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62, 0x75, 0x66, 0x66,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6c, 0x6f, 0x63, 0x6b,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x39,
	0x0a, 0x08, 0x6e, 0x65, 0x77, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x61, 0x74, 0x68, 0x48, 0x00, 0x52, 0x07, 0x6e,
	0x65, 0x77, 0x50, 0x61, 0x74, 0x68, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6e, 0x65,
	0x77, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x22, 0x49, 0x0a, 0x0b, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x42,
	0x75, 0x66, 0x66, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x49,
	0x64, 0x22, 0xb8, 0x01, 0x0a, 0x0b, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x53, 0x61, 0x76, 0x65,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x49, 0x64, 0x12, 0x38, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x56, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x05, 0x6d, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x05, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x4a, 0x04, 0x08, 0x05, 0x10, 0x06, 0x22, 0xf6, 0x01, 0x0a,
	0x0e, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x7a,
	0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x56, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x05, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x6d,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0b, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x65, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x7a, 0x65, 0x64, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x45, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x52, 0x0a, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4a,
	0x04, 0x08, 0x05, 0x10, 0x06, 0x22, 0x4d, 0x0a, 0x0d, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x42,
	0x75, 0x66, 0x66, 0x65, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x09, 0x62, 0x75, 0x66, 0x66, 0x65,
	0x72, 0x49, 0x64, 0x73, 0x22, 0x5b, 0x0a, 0x15, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x75,
	0x66, 0x66, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a,
	0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x6a, 0x0a, 0x12, 0x53, 0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x65,
	0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x07, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x73, 0x22, 0x53, 0x0a,
	0x1a, 0x53, 0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x42, 0x75, 0x66, 0x66,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x07, 0x62,
	0x75, 0x66, 0x66, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x7a,
	0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x42, 0x75, 0x66, 0x66,
	0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x62, 0x75, 0x66, 0x66, 0x65,
	0x72, 0x73, 0x22, 0x59, 0x0a, 0x0d, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xb6, 0x02,
	0x0a, 0x0b, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2b, 0x0a,
	0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x7a, 0x65,
	0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x48,
	0x00, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61,
	0x73, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62,
	0x61, 0x73, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x39, 0x0a, 0x0b, 0x6c, 0x69, 0x6e, 0x65, 0x5f,
	0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x7a,
	0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x4c, 0x69, 0x6e, 0x65,
	0x45, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x0a, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x12, 0x43, 0x0a, 0x0d, 0x73, 0x61, 0x76, 0x65, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x7a, 0x65, 0x64, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43,
	0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x73, 0x61, 0x76, 0x65, 0x64,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x0b, 0x73, 0x61, 0x76, 0x65, 0x64,
	0x5f, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x7a,
	0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x73, 0x61, 0x76, 0x65, 0x64, 0x4d, 0x74, 0x69, 0x6d,
	0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x4a, 0x04, 0x08, 0x07, 0x10, 0x08,
	0x4a, 0x04, 0x08, 0x04, 0x10, 0x05, 0x22, 0x7c, 0x0a, 0x0b, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72,
	0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x37, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x69,
	0x73, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73,
	0x4c, 0x61, 0x73, 0x74, 0x22, 0x4f, 0x0a, 0x10, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6c,
	0x6f, 0x63, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x87, 0x01, 0x0a, 0x0c, 0x55, 0x6e, 0x64, 0x6f, 0x4d, 0x61,
	0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2f,
	0x0a, 0x06, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x55, 0x6e,
	0x64, 0x6f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x06, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22,
	0x6d, 0x0a, 0x09, 0x55, 0x6e, 0x64, 0x6f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x6c,
	0x61, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6c, 0x61, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xda,
	0x09, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x04,
	0x65, 0x64, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x7a, 0x65, 0x64,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x48, 0x00, 0x52, 0x04, 0x65, 0x64, 0x69, 0x74,
	0x12, 0x32, 0x0a, 0x04, 0x75, 0x6e, 0x64, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x6e, 0x64, 0x6f, 0x48, 0x00, 0x52, 0x04,
	0x75, 0x6e, 0x64, 0x6f, 0x12, 0x57, 0x0a, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x10, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x50, 0x0a,
	0x12, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x7a, 0x65, 0x64, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44,
	0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x48, 0x00, 0x52, 0x11, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12,
	0x70, 0x0a, 0x1a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x73, 0x48, 0x00, 0x52, 0x18, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x73, 0x1a, 0xd4, 0x01, 0x0a, 0x04, 0x45, 0x64, 0x69, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x6c, 0x61, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6c, 0x61, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x38, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6c, 0x6f,
	0x63, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x2b, 0x0a, 0x06, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x06, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x19, 0x0a,
	0x08, 0x6e, 0x65, 0x77, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x6e, 0x65, 0x77, 0x54, 0x65, 0x78, 0x74, 0x1a, 0xbd, 0x01, 0x0a, 0x04, 0x55, 0x6e, 0x64,
	0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x64,
	0x12, 0x2b, 0x0a, 0x11, 0x6c, 0x61, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6c, 0x61, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x38, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x56, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x06, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x55, 0x6e, 0x64, 0x6f, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x06, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x1a, 0xf2, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x11,
	0x6c, 0x61, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6c, 0x61, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x37, 0x0a, 0x0a, 0x73, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6c, 0x69, 0x6e, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x3c, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x5f, 0x73, 0x68, 0x61, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x53, 0x68, 0x61, 0x70, 0x65,
	0x52, 0x0b, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x53, 0x68, 0x61, 0x70, 0x65, 0x1a, 0xb0, 0x01,
	0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x6c, 0x61, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6c, 0x61, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64,
	0x42, 0x09, 0x0a, 0x07, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x22, 0x72, 0x0a, 0x12, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x09, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x49, 0x64, 0x73,
	0x12, 0x3d, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0xae, 0x01, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x7a, 0x65,
	0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x4c, 0x61, 0x6d, 0x70, 0x6f,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x39, 0x0a, 0x08, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x2e, 0x4c, 0x61, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x07, 0x65, 0x64, 0x69, 0x74, 0x49, 0x64, 0x73, 0x12, 0x34, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x7a, 0x65, 0x64, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43,
	0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x22, 0x47, 0x0a, 0x10, 0x4c, 0x61, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2f, 0x0a, 0x05, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0x97, 0x01, 0x0a, 0x09, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x41, 0x6e, 0x63,
	0x68, 0x6f, 0x72, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x65, 0x6e,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x41, 0x6e, 0x63,
	0x68, 0x6f, 0x72, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x65,
	0x72, 0x73, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x76, 0x65,
	0x72, 0x73, 0x65, 0x64, 0x22, 0x5b, 0x0a, 0x0c, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x41, 0x6e,
	0x63, 0x68, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x63, 0x65, 0x72, 0x70, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x65, 0x78, 0x63, 0x65, 0x72, 0x70,
	0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x06, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x52, 0x06, 0x61, 0x6e, 0x63, 0x68, 0x6f,
	0x72, 0x22, 0xb8, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x61, 0x67,
	0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x6c, 0x61, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x10, 0x6c, 0x61, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x3a, 0x0a, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x52,
	0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x22, 0xb5, 0x01, 0x0a,
	0x06, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x26, 0x0a, 0x04,
	0x62, 0x69, 0x61, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x7a, 0x65, 0x64,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x42, 0x69, 0x61, 0x73, 0x52, 0x04,
	0x62, 0x69, 0x61, 0x73, 0x12, 0x20, 0x0a, 0x09, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x08, 0x62, 0x75, 0x66, 0x66, 0x65,
	0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x62, 0x75, 0x66, 0x66, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x22, 0x61, 0x0a, 0x0b, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12,
	0x26, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x7a,
	0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x41, 0x6e, 0x63, 0x68,
	0x6f, 0x72, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0x7b, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x2a, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x41,
	0x6e, 0x63, 0x68, 0x6f, 0x72, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x26, 0x0a, 0x03,
	0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x7a, 0x65, 0x64, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x52,
	0x03, 0x65, 0x6e, 0x64, 0x22, 0x81, 0x06, 0x0a, 0x0a, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73,
	0x74, 0x69, 0x63, 0x12, 0x2a, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12,
	0x26, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x7a,
	0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x41, 0x6e, 0x63, 0x68,
	0x6f, 0x72, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x44, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6b,
	0x69, 0x6e, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x7a, 0x65, 0x64, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73,
	0x74, 0x69, 0x63, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x0a,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x3d, 0x0a, 0x08, 0x73, 0x65,
	0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x7a,
	0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x61, 0x67,
	0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x2e, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x52,
	0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x08,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70, 0x72,
	0x69, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x50,
	0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x64, 0x69, 0x73,
	0x6b, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69,
	0x73, 0x44, 0x69, 0x73, 0x6b, 0x42, 0x61, 0x73, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x73,
	0x5f, 0x75, 0x6e, 0x6e, 0x65, 0x63, 0x65, 0x73, 0x73, 0x61, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x55, 0x6e, 0x6e, 0x65, 0x63, 0x65, 0x73, 0x73, 0x61, 0x72,
	0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x65, 0x12,
	0x17, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x10, 0x63, 0x6f, 0x64, 0x65,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x03, 0x52, 0x0f, 0x63, 0x6f, 0x64, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x6d, 0x61, 0x72, 0x6b,
	0x64, 0x6f, 0x77, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x08, 0x6d, 0x61,
	0x72, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x88, 0x01, 0x01, 0x22, 0x2f, 0x0a, 0x0a, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x75, 0x6c, 0x6c, 0x65,
	0x64, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x75, 0x73, 0x68, 0x65, 0x64, 0x10, 0x01, 0x12,
	0x09, 0x0a, 0x05, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x10, 0x02, 0x22, 0x47, 0x0a, 0x08, 0x53, 0x65,
	0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00,
	0x12, 0x09, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x57,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x69, 0x6e,
	0x74, 0x10, 0x04, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x42, 0x13, 0x0a, 0x11, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x64, 0x6f,
	0x77, 0x6e, 0x4a, 0x04, 0x08, 0x09, 0x10, 0x0a, 0x22, 0xa6, 0x02, 0x0a, 0x0b, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x72, 0x65, 0x67, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x72,
	0x65, 0x67, 0x65, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x68, 0x6f, 0x6c, 0x65, 0x5f, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x77, 0x68, 0x6f, 0x6c, 0x65, 0x57,
	0x6f, 0x72, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x6e, 0x73,
	0x69, 0x74, 0x69, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x63, 0x61, 0x73,
	0x65, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x54, 0x6f, 0x49, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x5f, 0x74, 0x6f,
	0x5f, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x66, 0x69, 0x6c, 0x65, 0x73, 0x54, 0x6f, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x12, 0x28,
	0x0a, 0x10, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x46,
	0x75, 0x6c, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x5f, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65,
	0x64, 0x22, 0x7c, 0x0a, 0x14, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43,
	0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22,
	0x3d, 0x0a, 0x1c, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x61, 0x6e,
	0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x04, 0x52, 0x09, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x49, 0x64, 0x73, 0x2a, 0x23,
	0x0a, 0x0a, 0x4c, 0x69, 0x6e, 0x65, 0x45, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x08, 0x0a, 0x04,
	0x55, 0x6e, 0x69, 0x78, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77,
	0x73, 0x10, 0x01, 0x2a, 0x55, 0x0a, 0x0b, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x53, 0x68, 0x61,
	0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x42, 0x61, 0x72, 0x10,
	0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x55, 0x6e, 0x64, 0x65,
	0x72, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x75, 0x72, 0x73,
	0x6f, 0x72, 0x48, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x10, 0x03, 0x2a, 0x1b, 0x0a, 0x04, 0x42, 0x69,
	0x61, 0x73, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x65, 0x66, 0x74, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05,
	0x52, 0x69, 0x67, 0x68, 0x74, 0x10, 0x01, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_buffer_proto_rawDescOnce sync.Once
	file_buffer_proto_rawDescData = file_buffer_proto_rawDesc
)

func file_buffer_proto_rawDescGZIP() []byte {
	file_buffer_proto_rawDescOnce.Do(func() {
		file_buffer_proto_rawDescData = protoimpl.X.CompressGZIP(file_buffer_proto_rawDescData)
	})
	return file_buffer_proto_rawDescData
}

var file_buffer_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_buffer_proto_msgTypes = make([]protoimpl.MessageInfo, 40)
var file_buffer_proto_goTypes = []interface{}{
	(LineEnding)(0),                            // 0: zed.messages.LineEnding
	(CursorShape)(0),                           // 1: zed.messages.CursorShape
	(Bias)(0),                                  // 2: zed.messages.Bias
	(Diagnostic_SourceKind)(0),                 // 3: zed.messages.Diagnostic.SourceKind
	(Diagnostic_Severity)(0),                   // 4: zed.messages.Diagnostic.Severity
	(*OpenNewBuffer)(nil),                      // 5: zed.messages.OpenNewBuffer
	(*OpenBufferResponse)(nil),                 // 6: zed.messages.OpenBufferResponse
	(*CreateBufferForPeer)(nil),                // 7: zed.messages.CreateBufferForPeer
	(*UpdateBuffer)(nil),                       // 8: zed.messages.UpdateBuffer
	(*OpenBufferByPath)(nil),                   // 9: zed.messages.OpenBufferByPath
	(*OpenBufferById)(nil),                     // 10: zed.messages.OpenBufferById
	(*UpdateBufferFile)(nil),                   // 11: zed.messages.UpdateBufferFile
	(*SaveBuffer)(nil),                         // 12: zed.messages.SaveBuffer
	(*CloseBuffer)(nil),                        // 13: zed.messages.CloseBuffer
	(*BufferSaved)(nil),                        // 14: zed.messages.BufferSaved
	(*BufferReloaded)(nil),                     // 15: zed.messages.BufferReloaded
	(*ReloadBuffers)(nil),                      // 16: zed.messages.ReloadBuffers
	(*ReloadBuffersResponse)(nil),              // 17: zed.messages.ReloadBuffersResponse
	(*SynchronizeBuffers)(nil),                 // 18: zed.messages.SynchronizeBuffers
	(*SynchronizeBuffersResponse)(nil),         // 19: zed.messages.SynchronizeBuffersResponse
	(*BufferVersion)(nil),                      // 20: zed.messages.BufferVersion
	(*BufferState)(nil),                        // 21: zed.messages.BufferState
	(*BufferChunk)(nil),                        // 22: zed.messages.BufferChunk
	(*VectorClockEntry)(nil),                   // 23: zed.messages.VectorClockEntry
	(*UndoMapEntry)(nil),                       // 24: zed.messages.UndoMapEntry
	(*UndoCount)(nil),                          // 25: zed.messages.UndoCount
	(*Operation)(nil),                          // 26: zed.messages.Operation
	(*ProjectTransaction)(nil),                 // 27: zed.messages.ProjectTransaction
	(*Transaction)(nil),                        // 28: zed.messages.Transaction
	(*LamportTimestamp)(nil),                   // 29: zed.messages.LamportTimestamp
	(*Range)(nil),                              // 30: zed.messages.Range
	(*Selection)(nil),                          // 31: zed.messages.Selection
	(*EditorAnchor)(nil),                       // 32: zed.messages.EditorAnchor
	(*UpdateDiagnostics)(nil),                  // 33: zed.messages.UpdateDiagnostics
	(*Anchor)(nil),                             // 34: zed.messages.Anchor
	(*AnchorRange)(nil),                        // 35: zed.messages.AnchorRange
	(*Location)(nil),                           // 36: zed.messages.Location
	(*Diagnostic)(nil),                         // 37: zed.messages.Diagnostic
	(*SearchQuery)(nil),                        // 38: zed.messages.SearchQuery
	(*FindSearchCandidates)(nil),               // 39: zed.messages.FindSearchCandidates
	(*FindSearchCandidatesResponse)(nil),       // 40: zed.messages.FindSearchCandidatesResponse
	(*Operation_Edit)(nil),                     // 41: zed.messages.Operation.Edit
	(*Operation_Undo)(nil),                     // 42: zed.messages.Operation.Undo
	(*Operation_UpdateSelections)(nil),         // 43: zed.messages.Operation.UpdateSelections
	(*Operation_UpdateCompletionTriggers)(nil), // 44: zed.messages.Operation.UpdateCompletionTriggers
	(*PeerId)(nil),                             // 45: zed.messages.PeerId
	(*File)(nil),                               // 46: zed.messages.File
	(*ProjectPath)(nil),                        // 47: zed.messages.ProjectPath
	(*Timestamp)(nil),                          // 48: zed.messages.Timestamp
}
var file_buffer_proto_depIdxs = []int32{
	45, // 0: zed.messages.CreateBufferForPeer.peer_id:type_name -> zed.messages.PeerId
	21, // 1: zed.messages.CreateBufferForPeer.state:type_name -> zed.messages.BufferState
	22, // 2: zed.messages.CreateBufferForPeer.chunk:type_name -> zed.messages.BufferChunk
	26, // 3: zed.messages.UpdateBuffer.operations:type_name -> zed.messages.Operation
	46, // 4: zed.messages.UpdateBufferFile.file:type_name -> zed.messages.File
	23, // 5: zed.messages.SaveBuffer.version:type_name -> zed.messages.VectorClockEntry
	47, // 6: zed.messages.SaveBuffer.new_path:type_name -> zed.messages.ProjectPath
	23, // 7: zed.messages.BufferSaved.version:type_name -> zed.messages.VectorClockEntry
	48, // 8: zed.messages.BufferSaved.mtime:type_name -> zed.messages.Timestamp
	23, // 9: zed.messages.BufferReloaded.version:type_name -> zed.messages.VectorClockEntry
	48, // 10: zed.messages.BufferReloaded.mtime:type_name -> zed.messages.Timestamp
	0,  // 11: zed.messages.BufferReloaded.line_ending:type_name -> zed.messages.LineEnding
	27, // 12: zed.messages.ReloadBuffersResponse.transaction:type_name -> zed.messages.ProjectTransaction
	20, // 13: zed.messages.SynchronizeBuffers.buffers:type_name -> zed.messages.BufferVersion
	20, // 14: zed.messages.SynchronizeBuffersResponse.buffers:type_name -> zed.messages.BufferVersion
	23, // 15: zed.messages.BufferVersion.version:type_name -> zed.messages.VectorClockEntry
	46, // 16: zed.messages.BufferState.file:type_name -> zed.messages.File
	0,  // 17: zed.messages.BufferState.line_ending:type_name -> zed.messages.LineEnding
	23, // 18: zed.messages.BufferState.saved_version:type_name -> zed.messages.VectorClockEntry
	48, // 19: zed.messages.BufferState.saved_mtime:type_name -> zed.messages.Timestamp
	26, // 20: zed.messages.BufferChunk.operations:type_name -> zed.messages.Operation
	25, // 21: zed.messages.UndoMapEntry.counts:type_name -> zed.messages.UndoCount
	41, // 22: zed.messages.Operation.edit:type_name -> zed.messages.Operation.Edit
	42, // 23: zed.messages.Operation.undo:type_name -> zed.messages.Operation.Undo
	43, // 24: zed.messages.Operation.update_selections:type_name -> zed.messages.Operation.UpdateSelections
	33, // 25: zed.messages.Operation.update_diagnostics:type_name -> zed.messages.UpdateDiagnostics
	44, // 26: zed.messages.Operation.update_completion_triggers:type_name -> zed.messages.Operation.UpdateCompletionTriggers
	28, // 27: zed.messages.ProjectTransaction.transactions:type_name -> zed.messages.Transaction
	29, // 28: zed.messages.Transaction.id:type_name -> zed.messages.LamportTimestamp
	29, // 29: zed.messages.Transaction.edit_ids:type_name -> zed.messages.LamportTimestamp
	23, // 30: zed.messages.Transaction.start:type_name -> zed.messages.VectorClockEntry
	32, // 31: zed.messages.Selection.start:type_name -> zed.messages.EditorAnchor
	32, // 32: zed.messages.Selection.end:type_name -> zed.messages.EditorAnchor
	34, // 33: zed.messages.EditorAnchor.anchor:type_name -> zed.messages.Anchor
	37, // 34: zed.messages.UpdateDiagnostics.diagnostics:type_name -> zed.messages.Diagnostic
	2,  // 35: zed.messages.Anchor.bias:type_name -> zed.messages.Bias
	34, // 36: zed.messages.AnchorRange.start:type_name -> zed.messages.Anchor
	34, // 37: zed.messages.AnchorRange.end:type_name -> zed.messages.Anchor
	34, // 38: zed.messages.Location.start:type_name -> zed.messages.Anchor
	34, // 39: zed.messages.Location.end:type_name -> zed.messages.Anchor
	34, // 40: zed.messages.Diagnostic.start:type_name -> zed.messages.Anchor
	34, // 41: zed.messages.Diagnostic.end:type_name -> zed.messages.Anchor
	3,  // 42: zed.messages.Diagnostic.source_kind:type_name -> zed.messages.Diagnostic.SourceKind
	4,  // 43: zed.messages.Diagnostic.severity:type_name -> zed.messages.Diagnostic.Severity
	38, // 44: zed.messages.FindSearchCandidates.query:type_name -> zed.messages.SearchQuery
	23, // 45: zed.messages.Operation.Edit.version:type_name -> zed.messages.VectorClockEntry
	30, // 46: zed.messages.Operation.Edit.ranges:type_name -> zed.messages.Range
	23, // 47: zed.messages.Operation.Undo.version:type_name -> zed.messages.VectorClockEntry
	25, // 48: zed.messages.Operation.Undo.counts:type_name -> zed.messages.UndoCount
	31, // 49: zed.messages.Operation.UpdateSelections.selections:type_name -> zed.messages.Selection
	1,  // 50: zed.messages.Operation.UpdateSelections.cursor_shape:type_name -> zed.messages.CursorShape
	51, // [51:51] is the sub-list for method output_type
	51, // [51:51] is the sub-list for method input_type
	51, // [51:51] is the sub-list for extension type_name
	51, // [51:51] is the sub-list for extension extendee
	0,  // [0:51] is the sub-list for field type_name
}

func init() { file_buffer_proto_init() }
func file_buffer_proto_init() {
	if File_buffer_proto != nil {
		return
	}
	file_core_proto_init()
	file_worktree_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_buffer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenNewBuffer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buffer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenBufferResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buffer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBufferForPeer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buffer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBuffer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buffer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenBufferByPath); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buffer_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenBufferById); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buffer_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBufferFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buffer_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveBuffer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buffer_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseBuffer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buffer_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BufferSaved); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buffer_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BufferReloaded); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buffer_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReloadBuffers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buffer_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReloadBuffersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buffer_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SynchronizeBuffers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buffer_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SynchronizeBuffersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buffer_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BufferVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buffer_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BufferState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buffer_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BufferChunk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buffer_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VectorClockEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buffer_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UndoMapEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buffer_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UndoCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buffer_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buffer_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buffer_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buffer_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LamportTimestamp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buffer_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Range); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buffer_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Selection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buffer_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditorAnchor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buffer_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDiagnostics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buffer_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Anchor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buffer_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnchorRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buffer_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buffer_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Diagnostic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buffer_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buffer_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindSearchCandidates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buffer_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindSearchCandidatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buffer_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operation_Edit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buffer_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operation_Undo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buffer_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operation_UpdateSelections); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buffer_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operation_UpdateCompletionTriggers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_buffer_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*CreateBufferForPeer_State)(nil),
		(*CreateBufferForPeer_Chunk)(nil),
	}
	file_buffer_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_buffer_proto_msgTypes[16].OneofWrappers = []interface{}{}
	file_buffer_proto_msgTypes[21].OneofWrappers = []interface{}{
		(*Operation_Edit_)(nil),
		(*Operation_Undo_)(nil),
		(*Operation_UpdateSelections_)(nil),
		(*Operation_UpdateDiagnostics)(nil),
		(*Operation_UpdateCompletionTriggers_)(nil),
	}
	file_buffer_proto_msgTypes[29].OneofWrappers = []interface{}{}
	file_buffer_proto_msgTypes[32].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_buffer_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   40,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_buffer_proto_goTypes,
		DependencyIndexes: file_buffer_proto_depIdxs,
		EnumInfos:         file_buffer_proto_enumTypes,
		MessageInfos:      file_buffer_proto_msgTypes,
	}.Build()
	File_buffer_proto = out.File
	file_buffer_proto_rawDesc = nil
	file_buffer_proto_goTypes = nil
	file_buffer_proto_depIdxs = nil
}
