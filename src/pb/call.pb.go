// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v3.21.12
// source: call.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ContactRequestResponse int32

const (
	ContactRequestResponse_Accept  ContactRequestResponse = 0
	ContactRequestResponse_Decline ContactRequestResponse = 1
	ContactRequestResponse_Block   ContactRequestResponse = 2
	ContactRequestResponse_Dismiss ContactRequestResponse = 3
)

// Enum value maps for ContactRequestResponse.
var (
	ContactRequestResponse_name = map[int32]string{
		0: "Accept",
		1: "Decline",
		2: "Block",
		3: "Dismiss",
	}
	ContactRequestResponse_value = map[string]int32{
		"Accept":  0,
		"Decline": 1,
		"Block":   2,
		"Dismiss": 3,
	}
)

func (x ContactRequestResponse) Enum() *ContactRequestResponse {
	p := new(ContactRequestResponse)
	*p = x
	return p
}

func (x ContactRequestResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContactRequestResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_call_proto_enumTypes[0].Descriptor()
}

func (ContactRequestResponse) Type() protoreflect.EnumType {
	return &file_call_proto_enumTypes[0]
}

func (x ContactRequestResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContactRequestResponse.Descriptor instead.
func (ContactRequestResponse) EnumDescriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{0}
}

type PanelId int32

const (
	PanelId_AssistantPanel PanelId = 0
	PanelId_DebugPanel     PanelId = 1
)

// Enum value maps for PanelId.
var (
	PanelId_name = map[int32]string{
		0: "AssistantPanel",
		1: "DebugPanel",
	}
	PanelId_value = map[string]int32{
		"AssistantPanel": 0,
		"DebugPanel":     1,
	}
)

func (x PanelId) Enum() *PanelId {
	p := new(PanelId)
	*p = x
	return p
}

func (x PanelId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PanelId) Descriptor() protoreflect.EnumDescriptor {
	return file_call_proto_enumTypes[1].Descriptor()
}

func (PanelId) Type() protoreflect.EnumType {
	return &file_call_proto_enumTypes[1]
}

func (x PanelId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PanelId.Descriptor instead.
func (PanelId) EnumDescriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{1}
}

type CreateRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateRoom) Reset() {
	*x = CreateRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoom) ProtoMessage() {}

func (x *CreateRoom) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoom.ProtoReflect.Descriptor instead.
func (*CreateRoom) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{0}
}

type CreateRoomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Room                  *Room                  `protobuf:"bytes,1,opt,name=room,proto3" json:"room,omitempty"`
	LiveKitConnectionInfo *LiveKitConnectionInfo `protobuf:"bytes,2,opt,name=live_kit_connection_info,json=liveKitConnectionInfo,proto3,oneof" json:"live_kit_connection_info,omitempty"`
}

func (x *CreateRoomResponse) Reset() {
	*x = CreateRoomResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoomResponse) ProtoMessage() {}

func (x *CreateRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoomResponse.ProtoReflect.Descriptor instead.
func (*CreateRoomResponse) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{1}
}

func (x *CreateRoomResponse) GetRoom() *Room {
	if x != nil {
		return x.Room
	}
	return nil
}

func (x *CreateRoomResponse) GetLiveKitConnectionInfo() *LiveKitConnectionInfo {
	if x != nil {
		return x.LiveKitConnectionInfo
	}
	return nil
}

type JoinRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *JoinRoom) Reset() {
	*x = JoinRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRoom) ProtoMessage() {}

func (x *JoinRoom) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRoom.ProtoReflect.Descriptor instead.
func (*JoinRoom) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{2}
}

func (x *JoinRoom) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type JoinRoomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Room                  *Room                  `protobuf:"bytes,1,opt,name=room,proto3" json:"room,omitempty"`
	ChannelId             *uint64                `protobuf:"varint,2,opt,name=channel_id,json=channelId,proto3,oneof" json:"channel_id,omitempty"`
	LiveKitConnectionInfo *LiveKitConnectionInfo `protobuf:"bytes,3,opt,name=live_kit_connection_info,json=liveKitConnectionInfo,proto3,oneof" json:"live_kit_connection_info,omitempty"`
}

func (x *JoinRoomResponse) Reset() {
	*x = JoinRoomResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRoomResponse) ProtoMessage() {}

func (x *JoinRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRoomResponse.ProtoReflect.Descriptor instead.
func (*JoinRoomResponse) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{3}
}

func (x *JoinRoomResponse) GetRoom() *Room {
	if x != nil {
		return x.Room
	}
	return nil
}

func (x *JoinRoomResponse) GetChannelId() uint64 {
	if x != nil && x.ChannelId != nil {
		return *x.ChannelId
	}
	return 0
}

func (x *JoinRoomResponse) GetLiveKitConnectionInfo() *LiveKitConnectionInfo {
	if x != nil {
		return x.LiveKitConnectionInfo
	}
	return nil
}

type RejoinRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               uint64           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ResharedProjects []*UpdateProject `protobuf:"bytes,2,rep,name=reshared_projects,json=resharedProjects,proto3" json:"reshared_projects,omitempty"`
	RejoinedProjects []*RejoinProject `protobuf:"bytes,3,rep,name=rejoined_projects,json=rejoinedProjects,proto3" json:"rejoined_projects,omitempty"`
}

func (x *RejoinRoom) Reset() {
	*x = RejoinRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejoinRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejoinRoom) ProtoMessage() {}

func (x *RejoinRoom) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejoinRoom.ProtoReflect.Descriptor instead.
func (*RejoinRoom) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{4}
}

func (x *RejoinRoom) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RejoinRoom) GetResharedProjects() []*UpdateProject {
	if x != nil {
		return x.ResharedProjects
	}
	return nil
}

func (x *RejoinRoom) GetRejoinedProjects() []*RejoinProject {
	if x != nil {
		return x.RejoinedProjects
	}
	return nil
}

type RejoinRemoteProjects struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RejoinedProjects []*RejoinProject `protobuf:"bytes,1,rep,name=rejoined_projects,json=rejoinedProjects,proto3" json:"rejoined_projects,omitempty"`
}

func (x *RejoinRemoteProjects) Reset() {
	*x = RejoinRemoteProjects{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejoinRemoteProjects) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejoinRemoteProjects) ProtoMessage() {}

func (x *RejoinRemoteProjects) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejoinRemoteProjects.ProtoReflect.Descriptor instead.
func (*RejoinRemoteProjects) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{5}
}

func (x *RejoinRemoteProjects) GetRejoinedProjects() []*RejoinProject {
	if x != nil {
		return x.RejoinedProjects
	}
	return nil
}

type RejoinRemoteProjectsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RejoinedProjects []*RejoinedProject `protobuf:"bytes,1,rep,name=rejoined_projects,json=rejoinedProjects,proto3" json:"rejoined_projects,omitempty"`
}

func (x *RejoinRemoteProjectsResponse) Reset() {
	*x = RejoinRemoteProjectsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejoinRemoteProjectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejoinRemoteProjectsResponse) ProtoMessage() {}

func (x *RejoinRemoteProjectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejoinRemoteProjectsResponse.ProtoReflect.Descriptor instead.
func (*RejoinRemoteProjectsResponse) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{6}
}

func (x *RejoinRemoteProjectsResponse) GetRejoinedProjects() []*RejoinedProject {
	if x != nil {
		return x.RejoinedProjects
	}
	return nil
}

type RejoinProject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint64              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Worktrees    []*RejoinWorktree   `protobuf:"bytes,2,rep,name=worktrees,proto3" json:"worktrees,omitempty"`
	Repositories []*RejoinRepository `protobuf:"bytes,3,rep,name=repositories,proto3" json:"repositories,omitempty"`
}

func (x *RejoinProject) Reset() {
	*x = RejoinProject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejoinProject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejoinProject) ProtoMessage() {}

func (x *RejoinProject) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejoinProject.ProtoReflect.Descriptor instead.
func (*RejoinProject) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{7}
}

func (x *RejoinProject) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RejoinProject) GetWorktrees() []*RejoinWorktree {
	if x != nil {
		return x.Worktrees
	}
	return nil
}

func (x *RejoinProject) GetRepositories() []*RejoinRepository {
	if x != nil {
		return x.Repositories
	}
	return nil
}

type RejoinWorktree struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ScanId uint64 `protobuf:"varint,2,opt,name=scan_id,json=scanId,proto3" json:"scan_id,omitempty"`
}

func (x *RejoinWorktree) Reset() {
	*x = RejoinWorktree{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejoinWorktree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejoinWorktree) ProtoMessage() {}

func (x *RejoinWorktree) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejoinWorktree.ProtoReflect.Descriptor instead.
func (*RejoinWorktree) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{8}
}

func (x *RejoinWorktree) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RejoinWorktree) GetScanId() uint64 {
	if x != nil {
		return x.ScanId
	}
	return 0
}

type RejoinRepository struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ScanId uint64 `protobuf:"varint,2,opt,name=scan_id,json=scanId,proto3" json:"scan_id,omitempty"`
}

func (x *RejoinRepository) Reset() {
	*x = RejoinRepository{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejoinRepository) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejoinRepository) ProtoMessage() {}

func (x *RejoinRepository) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejoinRepository.ProtoReflect.Descriptor instead.
func (*RejoinRepository) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{9}
}

func (x *RejoinRepository) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RejoinRepository) GetScanId() uint64 {
	if x != nil {
		return x.ScanId
	}
	return 0
}

type RejoinRoomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Room             *Room              `protobuf:"bytes,1,opt,name=room,proto3" json:"room,omitempty"`
	ResharedProjects []*ResharedProject `protobuf:"bytes,2,rep,name=reshared_projects,json=resharedProjects,proto3" json:"reshared_projects,omitempty"`
	RejoinedProjects []*RejoinedProject `protobuf:"bytes,3,rep,name=rejoined_projects,json=rejoinedProjects,proto3" json:"rejoined_projects,omitempty"`
}

func (x *RejoinRoomResponse) Reset() {
	*x = RejoinRoomResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejoinRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejoinRoomResponse) ProtoMessage() {}

func (x *RejoinRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejoinRoomResponse.ProtoReflect.Descriptor instead.
func (*RejoinRoomResponse) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{10}
}

func (x *RejoinRoomResponse) GetRoom() *Room {
	if x != nil {
		return x.Room
	}
	return nil
}

func (x *RejoinRoomResponse) GetResharedProjects() []*ResharedProject {
	if x != nil {
		return x.ResharedProjects
	}
	return nil
}

func (x *RejoinRoomResponse) GetRejoinedProjects() []*RejoinedProject {
	if x != nil {
		return x.RejoinedProjects
	}
	return nil
}

type ResharedProject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint64          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Collaborators []*Collaborator `protobuf:"bytes,2,rep,name=collaborators,proto3" json:"collaborators,omitempty"`
}

func (x *ResharedProject) Reset() {
	*x = ResharedProject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResharedProject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResharedProject) ProtoMessage() {}

func (x *ResharedProject) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResharedProject.ProtoReflect.Descriptor instead.
func (*ResharedProject) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{11}
}

func (x *ResharedProject) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResharedProject) GetCollaborators() []*Collaborator {
	if x != nil {
		return x.Collaborators
	}
	return nil
}

type RejoinedProject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              uint64              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Worktrees       []*WorktreeMetadata `protobuf:"bytes,2,rep,name=worktrees,proto3" json:"worktrees,omitempty"`
	Collaborators   []*Collaborator     `protobuf:"bytes,3,rep,name=collaborators,proto3" json:"collaborators,omitempty"`
	LanguageServers []*LanguageServer   `protobuf:"bytes,4,rep,name=language_servers,json=languageServers,proto3" json:"language_servers,omitempty"`
}

func (x *RejoinedProject) Reset() {
	*x = RejoinedProject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejoinedProject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejoinedProject) ProtoMessage() {}

func (x *RejoinedProject) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejoinedProject.ProtoReflect.Descriptor instead.
func (*RejoinedProject) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{12}
}

func (x *RejoinedProject) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RejoinedProject) GetWorktrees() []*WorktreeMetadata {
	if x != nil {
		return x.Worktrees
	}
	return nil
}

func (x *RejoinedProject) GetCollaborators() []*Collaborator {
	if x != nil {
		return x.Collaborators
	}
	return nil
}

func (x *RejoinedProject) GetLanguageServers() []*LanguageServer {
	if x != nil {
		return x.LanguageServers
	}
	return nil
}

type LeaveRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LeaveRoom) Reset() {
	*x = LeaveRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveRoom) ProtoMessage() {}

func (x *LeaveRoom) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveRoom.ProtoReflect.Descriptor instead.
func (*LeaveRoom) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{13}
}

type Room struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  uint64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Participants        []*Participant        `protobuf:"bytes,2,rep,name=participants,proto3" json:"participants,omitempty"`
	PendingParticipants []*PendingParticipant `protobuf:"bytes,3,rep,name=pending_participants,json=pendingParticipants,proto3" json:"pending_participants,omitempty"`
	Followers           []*Follower           `protobuf:"bytes,4,rep,name=followers,proto3" json:"followers,omitempty"`
	LivekitRoom         string                `protobuf:"bytes,5,opt,name=livekit_room,json=livekitRoom,proto3" json:"livekit_room,omitempty"`
}

func (x *Room) Reset() {
	*x = Room{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Room) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Room) ProtoMessage() {}

func (x *Room) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Room.ProtoReflect.Descriptor instead.
func (*Room) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{14}
}

func (x *Room) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Room) GetParticipants() []*Participant {
	if x != nil {
		return x.Participants
	}
	return nil
}

func (x *Room) GetPendingParticipants() []*PendingParticipant {
	if x != nil {
		return x.PendingParticipants
	}
	return nil
}

func (x *Room) GetFollowers() []*Follower {
	if x != nil {
		return x.Followers
	}
	return nil
}

func (x *Room) GetLivekitRoom() string {
	if x != nil {
		return x.LivekitRoom
	}
	return ""
}

type Participant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId           uint64                `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PeerId           *PeerId               `protobuf:"bytes,2,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	Projects         []*ParticipantProject `protobuf:"bytes,3,rep,name=projects,proto3" json:"projects,omitempty"`
	Location         *ParticipantLocation  `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
	ParticipantIndex uint32                `protobuf:"varint,5,opt,name=participant_index,json=participantIndex,proto3" json:"participant_index,omitempty"`
	Role             ChannelRole           `protobuf:"varint,6,opt,name=role,proto3,enum=zed.messages.ChannelRole" json:"role,omitempty"`
}

func (x *Participant) Reset() {
	*x = Participant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Participant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Participant) ProtoMessage() {}

func (x *Participant) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Participant.ProtoReflect.Descriptor instead.
func (*Participant) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{15}
}

func (x *Participant) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Participant) GetPeerId() *PeerId {
	if x != nil {
		return x.PeerId
	}
	return nil
}

func (x *Participant) GetProjects() []*ParticipantProject {
	if x != nil {
		return x.Projects
	}
	return nil
}

func (x *Participant) GetLocation() *ParticipantLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *Participant) GetParticipantIndex() uint32 {
	if x != nil {
		return x.ParticipantIndex
	}
	return 0
}

func (x *Participant) GetRole() ChannelRole {
	if x != nil {
		return x.Role
	}
	return ChannelRole_Admin
}

type PendingParticipant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId           uint64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CallingUserId    uint64  `protobuf:"varint,2,opt,name=calling_user_id,json=callingUserId,proto3" json:"calling_user_id,omitempty"`
	InitialProjectId *uint64 `protobuf:"varint,3,opt,name=initial_project_id,json=initialProjectId,proto3,oneof" json:"initial_project_id,omitempty"`
}

func (x *PendingParticipant) Reset() {
	*x = PendingParticipant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PendingParticipant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PendingParticipant) ProtoMessage() {}

func (x *PendingParticipant) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PendingParticipant.ProtoReflect.Descriptor instead.
func (*PendingParticipant) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{16}
}

func (x *PendingParticipant) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PendingParticipant) GetCallingUserId() uint64 {
	if x != nil {
		return x.CallingUserId
	}
	return 0
}

func (x *PendingParticipant) GetInitialProjectId() uint64 {
	if x != nil && x.InitialProjectId != nil {
		return *x.InitialProjectId
	}
	return 0
}

type ParticipantProject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	WorktreeRootNames []string `protobuf:"bytes,2,rep,name=worktree_root_names,json=worktreeRootNames,proto3" json:"worktree_root_names,omitempty"`
}

func (x *ParticipantProject) Reset() {
	*x = ParticipantProject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParticipantProject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParticipantProject) ProtoMessage() {}

func (x *ParticipantProject) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParticipantProject.ProtoReflect.Descriptor instead.
func (*ParticipantProject) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{17}
}

func (x *ParticipantProject) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ParticipantProject) GetWorktreeRootNames() []string {
	if x != nil {
		return x.WorktreeRootNames
	}
	return nil
}

type Follower struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeaderId   *PeerId `protobuf:"bytes,1,opt,name=leader_id,json=leaderId,proto3" json:"leader_id,omitempty"`
	FollowerId *PeerId `protobuf:"bytes,2,opt,name=follower_id,json=followerId,proto3" json:"follower_id,omitempty"`
	ProjectId  uint64  `protobuf:"varint,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *Follower) Reset() {
	*x = Follower{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Follower) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Follower) ProtoMessage() {}

func (x *Follower) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Follower.ProtoReflect.Descriptor instead.
func (*Follower) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{18}
}

func (x *Follower) GetLeaderId() *PeerId {
	if x != nil {
		return x.LeaderId
	}
	return nil
}

func (x *Follower) GetFollowerId() *PeerId {
	if x != nil {
		return x.FollowerId
	}
	return nil
}

func (x *Follower) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

type ParticipantLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Variant:
	//
	//	*ParticipantLocation_SharedProject_
	//	*ParticipantLocation_UnsharedProject_
	//	*ParticipantLocation_External_
	Variant isParticipantLocation_Variant `protobuf_oneof:"variant"`
}

func (x *ParticipantLocation) Reset() {
	*x = ParticipantLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParticipantLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParticipantLocation) ProtoMessage() {}

func (x *ParticipantLocation) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParticipantLocation.ProtoReflect.Descriptor instead.
func (*ParticipantLocation) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{19}
}

func (m *ParticipantLocation) GetVariant() isParticipantLocation_Variant {
	if m != nil {
		return m.Variant
	}
	return nil
}

func (x *ParticipantLocation) GetSharedProject() *ParticipantLocation_SharedProject {
	if x, ok := x.GetVariant().(*ParticipantLocation_SharedProject_); ok {
		return x.SharedProject
	}
	return nil
}

func (x *ParticipantLocation) GetUnsharedProject() *ParticipantLocation_UnsharedProject {
	if x, ok := x.GetVariant().(*ParticipantLocation_UnsharedProject_); ok {
		return x.UnsharedProject
	}
	return nil
}

func (x *ParticipantLocation) GetExternal() *ParticipantLocation_External {
	if x, ok := x.GetVariant().(*ParticipantLocation_External_); ok {
		return x.External
	}
	return nil
}

type isParticipantLocation_Variant interface {
	isParticipantLocation_Variant()
}

type ParticipantLocation_SharedProject_ struct {
	SharedProject *ParticipantLocation_SharedProject `protobuf:"bytes,1,opt,name=shared_project,json=sharedProject,proto3,oneof"`
}

type ParticipantLocation_UnsharedProject_ struct {
	UnsharedProject *ParticipantLocation_UnsharedProject `protobuf:"bytes,2,opt,name=unshared_project,json=unsharedProject,proto3,oneof"`
}

type ParticipantLocation_External_ struct {
	External *ParticipantLocation_External `protobuf:"bytes,3,opt,name=external,proto3,oneof"`
}

func (*ParticipantLocation_SharedProject_) isParticipantLocation_Variant() {}

func (*ParticipantLocation_UnsharedProject_) isParticipantLocation_Variant() {}

func (*ParticipantLocation_External_) isParticipantLocation_Variant() {}

type Call struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId           uint64  `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	CalledUserId     uint64  `protobuf:"varint,2,opt,name=called_user_id,json=calledUserId,proto3" json:"called_user_id,omitempty"`
	InitialProjectId *uint64 `protobuf:"varint,3,opt,name=initial_project_id,json=initialProjectId,proto3,oneof" json:"initial_project_id,omitempty"`
}

func (x *Call) Reset() {
	*x = Call{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Call) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Call) ProtoMessage() {}

func (x *Call) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Call.ProtoReflect.Descriptor instead.
func (*Call) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{20}
}

func (x *Call) GetRoomId() uint64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *Call) GetCalledUserId() uint64 {
	if x != nil {
		return x.CalledUserId
	}
	return 0
}

func (x *Call) GetInitialProjectId() uint64 {
	if x != nil && x.InitialProjectId != nil {
		return *x.InitialProjectId
	}
	return 0
}

type IncomingCall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId             uint64              `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	CallingUserId      uint64              `protobuf:"varint,2,opt,name=calling_user_id,json=callingUserId,proto3" json:"calling_user_id,omitempty"`
	ParticipantUserIds []uint64            `protobuf:"varint,3,rep,packed,name=participant_user_ids,json=participantUserIds,proto3" json:"participant_user_ids,omitempty"`
	InitialProject     *ParticipantProject `protobuf:"bytes,4,opt,name=initial_project,json=initialProject,proto3,oneof" json:"initial_project,omitempty"`
}

func (x *IncomingCall) Reset() {
	*x = IncomingCall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncomingCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncomingCall) ProtoMessage() {}

func (x *IncomingCall) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncomingCall.ProtoReflect.Descriptor instead.
func (*IncomingCall) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{21}
}

func (x *IncomingCall) GetRoomId() uint64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *IncomingCall) GetCallingUserId() uint64 {
	if x != nil {
		return x.CallingUserId
	}
	return 0
}

func (x *IncomingCall) GetParticipantUserIds() []uint64 {
	if x != nil {
		return x.ParticipantUserIds
	}
	return nil
}

func (x *IncomingCall) GetInitialProject() *ParticipantProject {
	if x != nil {
		return x.InitialProject
	}
	return nil
}

type CallCanceled struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId uint64 `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
}

func (x *CallCanceled) Reset() {
	*x = CallCanceled{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallCanceled) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallCanceled) ProtoMessage() {}

func (x *CallCanceled) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallCanceled.ProtoReflect.Descriptor instead.
func (*CallCanceled) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{22}
}

func (x *CallCanceled) GetRoomId() uint64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

type CancelCall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId       uint64 `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	CalledUserId uint64 `protobuf:"varint,2,opt,name=called_user_id,json=calledUserId,proto3" json:"called_user_id,omitempty"`
}

func (x *CancelCall) Reset() {
	*x = CancelCall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelCall) ProtoMessage() {}

func (x *CancelCall) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelCall.ProtoReflect.Descriptor instead.
func (*CancelCall) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{23}
}

func (x *CancelCall) GetRoomId() uint64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *CancelCall) GetCalledUserId() uint64 {
	if x != nil {
		return x.CalledUserId
	}
	return 0
}

type DeclineCall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId uint64 `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
}

func (x *DeclineCall) Reset() {
	*x = DeclineCall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeclineCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeclineCall) ProtoMessage() {}

func (x *DeclineCall) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeclineCall.ProtoReflect.Descriptor instead.
func (*DeclineCall) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{24}
}

func (x *DeclineCall) GetRoomId() uint64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

type UpdateParticipantLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId   uint64               `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Location *ParticipantLocation `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *UpdateParticipantLocation) Reset() {
	*x = UpdateParticipantLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateParticipantLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateParticipantLocation) ProtoMessage() {}

func (x *UpdateParticipantLocation) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateParticipantLocation.ProtoReflect.Descriptor instead.
func (*UpdateParticipantLocation) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{25}
}

func (x *UpdateParticipantLocation) GetRoomId() uint64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *UpdateParticipantLocation) GetLocation() *ParticipantLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

type RoomUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Room *Room `protobuf:"bytes,1,opt,name=room,proto3" json:"room,omitempty"`
}

func (x *RoomUpdated) Reset() {
	*x = RoomUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomUpdated) ProtoMessage() {}

func (x *RoomUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomUpdated.ProtoReflect.Descriptor instead.
func (*RoomUpdated) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{26}
}

func (x *RoomUpdated) GetRoom() *Room {
	if x != nil {
		return x.Room
	}
	return nil
}

type LiveKitConnectionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerUrl  string `protobuf:"bytes,1,opt,name=server_url,json=serverUrl,proto3" json:"server_url,omitempty"`
	Token      string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	CanPublish bool   `protobuf:"varint,3,opt,name=can_publish,json=canPublish,proto3" json:"can_publish,omitempty"`
}

func (x *LiveKitConnectionInfo) Reset() {
	*x = LiveKitConnectionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveKitConnectionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveKitConnectionInfo) ProtoMessage() {}

func (x *LiveKitConnectionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveKitConnectionInfo.ProtoReflect.Descriptor instead.
func (*LiveKitConnectionInfo) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{27}
}

func (x *LiveKitConnectionInfo) GetServerUrl() string {
	if x != nil {
		return x.ServerUrl
	}
	return ""
}

func (x *LiveKitConnectionInfo) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *LiveKitConnectionInfo) GetCanPublish() bool {
	if x != nil {
		return x.CanPublish
	}
	return false
}

type ShareProject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId       uint64              `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Worktrees    []*WorktreeMetadata `protobuf:"bytes,2,rep,name=worktrees,proto3" json:"worktrees,omitempty"`
	IsSshProject bool                `protobuf:"varint,4,opt,name=is_ssh_project,json=isSshProject,proto3" json:"is_ssh_project,omitempty"`
}

func (x *ShareProject) Reset() {
	*x = ShareProject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareProject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareProject) ProtoMessage() {}

func (x *ShareProject) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareProject.ProtoReflect.Descriptor instead.
func (*ShareProject) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{28}
}

func (x *ShareProject) GetRoomId() uint64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *ShareProject) GetWorktrees() []*WorktreeMetadata {
	if x != nil {
		return x.Worktrees
	}
	return nil
}

func (x *ShareProject) GetIsSshProject() bool {
	if x != nil {
		return x.IsSshProject
	}
	return false
}

type ShareProjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint64 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *ShareProjectResponse) Reset() {
	*x = ShareProjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareProjectResponse) ProtoMessage() {}

func (x *ShareProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareProjectResponse.ProtoReflect.Descriptor instead.
func (*ShareProjectResponse) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{29}
}

func (x *ShareProjectResponse) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

type UnshareProject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint64 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *UnshareProject) Reset() {
	*x = UnshareProject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnshareProject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnshareProject) ProtoMessage() {}

func (x *UnshareProject) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnshareProject.ProtoReflect.Descriptor instead.
func (*UnshareProject) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{30}
}

func (x *UnshareProject) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

type UpdateProject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint64              `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Worktrees []*WorktreeMetadata `protobuf:"bytes,2,rep,name=worktrees,proto3" json:"worktrees,omitempty"`
}

func (x *UpdateProject) Reset() {
	*x = UpdateProject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProject) ProtoMessage() {}

func (x *UpdateProject) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProject.ProtoReflect.Descriptor instead.
func (*UpdateProject) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{31}
}

func (x *UpdateProject) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *UpdateProject) GetWorktrees() []*WorktreeMetadata {
	if x != nil {
		return x.Worktrees
	}
	return nil
}

type JoinProject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint64 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *JoinProject) Reset() {
	*x = JoinProject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinProject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinProject) ProtoMessage() {}

func (x *JoinProject) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinProject.ProtoReflect.Descriptor instead.
func (*JoinProject) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{32}
}

func (x *JoinProject) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

type JoinProjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId       uint64              `protobuf:"varint,5,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ReplicaId       uint32              `protobuf:"varint,1,opt,name=replica_id,json=replicaId,proto3" json:"replica_id,omitempty"`
	Worktrees       []*WorktreeMetadata `protobuf:"bytes,2,rep,name=worktrees,proto3" json:"worktrees,omitempty"`
	Collaborators   []*Collaborator     `protobuf:"bytes,3,rep,name=collaborators,proto3" json:"collaborators,omitempty"`
	LanguageServers []*LanguageServer   `protobuf:"bytes,4,rep,name=language_servers,json=languageServers,proto3" json:"language_servers,omitempty"`
	Role            ChannelRole         `protobuf:"varint,6,opt,name=role,proto3,enum=zed.messages.ChannelRole" json:"role,omitempty"`
}

func (x *JoinProjectResponse) Reset() {
	*x = JoinProjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinProjectResponse) ProtoMessage() {}

func (x *JoinProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinProjectResponse.ProtoReflect.Descriptor instead.
func (*JoinProjectResponse) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{33}
}

func (x *JoinProjectResponse) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *JoinProjectResponse) GetReplicaId() uint32 {
	if x != nil {
		return x.ReplicaId
	}
	return 0
}

func (x *JoinProjectResponse) GetWorktrees() []*WorktreeMetadata {
	if x != nil {
		return x.Worktrees
	}
	return nil
}

func (x *JoinProjectResponse) GetCollaborators() []*Collaborator {
	if x != nil {
		return x.Collaborators
	}
	return nil
}

func (x *JoinProjectResponse) GetLanguageServers() []*LanguageServer {
	if x != nil {
		return x.LanguageServers
	}
	return nil
}

func (x *JoinProjectResponse) GetRole() ChannelRole {
	if x != nil {
		return x.Role
	}
	return ChannelRole_Admin
}

type LeaveProject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint64 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *LeaveProject) Reset() {
	*x = LeaveProject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveProject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveProject) ProtoMessage() {}

func (x *LeaveProject) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveProject.ProtoReflect.Descriptor instead.
func (*LeaveProject) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{34}
}

func (x *LeaveProject) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

type UpdateWorktree struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId           uint64             `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	WorktreeId          uint64             `protobuf:"varint,2,opt,name=worktree_id,json=worktreeId,proto3" json:"worktree_id,omitempty"`
	RootName            string             `protobuf:"bytes,3,opt,name=root_name,json=rootName,proto3" json:"root_name,omitempty"`
	UpdatedEntries      []*Entry           `protobuf:"bytes,4,rep,name=updated_entries,json=updatedEntries,proto3" json:"updated_entries,omitempty"`
	RemovedEntries      []uint64           `protobuf:"varint,5,rep,packed,name=removed_entries,json=removedEntries,proto3" json:"removed_entries,omitempty"`
	UpdatedRepositories []*RepositoryEntry `protobuf:"bytes,6,rep,name=updated_repositories,json=updatedRepositories,proto3" json:"updated_repositories,omitempty"`         // deprecated
	RemovedRepositories []uint64           `protobuf:"varint,7,rep,packed,name=removed_repositories,json=removedRepositories,proto3" json:"removed_repositories,omitempty"` // deprecated
	ScanId              uint64             `protobuf:"varint,8,opt,name=scan_id,json=scanId,proto3" json:"scan_id,omitempty"`
	IsLastUpdate        bool               `protobuf:"varint,9,opt,name=is_last_update,json=isLastUpdate,proto3" json:"is_last_update,omitempty"`
	AbsPath             string             `protobuf:"bytes,10,opt,name=abs_path,json=absPath,proto3" json:"abs_path,omitempty"`
}

func (x *UpdateWorktree) Reset() {
	*x = UpdateWorktree{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWorktree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorktree) ProtoMessage() {}

func (x *UpdateWorktree) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorktree.ProtoReflect.Descriptor instead.
func (*UpdateWorktree) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{35}
}

func (x *UpdateWorktree) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *UpdateWorktree) GetWorktreeId() uint64 {
	if x != nil {
		return x.WorktreeId
	}
	return 0
}

func (x *UpdateWorktree) GetRootName() string {
	if x != nil {
		return x.RootName
	}
	return ""
}

func (x *UpdateWorktree) GetUpdatedEntries() []*Entry {
	if x != nil {
		return x.UpdatedEntries
	}
	return nil
}

func (x *UpdateWorktree) GetRemovedEntries() []uint64 {
	if x != nil {
		return x.RemovedEntries
	}
	return nil
}

func (x *UpdateWorktree) GetUpdatedRepositories() []*RepositoryEntry {
	if x != nil {
		return x.UpdatedRepositories
	}
	return nil
}

func (x *UpdateWorktree) GetRemovedRepositories() []uint64 {
	if x != nil {
		return x.RemovedRepositories
	}
	return nil
}

func (x *UpdateWorktree) GetScanId() uint64 {
	if x != nil {
		return x.ScanId
	}
	return 0
}

func (x *UpdateWorktree) GetIsLastUpdate() bool {
	if x != nil {
		return x.IsLastUpdate
	}
	return false
}

func (x *UpdateWorktree) GetAbsPath() string {
	if x != nil {
		return x.AbsPath
	}
	return ""
}

// deprecated
type RepositoryEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepositoryId          uint64         `protobuf:"varint,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	UpdatedStatuses       []*StatusEntry `protobuf:"bytes,3,rep,name=updated_statuses,json=updatedStatuses,proto3" json:"updated_statuses,omitempty"`
	RemovedStatuses       []string       `protobuf:"bytes,4,rep,name=removed_statuses,json=removedStatuses,proto3" json:"removed_statuses,omitempty"`
	CurrentMergeConflicts []string       `protobuf:"bytes,5,rep,name=current_merge_conflicts,json=currentMergeConflicts,proto3" json:"current_merge_conflicts,omitempty"`
	BranchSummary         *Branch        `protobuf:"bytes,6,opt,name=branch_summary,json=branchSummary,proto3,oneof" json:"branch_summary,omitempty"`
}

func (x *RepositoryEntry) Reset() {
	*x = RepositoryEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepositoryEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepositoryEntry) ProtoMessage() {}

func (x *RepositoryEntry) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepositoryEntry.ProtoReflect.Descriptor instead.
func (*RepositoryEntry) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{36}
}

func (x *RepositoryEntry) GetRepositoryId() uint64 {
	if x != nil {
		return x.RepositoryId
	}
	return 0
}

func (x *RepositoryEntry) GetUpdatedStatuses() []*StatusEntry {
	if x != nil {
		return x.UpdatedStatuses
	}
	return nil
}

func (x *RepositoryEntry) GetRemovedStatuses() []string {
	if x != nil {
		return x.RemovedStatuses
	}
	return nil
}

func (x *RepositoryEntry) GetCurrentMergeConflicts() []string {
	if x != nil {
		return x.CurrentMergeConflicts
	}
	return nil
}

func (x *RepositoryEntry) GetBranchSummary() *Branch {
	if x != nil {
		return x.BranchSummary
	}
	return nil
}

type AddProjectCollaborator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId    uint64        `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Collaborator *Collaborator `protobuf:"bytes,2,opt,name=collaborator,proto3" json:"collaborator,omitempty"`
}

func (x *AddProjectCollaborator) Reset() {
	*x = AddProjectCollaborator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddProjectCollaborator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProjectCollaborator) ProtoMessage() {}

func (x *AddProjectCollaborator) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProjectCollaborator.ProtoReflect.Descriptor instead.
func (*AddProjectCollaborator) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{37}
}

func (x *AddProjectCollaborator) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *AddProjectCollaborator) GetCollaborator() *Collaborator {
	if x != nil {
		return x.Collaborator
	}
	return nil
}

type UpdateProjectCollaborator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint64  `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	OldPeerId *PeerId `protobuf:"bytes,2,opt,name=old_peer_id,json=oldPeerId,proto3" json:"old_peer_id,omitempty"`
	NewPeerId *PeerId `protobuf:"bytes,3,opt,name=new_peer_id,json=newPeerId,proto3" json:"new_peer_id,omitempty"`
}

func (x *UpdateProjectCollaborator) Reset() {
	*x = UpdateProjectCollaborator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProjectCollaborator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProjectCollaborator) ProtoMessage() {}

func (x *UpdateProjectCollaborator) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProjectCollaborator.ProtoReflect.Descriptor instead.
func (*UpdateProjectCollaborator) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{38}
}

func (x *UpdateProjectCollaborator) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *UpdateProjectCollaborator) GetOldPeerId() *PeerId {
	if x != nil {
		return x.OldPeerId
	}
	return nil
}

func (x *UpdateProjectCollaborator) GetNewPeerId() *PeerId {
	if x != nil {
		return x.NewPeerId
	}
	return nil
}

type RemoveProjectCollaborator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint64  `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	PeerId    *PeerId `protobuf:"bytes,2,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
}

func (x *RemoveProjectCollaborator) Reset() {
	*x = RemoveProjectCollaborator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveProjectCollaborator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveProjectCollaborator) ProtoMessage() {}

func (x *RemoveProjectCollaborator) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveProjectCollaborator.ProtoReflect.Descriptor instead.
func (*RemoveProjectCollaborator) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{39}
}

func (x *RemoveProjectCollaborator) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *RemoveProjectCollaborator) GetPeerId() *PeerId {
	if x != nil {
		return x.PeerId
	}
	return nil
}

type GetUsers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIds []uint64 `protobuf:"varint,1,rep,packed,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
}

func (x *GetUsers) Reset() {
	*x = GetUsers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsers) ProtoMessage() {}

func (x *GetUsers) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsers.ProtoReflect.Descriptor instead.
func (*GetUsers) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{40}
}

func (x *GetUsers) GetUserIds() []uint64 {
	if x != nil {
		return x.UserIds
	}
	return nil
}

type FuzzySearchUsers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *FuzzySearchUsers) Reset() {
	*x = FuzzySearchUsers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FuzzySearchUsers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FuzzySearchUsers) ProtoMessage() {}

func (x *FuzzySearchUsers) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FuzzySearchUsers.ProtoReflect.Descriptor instead.
func (*FuzzySearchUsers) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{41}
}

func (x *FuzzySearchUsers) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type UsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *UsersResponse) Reset() {
	*x = UsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersResponse) ProtoMessage() {}

func (x *UsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersResponse.ProtoReflect.Descriptor instead.
func (*UsersResponse) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{42}
}

func (x *UsersResponse) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

type RequestContact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponderId uint64 `protobuf:"varint,1,opt,name=responder_id,json=responderId,proto3" json:"responder_id,omitempty"`
}

func (x *RequestContact) Reset() {
	*x = RequestContact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestContact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestContact) ProtoMessage() {}

func (x *RequestContact) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestContact.ProtoReflect.Descriptor instead.
func (*RequestContact) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{43}
}

func (x *RequestContact) GetResponderId() uint64 {
	if x != nil {
		return x.ResponderId
	}
	return 0
}

type RemoveContact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *RemoveContact) Reset() {
	*x = RemoveContact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveContact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveContact) ProtoMessage() {}

func (x *RemoveContact) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveContact.ProtoReflect.Descriptor instead.
func (*RemoveContact) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{44}
}

func (x *RemoveContact) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type RespondToContactRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequesterId uint64                 `protobuf:"varint,1,opt,name=requester_id,json=requesterId,proto3" json:"requester_id,omitempty"`
	Response    ContactRequestResponse `protobuf:"varint,2,opt,name=response,proto3,enum=zed.messages.ContactRequestResponse" json:"response,omitempty"`
}

func (x *RespondToContactRequest) Reset() {
	*x = RespondToContactRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespondToContactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondToContactRequest) ProtoMessage() {}

func (x *RespondToContactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondToContactRequest.ProtoReflect.Descriptor instead.
func (*RespondToContactRequest) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{45}
}

func (x *RespondToContactRequest) GetRequesterId() uint64 {
	if x != nil {
		return x.RequesterId
	}
	return 0
}

func (x *RespondToContactRequest) GetResponse() ContactRequestResponse {
	if x != nil {
		return x.Response
	}
	return ContactRequestResponse_Accept
}

type UpdateContacts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contacts               []*Contact                `protobuf:"bytes,1,rep,name=contacts,proto3" json:"contacts,omitempty"`
	RemoveContacts         []uint64                  `protobuf:"varint,2,rep,packed,name=remove_contacts,json=removeContacts,proto3" json:"remove_contacts,omitempty"`
	IncomingRequests       []*IncomingContactRequest `protobuf:"bytes,3,rep,name=incoming_requests,json=incomingRequests,proto3" json:"incoming_requests,omitempty"`
	RemoveIncomingRequests []uint64                  `protobuf:"varint,4,rep,packed,name=remove_incoming_requests,json=removeIncomingRequests,proto3" json:"remove_incoming_requests,omitempty"`
	OutgoingRequests       []uint64                  `protobuf:"varint,5,rep,packed,name=outgoing_requests,json=outgoingRequests,proto3" json:"outgoing_requests,omitempty"`
	RemoveOutgoingRequests []uint64                  `protobuf:"varint,6,rep,packed,name=remove_outgoing_requests,json=removeOutgoingRequests,proto3" json:"remove_outgoing_requests,omitempty"`
}

func (x *UpdateContacts) Reset() {
	*x = UpdateContacts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateContacts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateContacts) ProtoMessage() {}

func (x *UpdateContacts) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateContacts.ProtoReflect.Descriptor instead.
func (*UpdateContacts) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{46}
}

func (x *UpdateContacts) GetContacts() []*Contact {
	if x != nil {
		return x.Contacts
	}
	return nil
}

func (x *UpdateContacts) GetRemoveContacts() []uint64 {
	if x != nil {
		return x.RemoveContacts
	}
	return nil
}

func (x *UpdateContacts) GetIncomingRequests() []*IncomingContactRequest {
	if x != nil {
		return x.IncomingRequests
	}
	return nil
}

func (x *UpdateContacts) GetRemoveIncomingRequests() []uint64 {
	if x != nil {
		return x.RemoveIncomingRequests
	}
	return nil
}

func (x *UpdateContacts) GetOutgoingRequests() []uint64 {
	if x != nil {
		return x.OutgoingRequests
	}
	return nil
}

func (x *UpdateContacts) GetRemoveOutgoingRequests() []uint64 {
	if x != nil {
		return x.RemoveOutgoingRequests
	}
	return nil
}

type ShowContacts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ShowContacts) Reset() {
	*x = ShowContacts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowContacts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowContacts) ProtoMessage() {}

func (x *ShowContacts) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowContacts.ProtoReflect.Descriptor instead.
func (*ShowContacts) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{47}
}

type IncomingContactRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequesterId uint64 `protobuf:"varint,1,opt,name=requester_id,json=requesterId,proto3" json:"requester_id,omitempty"`
}

func (x *IncomingContactRequest) Reset() {
	*x = IncomingContactRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncomingContactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncomingContactRequest) ProtoMessage() {}

func (x *IncomingContactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncomingContactRequest.ProtoReflect.Descriptor instead.
func (*IncomingContactRequest) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{48}
}

func (x *IncomingContactRequest) GetRequesterId() uint64 {
	if x != nil {
		return x.RequesterId
	}
	return 0
}

type Follow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId    uint64  `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	ProjectId *uint64 `protobuf:"varint,2,opt,name=project_id,json=projectId,proto3,oneof" json:"project_id,omitempty"`
	LeaderId  *PeerId `protobuf:"bytes,3,opt,name=leader_id,json=leaderId,proto3" json:"leader_id,omitempty"`
}

func (x *Follow) Reset() {
	*x = Follow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Follow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Follow) ProtoMessage() {}

func (x *Follow) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Follow.ProtoReflect.Descriptor instead.
func (*Follow) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{49}
}

func (x *Follow) GetRoomId() uint64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *Follow) GetProjectId() uint64 {
	if x != nil && x.ProjectId != nil {
		return *x.ProjectId
	}
	return 0
}

func (x *Follow) GetLeaderId() *PeerId {
	if x != nil {
		return x.LeaderId
	}
	return nil
}

type FollowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActiveView *View `protobuf:"bytes,3,opt,name=active_view,json=activeView,proto3" json:"active_view,omitempty"`
	// TODO: Remove after version 0.145.x stabilizes.
	ActiveViewId *ViewId `protobuf:"bytes,1,opt,name=active_view_id,json=activeViewId,proto3,oneof" json:"active_view_id,omitempty"`
	Views        []*View `protobuf:"bytes,2,rep,name=views,proto3" json:"views,omitempty"`
}

func (x *FollowResponse) Reset() {
	*x = FollowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FollowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowResponse) ProtoMessage() {}

func (x *FollowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowResponse.ProtoReflect.Descriptor instead.
func (*FollowResponse) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{50}
}

func (x *FollowResponse) GetActiveView() *View {
	if x != nil {
		return x.ActiveView
	}
	return nil
}

func (x *FollowResponse) GetActiveViewId() *ViewId {
	if x != nil {
		return x.ActiveViewId
	}
	return nil
}

func (x *FollowResponse) GetViews() []*View {
	if x != nil {
		return x.Views
	}
	return nil
}

type UpdateFollowers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId    uint64  `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	ProjectId *uint64 `protobuf:"varint,2,opt,name=project_id,json=projectId,proto3,oneof" json:"project_id,omitempty"`
	// Types that are assignable to Variant:
	//
	//	*UpdateFollowers_CreateView
	//	*UpdateFollowers_UpdateActiveView
	//	*UpdateFollowers_UpdateView
	Variant isUpdateFollowers_Variant `protobuf_oneof:"variant"`
}

func (x *UpdateFollowers) Reset() {
	*x = UpdateFollowers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFollowers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFollowers) ProtoMessage() {}

func (x *UpdateFollowers) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFollowers.ProtoReflect.Descriptor instead.
func (*UpdateFollowers) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{51}
}

func (x *UpdateFollowers) GetRoomId() uint64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *UpdateFollowers) GetProjectId() uint64 {
	if x != nil && x.ProjectId != nil {
		return *x.ProjectId
	}
	return 0
}

func (m *UpdateFollowers) GetVariant() isUpdateFollowers_Variant {
	if m != nil {
		return m.Variant
	}
	return nil
}

func (x *UpdateFollowers) GetCreateView() *View {
	if x, ok := x.GetVariant().(*UpdateFollowers_CreateView); ok {
		return x.CreateView
	}
	return nil
}

func (x *UpdateFollowers) GetUpdateActiveView() *UpdateActiveView {
	if x, ok := x.GetVariant().(*UpdateFollowers_UpdateActiveView); ok {
		return x.UpdateActiveView
	}
	return nil
}

func (x *UpdateFollowers) GetUpdateView() *UpdateView {
	if x, ok := x.GetVariant().(*UpdateFollowers_UpdateView); ok {
		return x.UpdateView
	}
	return nil
}

type isUpdateFollowers_Variant interface {
	isUpdateFollowers_Variant()
}

type UpdateFollowers_CreateView struct {
	CreateView *View `protobuf:"bytes,5,opt,name=create_view,json=createView,proto3,oneof"`
}

type UpdateFollowers_UpdateActiveView struct {
	// TODO: Remove after version 0.145.x stabilizes.
	UpdateActiveView *UpdateActiveView `protobuf:"bytes,4,opt,name=update_active_view,json=updateActiveView,proto3,oneof"`
}

type UpdateFollowers_UpdateView struct {
	UpdateView *UpdateView `protobuf:"bytes,6,opt,name=update_view,json=updateView,proto3,oneof"`
}

func (*UpdateFollowers_CreateView) isUpdateFollowers_Variant() {}

func (*UpdateFollowers_UpdateActiveView) isUpdateFollowers_Variant() {}

func (*UpdateFollowers_UpdateView) isUpdateFollowers_Variant() {}

type Unfollow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId    uint64  `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	ProjectId *uint64 `protobuf:"varint,2,opt,name=project_id,json=projectId,proto3,oneof" json:"project_id,omitempty"`
	LeaderId  *PeerId `protobuf:"bytes,3,opt,name=leader_id,json=leaderId,proto3" json:"leader_id,omitempty"`
}

func (x *Unfollow) Reset() {
	*x = Unfollow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Unfollow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Unfollow) ProtoMessage() {}

func (x *Unfollow) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Unfollow.ProtoReflect.Descriptor instead.
func (*Unfollow) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{52}
}

func (x *Unfollow) GetRoomId() uint64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *Unfollow) GetProjectId() uint64 {
	if x != nil && x.ProjectId != nil {
		return *x.ProjectId
	}
	return 0
}

func (x *Unfollow) GetLeaderId() *PeerId {
	if x != nil {
		return x.LeaderId
	}
	return nil
}

type ViewId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator *PeerId `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ViewId) Reset() {
	*x = ViewId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewId) ProtoMessage() {}

func (x *ViewId) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewId.ProtoReflect.Descriptor instead.
func (*ViewId) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{53}
}

func (x *ViewId) GetCreator() *PeerId {
	if x != nil {
		return x.Creator
	}
	return nil
}

func (x *ViewId) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateActiveView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       *ViewId `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	LeaderId *PeerId `protobuf:"bytes,2,opt,name=leader_id,json=leaderId,proto3,oneof" json:"leader_id,omitempty"`
	View     *View   `protobuf:"bytes,3,opt,name=view,proto3" json:"view,omitempty"`
}

func (x *UpdateActiveView) Reset() {
	*x = UpdateActiveView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateActiveView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateActiveView) ProtoMessage() {}

func (x *UpdateActiveView) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateActiveView.ProtoReflect.Descriptor instead.
func (*UpdateActiveView) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{54}
}

func (x *UpdateActiveView) GetId() *ViewId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *UpdateActiveView) GetLeaderId() *PeerId {
	if x != nil {
		return x.LeaderId
	}
	return nil
}

func (x *UpdateActiveView) GetView() *View {
	if x != nil {
		return x.View
	}
	return nil
}

type UpdateView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       *ViewId `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	LeaderId *PeerId `protobuf:"bytes,2,opt,name=leader_id,json=leaderId,proto3,oneof" json:"leader_id,omitempty"`
	// Types that are assignable to Variant:
	//
	//	*UpdateView_Editor_
	Variant isUpdateView_Variant `protobuf_oneof:"variant"`
}

func (x *UpdateView) Reset() {
	*x = UpdateView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateView) ProtoMessage() {}

func (x *UpdateView) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateView.ProtoReflect.Descriptor instead.
func (*UpdateView) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{55}
}

func (x *UpdateView) GetId() *ViewId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *UpdateView) GetLeaderId() *PeerId {
	if x != nil {
		return x.LeaderId
	}
	return nil
}

func (m *UpdateView) GetVariant() isUpdateView_Variant {
	if m != nil {
		return m.Variant
	}
	return nil
}

func (x *UpdateView) GetEditor() *UpdateView_Editor {
	if x, ok := x.GetVariant().(*UpdateView_Editor_); ok {
		return x.Editor
	}
	return nil
}

type isUpdateView_Variant interface {
	isUpdateView_Variant()
}

type UpdateView_Editor_ struct {
	Editor *UpdateView_Editor `protobuf:"bytes,3,opt,name=editor,proto3,oneof"`
}

func (*UpdateView_Editor_) isUpdateView_Variant() {}

type View struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       *ViewId  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	LeaderId *PeerId  `protobuf:"bytes,2,opt,name=leader_id,json=leaderId,proto3,oneof" json:"leader_id,omitempty"`
	PanelId  *PanelId `protobuf:"varint,6,opt,name=panel_id,json=panelId,proto3,enum=zed.messages.PanelId,oneof" json:"panel_id,omitempty"`
	// Types that are assignable to Variant:
	//
	//	*View_Editor_
	//	*View_ChannelView_
	//	*View_ContextEditor_
	Variant isView_Variant `protobuf_oneof:"variant"`
}

func (x *View) Reset() {
	*x = View{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *View) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*View) ProtoMessage() {}

func (x *View) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use View.ProtoReflect.Descriptor instead.
func (*View) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{56}
}

func (x *View) GetId() *ViewId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *View) GetLeaderId() *PeerId {
	if x != nil {
		return x.LeaderId
	}
	return nil
}

func (x *View) GetPanelId() PanelId {
	if x != nil && x.PanelId != nil {
		return *x.PanelId
	}
	return PanelId_AssistantPanel
}

func (m *View) GetVariant() isView_Variant {
	if m != nil {
		return m.Variant
	}
	return nil
}

func (x *View) GetEditor() *View_Editor {
	if x, ok := x.GetVariant().(*View_Editor_); ok {
		return x.Editor
	}
	return nil
}

func (x *View) GetChannelView() *View_ChannelView {
	if x, ok := x.GetVariant().(*View_ChannelView_); ok {
		return x.ChannelView
	}
	return nil
}

func (x *View) GetContextEditor() *View_ContextEditor {
	if x, ok := x.GetVariant().(*View_ContextEditor_); ok {
		return x.ContextEditor
	}
	return nil
}

type isView_Variant interface {
	isView_Variant()
}

type View_Editor_ struct {
	Editor *View_Editor `protobuf:"bytes,3,opt,name=editor,proto3,oneof"`
}

type View_ChannelView_ struct {
	ChannelView *View_ChannelView `protobuf:"bytes,4,opt,name=channel_view,json=channelView,proto3,oneof"`
}

type View_ContextEditor_ struct {
	ContextEditor *View_ContextEditor `protobuf:"bytes,5,opt,name=context_editor,json=contextEditor,proto3,oneof"`
}

func (*View_Editor_) isView_Variant() {}

func (*View_ChannelView_) isView_Variant() {}

func (*View_ContextEditor_) isView_Variant() {}

type ExcerptInsertion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Excerpt           *Excerpt `protobuf:"bytes,1,opt,name=excerpt,proto3" json:"excerpt,omitempty"`
	PreviousExcerptId *uint64  `protobuf:"varint,2,opt,name=previous_excerpt_id,json=previousExcerptId,proto3,oneof" json:"previous_excerpt_id,omitempty"`
}

func (x *ExcerptInsertion) Reset() {
	*x = ExcerptInsertion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExcerptInsertion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExcerptInsertion) ProtoMessage() {}

func (x *ExcerptInsertion) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExcerptInsertion.ProtoReflect.Descriptor instead.
func (*ExcerptInsertion) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{57}
}

func (x *ExcerptInsertion) GetExcerpt() *Excerpt {
	if x != nil {
		return x.Excerpt
	}
	return nil
}

func (x *ExcerptInsertion) GetPreviousExcerptId() uint64 {
	if x != nil && x.PreviousExcerptId != nil {
		return *x.PreviousExcerptId
	}
	return 0
}

type Excerpt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BufferId     uint64  `protobuf:"varint,2,opt,name=buffer_id,json=bufferId,proto3" json:"buffer_id,omitempty"`
	ContextStart *Anchor `protobuf:"bytes,3,opt,name=context_start,json=contextStart,proto3" json:"context_start,omitempty"`
	ContextEnd   *Anchor `protobuf:"bytes,4,opt,name=context_end,json=contextEnd,proto3" json:"context_end,omitempty"`
	PrimaryStart *Anchor `protobuf:"bytes,5,opt,name=primary_start,json=primaryStart,proto3" json:"primary_start,omitempty"`
	PrimaryEnd   *Anchor `protobuf:"bytes,6,opt,name=primary_end,json=primaryEnd,proto3" json:"primary_end,omitempty"`
}

func (x *Excerpt) Reset() {
	*x = Excerpt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Excerpt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Excerpt) ProtoMessage() {}

func (x *Excerpt) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Excerpt.ProtoReflect.Descriptor instead.
func (*Excerpt) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{58}
}

func (x *Excerpt) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Excerpt) GetBufferId() uint64 {
	if x != nil {
		return x.BufferId
	}
	return 0
}

func (x *Excerpt) GetContextStart() *Anchor {
	if x != nil {
		return x.ContextStart
	}
	return nil
}

func (x *Excerpt) GetContextEnd() *Anchor {
	if x != nil {
		return x.ContextEnd
	}
	return nil
}

func (x *Excerpt) GetPrimaryStart() *Anchor {
	if x != nil {
		return x.PrimaryStart
	}
	return nil
}

func (x *Excerpt) GetPrimaryEnd() *Anchor {
	if x != nil {
		return x.PrimaryEnd
	}
	return nil
}

type Contact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Online bool   `protobuf:"varint,2,opt,name=online,proto3" json:"online,omitempty"`
	Busy   bool   `protobuf:"varint,3,opt,name=busy,proto3" json:"busy,omitempty"`
}

func (x *Contact) Reset() {
	*x = Contact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contact) ProtoMessage() {}

func (x *Contact) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contact.ProtoReflect.Descriptor instead.
func (*Contact) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{59}
}

func (x *Contact) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Contact) GetOnline() bool {
	if x != nil {
		return x.Online
	}
	return false
}

func (x *Contact) GetBusy() bool {
	if x != nil {
		return x.Busy
	}
	return false
}

type SetRoomParticipantRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId uint64      `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	UserId uint64      `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Role   ChannelRole `protobuf:"varint,3,opt,name=role,proto3,enum=zed.messages.ChannelRole" json:"role,omitempty"`
}

func (x *SetRoomParticipantRole) Reset() {
	*x = SetRoomParticipantRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRoomParticipantRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRoomParticipantRole) ProtoMessage() {}

func (x *SetRoomParticipantRole) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRoomParticipantRole.ProtoReflect.Descriptor instead.
func (*SetRoomParticipantRole) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{60}
}

func (x *SetRoomParticipantRole) GetRoomId() uint64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *SetRoomParticipantRole) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SetRoomParticipantRole) GetRole() ChannelRole {
	if x != nil {
		return x.Role
	}
	return ChannelRole_Admin
}

type ParticipantLocation_SharedProject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ParticipantLocation_SharedProject) Reset() {
	*x = ParticipantLocation_SharedProject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParticipantLocation_SharedProject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParticipantLocation_SharedProject) ProtoMessage() {}

func (x *ParticipantLocation_SharedProject) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParticipantLocation_SharedProject.ProtoReflect.Descriptor instead.
func (*ParticipantLocation_SharedProject) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{19, 0}
}

func (x *ParticipantLocation_SharedProject) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ParticipantLocation_UnsharedProject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ParticipantLocation_UnsharedProject) Reset() {
	*x = ParticipantLocation_UnsharedProject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParticipantLocation_UnsharedProject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParticipantLocation_UnsharedProject) ProtoMessage() {}

func (x *ParticipantLocation_UnsharedProject) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParticipantLocation_UnsharedProject.ProtoReflect.Descriptor instead.
func (*ParticipantLocation_UnsharedProject) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{19, 1}
}

type ParticipantLocation_External struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ParticipantLocation_External) Reset() {
	*x = ParticipantLocation_External{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParticipantLocation_External) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParticipantLocation_External) ProtoMessage() {}

func (x *ParticipantLocation_External) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParticipantLocation_External.ProtoReflect.Descriptor instead.
func (*ParticipantLocation_External) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{19, 2}
}

type UpdateView_Editor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InsertedExcerpts []*ExcerptInsertion `protobuf:"bytes,1,rep,name=inserted_excerpts,json=insertedExcerpts,proto3" json:"inserted_excerpts,omitempty"`
	DeletedExcerpts  []uint64            `protobuf:"varint,2,rep,packed,name=deleted_excerpts,json=deletedExcerpts,proto3" json:"deleted_excerpts,omitempty"`
	Selections       []*Selection        `protobuf:"bytes,3,rep,name=selections,proto3" json:"selections,omitempty"`
	PendingSelection *Selection          `protobuf:"bytes,4,opt,name=pending_selection,json=pendingSelection,proto3,oneof" json:"pending_selection,omitempty"`
	ScrollTopAnchor  *EditorAnchor       `protobuf:"bytes,5,opt,name=scroll_top_anchor,json=scrollTopAnchor,proto3" json:"scroll_top_anchor,omitempty"`
	ScrollX          float32             `protobuf:"fixed32,6,opt,name=scroll_x,json=scrollX,proto3" json:"scroll_x,omitempty"`
	ScrollY          float32             `protobuf:"fixed32,7,opt,name=scroll_y,json=scrollY,proto3" json:"scroll_y,omitempty"`
}

func (x *UpdateView_Editor) Reset() {
	*x = UpdateView_Editor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateView_Editor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateView_Editor) ProtoMessage() {}

func (x *UpdateView_Editor) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateView_Editor.ProtoReflect.Descriptor instead.
func (*UpdateView_Editor) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{55, 0}
}

func (x *UpdateView_Editor) GetInsertedExcerpts() []*ExcerptInsertion {
	if x != nil {
		return x.InsertedExcerpts
	}
	return nil
}

func (x *UpdateView_Editor) GetDeletedExcerpts() []uint64 {
	if x != nil {
		return x.DeletedExcerpts
	}
	return nil
}

func (x *UpdateView_Editor) GetSelections() []*Selection {
	if x != nil {
		return x.Selections
	}
	return nil
}

func (x *UpdateView_Editor) GetPendingSelection() *Selection {
	if x != nil {
		return x.PendingSelection
	}
	return nil
}

func (x *UpdateView_Editor) GetScrollTopAnchor() *EditorAnchor {
	if x != nil {
		return x.ScrollTopAnchor
	}
	return nil
}

func (x *UpdateView_Editor) GetScrollX() float32 {
	if x != nil {
		return x.ScrollX
	}
	return 0
}

func (x *UpdateView_Editor) GetScrollY() float32 {
	if x != nil {
		return x.ScrollY
	}
	return 0
}

type View_Editor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Singleton        bool          `protobuf:"varint,1,opt,name=singleton,proto3" json:"singleton,omitempty"`
	Title            *string       `protobuf:"bytes,2,opt,name=title,proto3,oneof" json:"title,omitempty"`
	Excerpts         []*Excerpt    `protobuf:"bytes,3,rep,name=excerpts,proto3" json:"excerpts,omitempty"`
	Selections       []*Selection  `protobuf:"bytes,4,rep,name=selections,proto3" json:"selections,omitempty"`
	PendingSelection *Selection    `protobuf:"bytes,5,opt,name=pending_selection,json=pendingSelection,proto3,oneof" json:"pending_selection,omitempty"`
	ScrollTopAnchor  *EditorAnchor `protobuf:"bytes,6,opt,name=scroll_top_anchor,json=scrollTopAnchor,proto3" json:"scroll_top_anchor,omitempty"`
	ScrollX          float32       `protobuf:"fixed32,7,opt,name=scroll_x,json=scrollX,proto3" json:"scroll_x,omitempty"`
	ScrollY          float32       `protobuf:"fixed32,8,opt,name=scroll_y,json=scrollY,proto3" json:"scroll_y,omitempty"`
}

func (x *View_Editor) Reset() {
	*x = View_Editor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *View_Editor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*View_Editor) ProtoMessage() {}

func (x *View_Editor) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use View_Editor.ProtoReflect.Descriptor instead.
func (*View_Editor) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{56, 0}
}

func (x *View_Editor) GetSingleton() bool {
	if x != nil {
		return x.Singleton
	}
	return false
}

func (x *View_Editor) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *View_Editor) GetExcerpts() []*Excerpt {
	if x != nil {
		return x.Excerpts
	}
	return nil
}

func (x *View_Editor) GetSelections() []*Selection {
	if x != nil {
		return x.Selections
	}
	return nil
}

func (x *View_Editor) GetPendingSelection() *Selection {
	if x != nil {
		return x.PendingSelection
	}
	return nil
}

func (x *View_Editor) GetScrollTopAnchor() *EditorAnchor {
	if x != nil {
		return x.ScrollTopAnchor
	}
	return nil
}

func (x *View_Editor) GetScrollX() float32 {
	if x != nil {
		return x.ScrollX
	}
	return 0
}

func (x *View_Editor) GetScrollY() float32 {
	if x != nil {
		return x.ScrollY
	}
	return 0
}

type View_ChannelView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId uint64       `protobuf:"varint,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Editor    *View_Editor `protobuf:"bytes,2,opt,name=editor,proto3" json:"editor,omitempty"`
}

func (x *View_ChannelView) Reset() {
	*x = View_ChannelView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *View_ChannelView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*View_ChannelView) ProtoMessage() {}

func (x *View_ChannelView) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use View_ChannelView.ProtoReflect.Descriptor instead.
func (*View_ChannelView) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{56, 1}
}

func (x *View_ChannelView) GetChannelId() uint64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *View_ChannelView) GetEditor() *View_Editor {
	if x != nil {
		return x.Editor
	}
	return nil
}

type View_ContextEditor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContextId string       `protobuf:"bytes,1,opt,name=context_id,json=contextId,proto3" json:"context_id,omitempty"`
	Editor    *View_Editor `protobuf:"bytes,2,opt,name=editor,proto3" json:"editor,omitempty"`
}

func (x *View_ContextEditor) Reset() {
	*x = View_ContextEditor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_call_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *View_ContextEditor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*View_ContextEditor) ProtoMessage() {}

func (x *View_ContextEditor) ProtoReflect() protoreflect.Message {
	mi := &file_call_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use View_ContextEditor.ProtoReflect.Descriptor instead.
func (*View_ContextEditor) Descriptor() ([]byte, []int) {
	return file_call_proto_rawDescGZIP(), []int{56, 2}
}

func (x *View_ContextEditor) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *View_ContextEditor) GetEditor() *View_Editor {
	if x != nil {
		return x.Editor
	}
	return nil
}

var File_call_proto protoreflect.FileDescriptor

var file_call_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x63, 0x61, 0x6c, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x7a, 0x65,
	0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x1a, 0x0a, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x74, 0x72, 0x65, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x09, 0x6c, 0x73, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x09,
	0x67, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0c, 0x0a, 0x0a, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x22, 0xbc, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26,
	0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x7a,
	0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d,
	0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x61, 0x0a, 0x18, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x6b,
	0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x4b, 0x69, 0x74, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52,
	0x15, 0x6c, 0x69, 0x76, 0x65, 0x4b, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x42, 0x1b, 0x0a, 0x19, 0x5f, 0x6c, 0x69,
	0x76, 0x65, 0x5f, 0x6b, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x1a, 0x0a, 0x08, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f,
	0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x22, 0xed, 0x01, 0x0a, 0x10, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x12,
	0x22, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x61, 0x0a, 0x18, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x6b, 0x69, 0x74, 0x5f,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x4b, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x01, 0x52, 0x15, 0x6c, 0x69,
	0x76, 0x65, 0x4b, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x5f, 0x69, 0x64, 0x42, 0x1b, 0x0a, 0x19, 0x5f, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x6b,
	0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x22, 0xb0, 0x01, 0x0a, 0x0a, 0x52, 0x65, 0x6a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f,
	0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x48, 0x0a, 0x11, 0x72, 0x65, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x7a,
	0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x10, 0x72, 0x65, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x48, 0x0a, 0x11, 0x72,
	0x65, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x6a, 0x6f, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x10, 0x72, 0x65, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0x60, 0x0a, 0x14, 0x52, 0x65, 0x6a, 0x6f, 0x69, 0x6e, 0x52,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x48, 0x0a,
	0x11, 0x72, 0x65, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x6a, 0x6f, 0x69, 0x6e, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x10, 0x72, 0x65, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0x6a, 0x0a, 0x1c, 0x52, 0x65, 0x6a, 0x6f, 0x69,
	0x6e, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x11, 0x72, 0x65, 0x6a, 0x6f, 0x69,
	0x6e, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x52, 0x65, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x10, 0x72, 0x65, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x22, 0x9f, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x6a, 0x6f, 0x69, 0x6e, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x74, 0x72, 0x65,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x6a, 0x6f, 0x69, 0x6e, 0x57, 0x6f,
	0x72, 0x6b, 0x74, 0x72, 0x65, 0x65, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x74, 0x72, 0x65, 0x65,
	0x73, 0x12, 0x42, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x6a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x22, 0x39, 0x0a, 0x0e, 0x52, 0x65, 0x6a, 0x6f, 0x69, 0x6e, 0x57,
	0x6f, 0x72, 0x6b, 0x74, 0x72, 0x65, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x63, 0x61, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x73, 0x63, 0x61, 0x6e, 0x49, 0x64,
	0x22, 0x3b, 0x0a, 0x10, 0x52, 0x65, 0x6a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x73, 0x63, 0x61, 0x6e, 0x49, 0x64, 0x22, 0xd4, 0x01,
	0x0a, 0x12, 0x52, 0x65, 0x6a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x4a, 0x0a, 0x11,
	0x72, 0x65, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x10, 0x72, 0x65, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x4a, 0x0a, 0x11, 0x72, 0x65, 0x6a, 0x6f,
	0x69, 0x6e, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x52, 0x65, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x10, 0x72, 0x65, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x22, 0x63, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x40, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x61,
	0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x6f,
	0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x0d, 0x63, 0x6f, 0x6c, 0x6c,
	0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x22, 0xea, 0x01, 0x0a, 0x0f, 0x52, 0x65,
	0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a,
	0x09, 0x77, 0x6f, 0x72, 0x6b, 0x74, 0x72, 0x65, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x57, 0x6f, 0x72, 0x6b, 0x74, 0x72, 0x65, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x74, 0x72, 0x65, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x0d, 0x63,
	0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x0d,
	0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x47, 0x0a,
	0x10, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x0f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x22, 0x0b, 0x0a, 0x09, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52,
	0x6f, 0x6f, 0x6d, 0x22, 0x83, 0x02, 0x0a, 0x04, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3d, 0x0a, 0x0c,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x0c, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x53, 0x0a, 0x14, 0x70,
	0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x7a, 0x65, 0x64, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x13, 0x70, 0x65, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73,
	0x12, 0x34, 0x0a, 0x09, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x09, 0x66, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x69, 0x76, 0x65, 0x6b, 0x69,
	0x74, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x69,
	0x76, 0x65, 0x6b, 0x69, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x22, 0xb4, 0x02, 0x0a, 0x0b, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x2d, 0x0a, 0x07, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x49, 0x64, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x3c, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12,
	0x3d, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b,
	0x0a, 0x11, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x2d, 0x0a, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x7a, 0x65, 0x64, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x4a, 0x04, 0x08, 0x07, 0x10, 0x08,
	0x22, 0x9f, 0x01, 0x0a, 0x12, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x26, 0x0a, 0x0f, 0x63, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x63, 0x61, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x12, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x10, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x15, 0x0a, 0x13, 0x5f,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x22, 0x54, 0x0a, 0x12, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x77, 0x6f, 0x72, 0x6b,
	0x74, 0x72, 0x65, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x77, 0x6f, 0x72, 0x6b, 0x74, 0x72, 0x65, 0x65, 0x52,
	0x6f, 0x6f, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x93, 0x01, 0x0a, 0x08, 0x46, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x09, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x49, 0x64, 0x52, 0x08,
	0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x0b, 0x66, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x65, 0x65,
	0x72, 0x49, 0x64, 0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0xe4,
	0x02, 0x0a, 0x13, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x58, 0x0a, 0x0e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x48,
	0x00, 0x52, 0x0d, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x5e, 0x0a, 0x10, 0x75, 0x6e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x7a, 0x65, 0x64,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x6e,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x48, 0x00, 0x52,
	0x0f, 0x75, 0x6e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x48, 0x0a, 0x08, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x48, 0x00,
	0x52, 0x08, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x1a, 0x1f, 0x0a, 0x0d, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x1a, 0x11, 0x0a, 0x0f, 0x55,
	0x6e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x1a, 0x0a,
	0x0a, 0x08, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x42, 0x09, 0x0a, 0x07, 0x76, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x74, 0x22, 0x8f, 0x01, 0x0a, 0x04, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x17,
	0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x61, 0x6c, 0x6c, 0x65,
	0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0c, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x31, 0x0a,
	0x12, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x10, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x42, 0x15, 0x0a, 0x13, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x22, 0xe5, 0x01, 0x0a, 0x0c, 0x49, 0x6e, 0x63, 0x6f,
	0x6d, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49,
	0x64, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x63, 0x61, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x12, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x4e, 0x0a, 0x0f, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x6c, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x88, 0x01, 0x01, 0x42, 0x12, 0x0a, 0x10, 0x5f,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22,
	0x27, 0x0a, 0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x65, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0x4b, 0x0a, 0x0a, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12,
	0x24, 0x0a, 0x0e, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x26, 0x0a, 0x0b, 0x44, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65,
	0x43, 0x61, 0x6c, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0x73, 0x0a,
	0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f,
	0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6f,
	0x6d, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x35, 0x0a, 0x0b, 0x52, 0x6f, 0x6f, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x26, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x52,
	0x6f, 0x6f, 0x6d, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x22, 0x6d, 0x0a, 0x15, 0x4c, 0x69, 0x76,
	0x65, 0x4b, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x72,
	0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x6e, 0x5f, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x63, 0x61,
	0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x22, 0x91, 0x01, 0x0a, 0x0c, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d,
	0x49, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x74, 0x72, 0x65, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x74, 0x72, 0x65, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x74, 0x72, 0x65, 0x65, 0x73,
	0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x73, 0x73, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x53, 0x73, 0x68, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4a, 0x04, 0x08, 0x03, 0x10, 0x04, 0x22, 0x35, 0x0a, 0x14,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x22, 0x2f, 0x0a, 0x0e, 0x55, 0x6e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x22, 0x6c, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x74, 0x72, 0x65, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x74, 0x72, 0x65, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x74, 0x72, 0x65,
	0x65, 0x73, 0x22, 0x2c, 0x0a, 0x0b, 0x4a, 0x6f, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x22, 0xd1, 0x02, 0x0a, 0x13, 0x4a, 0x6f, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x74, 0x72,
	0x65, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x7a, 0x65, 0x64, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x74, 0x72, 0x65,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x74,
	0x72, 0x65, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x7a, 0x65,
	0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x61,
	0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x47, 0x0a, 0x10, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x0f,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12,
	0x2d, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e,
	0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x4a, 0x04,
	0x08, 0x07, 0x10, 0x08, 0x22, 0x2d, 0x0a, 0x0c, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x22, 0xb3, 0x03, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f,
	0x72, 0x6b, 0x74, 0x72, 0x65, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x74, 0x72, 0x65,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b,
	0x74, 0x72, 0x65, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x65,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x7a,
	0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0e, 0x72, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x50, 0x0a, 0x14, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x13, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x14,
	0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x04, 0x52, 0x13, 0x72, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12,
	0x17, 0x0a, 0x07, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x73, 0x63, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x69, 0x73, 0x4c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x61, 0x62, 0x73, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x62, 0x73, 0x50, 0x61, 0x74, 0x68, 0x22, 0xba, 0x02, 0x0a, 0x0f, 0x52, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x23, 0x0a,
	0x0d, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x12, 0x44, 0x0a, 0x10, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a,
	0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x17, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6d,
	0x65, 0x72, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x15, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x72,
	0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x73, 0x12, 0x40, 0x0a, 0x0e, 0x62,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x48, 0x00, 0x52, 0x0d, 0x62, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x88, 0x01, 0x01, 0x42, 0x11, 0x0a,
	0x0f, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x22, 0x77, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x3e, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x22,
	0xa6, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x0b,
	0x6f, 0x6c, 0x64, 0x5f, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x2e, 0x50, 0x65, 0x65, 0x72, 0x49, 0x64, 0x52, 0x09, 0x6f, 0x6c, 0x64, 0x50, 0x65, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x34, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x5f, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x49, 0x64, 0x52, 0x09, 0x6e,
	0x65, 0x77, 0x50, 0x65, 0x65, 0x72, 0x49, 0x64, 0x22, 0x69, 0x0a, 0x19, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x07, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x49, 0x64, 0x52, 0x06, 0x70, 0x65, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x25, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12,
	0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x04, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0x28, 0x0a, 0x10, 0x46, 0x75,
	0x7a, 0x7a, 0x79, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x22, 0x39, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22,
	0x33, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x28, 0x0a, 0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x7e,
	0x0a, 0x17, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x54, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24,
	0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xe0,
	0x02, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x73, 0x12, 0x31, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0e, 0x72,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x12, 0x51, 0x0a,
	0x11, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x10,
	0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x12, 0x38, 0x0a, 0x18, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x69, 0x6e, 0x63, 0x6f, 0x6d,
	0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x04, 0x52, 0x16, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x6f, 0x75,
	0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x04, 0x52, 0x10, 0x6f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x38, 0x0a, 0x18, 0x72, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x5f, 0x6f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x04, 0x52, 0x16, 0x72, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x4f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x22, 0x0e, 0x0a, 0x0c, 0x53, 0x68, 0x6f, 0x77, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x73, 0x22, 0x3b, 0x0a, 0x16, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x87,
	0x01, 0x0a, 0x06, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d,
	0x49, 0x64, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x09, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x7a, 0x65, 0x64, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x49, 0x64, 0x52,
	0x08, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x22, 0xc3, 0x01, 0x0a, 0x0e, 0x46, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x0b, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x56, 0x69, 0x65, 0x77, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x56, 0x69, 0x65, 0x77,
	0x12, 0x3f, 0x0a, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x49, 0x64, 0x48, 0x00,
	0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x56, 0x69, 0x65, 0x77, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x56, 0x69, 0x65, 0x77, 0x52, 0x05, 0x76, 0x69, 0x65, 0x77, 0x73, 0x42, 0x11, 0x0a, 0x0f, 0x5f,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x69, 0x64, 0x22, 0xb2,
	0x02, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x72, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48,
	0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x35, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x56, 0x69, 0x65, 0x77, 0x12, 0x4e, 0x0a, 0x12, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x56, 0x69,
	0x65, 0x77, 0x48, 0x00, 0x52, 0x10, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x56, 0x69, 0x65, 0x77, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x76, 0x69, 0x65, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x7a, 0x65,
	0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x56, 0x69, 0x65, 0x77, 0x48, 0x00, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56,
	0x69, 0x65, 0x77, 0x42, 0x09, 0x0a, 0x07, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x4a, 0x04, 0x08,
	0x03, 0x10, 0x04, 0x22, 0x89, 0x01, 0x0a, 0x08, 0x55, 0x6e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a,
	0x09, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x50, 0x65, 0x65, 0x72, 0x49, 0x64, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x22,
	0x48, 0x0a, 0x06, 0x56, 0x69, 0x65, 0x77, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x7a, 0x65, 0x64,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x49, 0x64,
	0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0xb2, 0x01, 0x0a, 0x10, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x56, 0x69, 0x65, 0x77, 0x12, 0x29,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x7a, 0x65, 0x64,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x49, 0x64,
	0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x09, 0x6c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x7a,
	0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x65, 0x65, 0x72,
	0x49, 0x64, 0x48, 0x01, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x26, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x56,
	0x69, 0x65, 0x77, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x22, 0xd9,
	0x04, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x69, 0x65, 0x77, 0x12, 0x24, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x7a, 0x65, 0x64, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x49, 0x64, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x09, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x49, 0x64, 0x48, 0x01, 0x52, 0x08,
	0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x06, 0x65,
	0x64, 0x69, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x7a, 0x65,
	0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x56, 0x69, 0x65, 0x77, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x06,
	0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x1a, 0x98, 0x03, 0x0a, 0x06, 0x45, 0x64, 0x69, 0x74, 0x6f,
	0x72, 0x12, 0x4b, 0x0a, 0x11, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x65, 0x78,
	0x63, 0x65, 0x72, 0x70, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x7a,
	0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x63, 0x65,
	0x72, 0x70, 0x74, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x69, 0x6e,
	0x73, 0x65, 0x72, 0x74, 0x65, 0x64, 0x45, 0x78, 0x63, 0x65, 0x72, 0x70, 0x74, 0x73, 0x12, 0x29,
	0x0a, 0x10, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x65, 0x78, 0x63, 0x65, 0x72, 0x70,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x45, 0x78, 0x63, 0x65, 0x72, 0x70, 0x74, 0x73, 0x12, 0x37, 0x0a, 0x0a, 0x73, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x49, 0x0a, 0x11, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x10, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x46, 0x0a,
	0x11, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x61, 0x6e, 0x63, 0x68,
	0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x41, 0x6e,
	0x63, 0x68, 0x6f, 0x72, 0x52, 0x0f, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x54, 0x6f, 0x70, 0x41,
	0x6e, 0x63, 0x68, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x5f,
	0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x58,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x5f, 0x79, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x07, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x59, 0x42, 0x14, 0x0a, 0x12, 0x5f,
	0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x09, 0x0a, 0x07, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x22, 0xe3, 0x07, 0x0a, 0x04, 0x56,
	0x69, 0x65, 0x77, 0x12, 0x24, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x56,
	0x69, 0x65, 0x77, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x09, 0x6c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x7a,
	0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x65, 0x65, 0x72,
	0x49, 0x64, 0x48, 0x01, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x35, 0x0a, 0x08, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x48, 0x02, 0x52, 0x07, 0x70, 0x61,
	0x6e, 0x65, 0x6c, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x06, 0x65, 0x64, 0x69, 0x74,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x2e, 0x45, 0x64, 0x69,
	0x74, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x06, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x43, 0x0a,
	0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x56,
	0x69, 0x65, 0x77, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x56, 0x69,
	0x65, 0x77, 0x12, 0x49, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x65, 0x64,
	0x69, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x7a, 0x65, 0x64,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x0d,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x1a, 0x96, 0x03,
	0x0a, 0x06, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x74, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x74, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x31, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x65, 0x72, 0x70, 0x74, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x45, 0x78, 0x63, 0x65, 0x72, 0x70, 0x74, 0x52, 0x08, 0x65, 0x78, 0x63, 0x65,
	0x72, 0x70, 0x74, 0x73, 0x12, 0x37, 0x0a, 0x0a, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x49, 0x0a,
	0x11, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x01, 0x52, 0x10, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x46, 0x0a, 0x11, 0x73, 0x63, 0x72, 0x6f,
	0x6c, 0x6c, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x52,
	0x0f, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x54, 0x6f, 0x70, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x5f, 0x78, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x07, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x58, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x5f, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x73,
	0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x59, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x42, 0x14, 0x0a, 0x12, 0x5f, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x5f, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x56, 0x69, 0x65, 0x77, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x06, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x52,
	0x06, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x1a, 0x61, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x06, 0x65, 0x64, 0x69, 0x74, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x2e, 0x45, 0x64, 0x69, 0x74,
	0x6f, 0x72, 0x52, 0x06, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x42, 0x09, 0x0a, 0x07, 0x76, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64,
	0x22, 0x90, 0x01, 0x0a, 0x10, 0x45, 0x78, 0x63, 0x65, 0x72, 0x70, 0x74, 0x49, 0x6e, 0x73, 0x65,
	0x72, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x07, 0x65, 0x78, 0x63, 0x65, 0x72, 0x70, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x63, 0x65, 0x72, 0x70, 0x74, 0x52, 0x07, 0x65,
	0x78, 0x63, 0x65, 0x72, 0x70, 0x74, 0x12, 0x33, 0x0a, 0x13, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f,
	0x75, 0x73, 0x5f, 0x65, 0x78, 0x63, 0x65, 0x72, 0x70, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x11, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x45,
	0x78, 0x63, 0x65, 0x72, 0x70, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x16, 0x0a, 0x14, 0x5f,
	0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x65, 0x78, 0x63, 0x65, 0x72, 0x70, 0x74,
	0x5f, 0x69, 0x64, 0x22, 0x9a, 0x02, 0x0a, 0x07, 0x45, 0x78, 0x63, 0x65, 0x72, 0x70, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0d,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x35, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x7a,
	0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x41, 0x6e, 0x63, 0x68,
	0x6f, 0x72, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x45, 0x6e, 0x64, 0x12, 0x39,
	0x0a, 0x0d, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x52, 0x0c, 0x70, 0x72, 0x69,
	0x6d, 0x61, 0x72, 0x79, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x35, 0x0a, 0x0b, 0x70, 0x72, 0x69,
	0x6d, 0x61, 0x72, 0x79, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x7a, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x41, 0x6e,
	0x63, 0x68, 0x6f, 0x72, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x45, 0x6e, 0x64,
	0x22, 0x4e, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x62, 0x75, 0x73, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x62, 0x75, 0x73, 0x79,
	0x22, 0x79, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f,
	0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6f,
	0x6d, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x7a, 0x65, 0x64,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x2a, 0x49, 0x0a, 0x16, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x10, 0x01, 0x12, 0x09,
	0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x69, 0x73,
	0x6d, 0x69, 0x73, 0x73, 0x10, 0x03, 0x2a, 0x2d, 0x0a, 0x07, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x50, 0x61,
	0x6e, 0x65, 0x6c, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x65, 0x62, 0x75, 0x67, 0x50, 0x61,
	0x6e, 0x65, 0x6c, 0x10, 0x01, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_call_proto_rawDescOnce sync.Once
	file_call_proto_rawDescData = file_call_proto_rawDesc
)

func file_call_proto_rawDescGZIP() []byte {
	file_call_proto_rawDescOnce.Do(func() {
		file_call_proto_rawDescData = protoimpl.X.CompressGZIP(file_call_proto_rawDescData)
	})
	return file_call_proto_rawDescData
}

var file_call_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_call_proto_msgTypes = make([]protoimpl.MessageInfo, 68)
var file_call_proto_goTypes = []interface{}{
	(ContactRequestResponse)(0),                 // 0: zed.messages.ContactRequestResponse
	(PanelId)(0),                                // 1: zed.messages.PanelId
	(*CreateRoom)(nil),                          // 2: zed.messages.CreateRoom
	(*CreateRoomResponse)(nil),                  // 3: zed.messages.CreateRoomResponse
	(*JoinRoom)(nil),                            // 4: zed.messages.JoinRoom
	(*JoinRoomResponse)(nil),                    // 5: zed.messages.JoinRoomResponse
	(*RejoinRoom)(nil),                          // 6: zed.messages.RejoinRoom
	(*RejoinRemoteProjects)(nil),                // 7: zed.messages.RejoinRemoteProjects
	(*RejoinRemoteProjectsResponse)(nil),        // 8: zed.messages.RejoinRemoteProjectsResponse
	(*RejoinProject)(nil),                       // 9: zed.messages.RejoinProject
	(*RejoinWorktree)(nil),                      // 10: zed.messages.RejoinWorktree
	(*RejoinRepository)(nil),                    // 11: zed.messages.RejoinRepository
	(*RejoinRoomResponse)(nil),                  // 12: zed.messages.RejoinRoomResponse
	(*ResharedProject)(nil),                     // 13: zed.messages.ResharedProject
	(*RejoinedProject)(nil),                     // 14: zed.messages.RejoinedProject
	(*LeaveRoom)(nil),                           // 15: zed.messages.LeaveRoom
	(*Room)(nil),                                // 16: zed.messages.Room
	(*Participant)(nil),                         // 17: zed.messages.Participant
	(*PendingParticipant)(nil),                  // 18: zed.messages.PendingParticipant
	(*ParticipantProject)(nil),                  // 19: zed.messages.ParticipantProject
	(*Follower)(nil),                            // 20: zed.messages.Follower
	(*ParticipantLocation)(nil),                 // 21: zed.messages.ParticipantLocation
	(*Call)(nil),                                // 22: zed.messages.Call
	(*IncomingCall)(nil),                        // 23: zed.messages.IncomingCall
	(*CallCanceled)(nil),                        // 24: zed.messages.CallCanceled
	(*CancelCall)(nil),                          // 25: zed.messages.CancelCall
	(*DeclineCall)(nil),                         // 26: zed.messages.DeclineCall
	(*UpdateParticipantLocation)(nil),           // 27: zed.messages.UpdateParticipantLocation
	(*RoomUpdated)(nil),                         // 28: zed.messages.RoomUpdated
	(*LiveKitConnectionInfo)(nil),               // 29: zed.messages.LiveKitConnectionInfo
	(*ShareProject)(nil),                        // 30: zed.messages.ShareProject
	(*ShareProjectResponse)(nil),                // 31: zed.messages.ShareProjectResponse
	(*UnshareProject)(nil),                      // 32: zed.messages.UnshareProject
	(*UpdateProject)(nil),                       // 33: zed.messages.UpdateProject
	(*JoinProject)(nil),                         // 34: zed.messages.JoinProject
	(*JoinProjectResponse)(nil),                 // 35: zed.messages.JoinProjectResponse
	(*LeaveProject)(nil),                        // 36: zed.messages.LeaveProject
	(*UpdateWorktree)(nil),                      // 37: zed.messages.UpdateWorktree
	(*RepositoryEntry)(nil),                     // 38: zed.messages.RepositoryEntry
	(*AddProjectCollaborator)(nil),              // 39: zed.messages.AddProjectCollaborator
	(*UpdateProjectCollaborator)(nil),           // 40: zed.messages.UpdateProjectCollaborator
	(*RemoveProjectCollaborator)(nil),           // 41: zed.messages.RemoveProjectCollaborator
	(*GetUsers)(nil),                            // 42: zed.messages.GetUsers
	(*FuzzySearchUsers)(nil),                    // 43: zed.messages.FuzzySearchUsers
	(*UsersResponse)(nil),                       // 44: zed.messages.UsersResponse
	(*RequestContact)(nil),                      // 45: zed.messages.RequestContact
	(*RemoveContact)(nil),                       // 46: zed.messages.RemoveContact
	(*RespondToContactRequest)(nil),             // 47: zed.messages.RespondToContactRequest
	(*UpdateContacts)(nil),                      // 48: zed.messages.UpdateContacts
	(*ShowContacts)(nil),                        // 49: zed.messages.ShowContacts
	(*IncomingContactRequest)(nil),              // 50: zed.messages.IncomingContactRequest
	(*Follow)(nil),                              // 51: zed.messages.Follow
	(*FollowResponse)(nil),                      // 52: zed.messages.FollowResponse
	(*UpdateFollowers)(nil),                     // 53: zed.messages.UpdateFollowers
	(*Unfollow)(nil),                            // 54: zed.messages.Unfollow
	(*ViewId)(nil),                              // 55: zed.messages.ViewId
	(*UpdateActiveView)(nil),                    // 56: zed.messages.UpdateActiveView
	(*UpdateView)(nil),                          // 57: zed.messages.UpdateView
	(*View)(nil),                                // 58: zed.messages.View
	(*ExcerptInsertion)(nil),                    // 59: zed.messages.ExcerptInsertion
	(*Excerpt)(nil),                             // 60: zed.messages.Excerpt
	(*Contact)(nil),                             // 61: zed.messages.Contact
	(*SetRoomParticipantRole)(nil),              // 62: zed.messages.SetRoomParticipantRole
	(*ParticipantLocation_SharedProject)(nil),   // 63: zed.messages.ParticipantLocation.SharedProject
	(*ParticipantLocation_UnsharedProject)(nil), // 64: zed.messages.ParticipantLocation.UnsharedProject
	(*ParticipantLocation_External)(nil),        // 65: zed.messages.ParticipantLocation.External
	(*UpdateView_Editor)(nil),                   // 66: zed.messages.UpdateView.Editor
	(*View_Editor)(nil),                         // 67: zed.messages.View.Editor
	(*View_ChannelView)(nil),                    // 68: zed.messages.View.ChannelView
	(*View_ContextEditor)(nil),                  // 69: zed.messages.View.ContextEditor
	(*Collaborator)(nil),                        // 70: zed.messages.Collaborator
	(*WorktreeMetadata)(nil),                    // 71: zed.messages.WorktreeMetadata
	(*LanguageServer)(nil),                      // 72: zed.messages.LanguageServer
	(*PeerId)(nil),                              // 73: zed.messages.PeerId
	(ChannelRole)(0),                            // 74: zed.messages.ChannelRole
	(*Entry)(nil),                               // 75: zed.messages.Entry
	(*StatusEntry)(nil),                         // 76: zed.messages.StatusEntry
	(*Branch)(nil),                              // 77: zed.messages.Branch
	(*User)(nil),                                // 78: zed.messages.User
	(*Anchor)(nil),                              // 79: zed.messages.Anchor
	(*Selection)(nil),                           // 80: zed.messages.Selection
	(*EditorAnchor)(nil),                        // 81: zed.messages.EditorAnchor
}
var file_call_proto_depIdxs = []int32{
	16, // 0: zed.messages.CreateRoomResponse.room:type_name -> zed.messages.Room
	29, // 1: zed.messages.CreateRoomResponse.live_kit_connection_info:type_name -> zed.messages.LiveKitConnectionInfo
	16, // 2: zed.messages.JoinRoomResponse.room:type_name -> zed.messages.Room
	29, // 3: zed.messages.JoinRoomResponse.live_kit_connection_info:type_name -> zed.messages.LiveKitConnectionInfo
	33, // 4: zed.messages.RejoinRoom.reshared_projects:type_name -> zed.messages.UpdateProject
	9,  // 5: zed.messages.RejoinRoom.rejoined_projects:type_name -> zed.messages.RejoinProject
	9,  // 6: zed.messages.RejoinRemoteProjects.rejoined_projects:type_name -> zed.messages.RejoinProject
	14, // 7: zed.messages.RejoinRemoteProjectsResponse.rejoined_projects:type_name -> zed.messages.RejoinedProject
	10, // 8: zed.messages.RejoinProject.worktrees:type_name -> zed.messages.RejoinWorktree
	11, // 9: zed.messages.RejoinProject.repositories:type_name -> zed.messages.RejoinRepository
	16, // 10: zed.messages.RejoinRoomResponse.room:type_name -> zed.messages.Room
	13, // 11: zed.messages.RejoinRoomResponse.reshared_projects:type_name -> zed.messages.ResharedProject
	14, // 12: zed.messages.RejoinRoomResponse.rejoined_projects:type_name -> zed.messages.RejoinedProject
	70, // 13: zed.messages.ResharedProject.collaborators:type_name -> zed.messages.Collaborator
	71, // 14: zed.messages.RejoinedProject.worktrees:type_name -> zed.messages.WorktreeMetadata
	70, // 15: zed.messages.RejoinedProject.collaborators:type_name -> zed.messages.Collaborator
	72, // 16: zed.messages.RejoinedProject.language_servers:type_name -> zed.messages.LanguageServer
	17, // 17: zed.messages.Room.participants:type_name -> zed.messages.Participant
	18, // 18: zed.messages.Room.pending_participants:type_name -> zed.messages.PendingParticipant
	20, // 19: zed.messages.Room.followers:type_name -> zed.messages.Follower
	73, // 20: zed.messages.Participant.peer_id:type_name -> zed.messages.PeerId
	19, // 21: zed.messages.Participant.projects:type_name -> zed.messages.ParticipantProject
	21, // 22: zed.messages.Participant.location:type_name -> zed.messages.ParticipantLocation
	74, // 23: zed.messages.Participant.role:type_name -> zed.messages.ChannelRole
	73, // 24: zed.messages.Follower.leader_id:type_name -> zed.messages.PeerId
	73, // 25: zed.messages.Follower.follower_id:type_name -> zed.messages.PeerId
	63, // 26: zed.messages.ParticipantLocation.shared_project:type_name -> zed.messages.ParticipantLocation.SharedProject
	64, // 27: zed.messages.ParticipantLocation.unshared_project:type_name -> zed.messages.ParticipantLocation.UnsharedProject
	65, // 28: zed.messages.ParticipantLocation.external:type_name -> zed.messages.ParticipantLocation.External
	19, // 29: zed.messages.IncomingCall.initial_project:type_name -> zed.messages.ParticipantProject
	21, // 30: zed.messages.UpdateParticipantLocation.location:type_name -> zed.messages.ParticipantLocation
	16, // 31: zed.messages.RoomUpdated.room:type_name -> zed.messages.Room
	71, // 32: zed.messages.ShareProject.worktrees:type_name -> zed.messages.WorktreeMetadata
	71, // 33: zed.messages.UpdateProject.worktrees:type_name -> zed.messages.WorktreeMetadata
	71, // 34: zed.messages.JoinProjectResponse.worktrees:type_name -> zed.messages.WorktreeMetadata
	70, // 35: zed.messages.JoinProjectResponse.collaborators:type_name -> zed.messages.Collaborator
	72, // 36: zed.messages.JoinProjectResponse.language_servers:type_name -> zed.messages.LanguageServer
	74, // 37: zed.messages.JoinProjectResponse.role:type_name -> zed.messages.ChannelRole
	75, // 38: zed.messages.UpdateWorktree.updated_entries:type_name -> zed.messages.Entry
	38, // 39: zed.messages.UpdateWorktree.updated_repositories:type_name -> zed.messages.RepositoryEntry
	76, // 40: zed.messages.RepositoryEntry.updated_statuses:type_name -> zed.messages.StatusEntry
	77, // 41: zed.messages.RepositoryEntry.branch_summary:type_name -> zed.messages.Branch
	70, // 42: zed.messages.AddProjectCollaborator.collaborator:type_name -> zed.messages.Collaborator
	73, // 43: zed.messages.UpdateProjectCollaborator.old_peer_id:type_name -> zed.messages.PeerId
	73, // 44: zed.messages.UpdateProjectCollaborator.new_peer_id:type_name -> zed.messages.PeerId
	73, // 45: zed.messages.RemoveProjectCollaborator.peer_id:type_name -> zed.messages.PeerId
	78, // 46: zed.messages.UsersResponse.users:type_name -> zed.messages.User
	0,  // 47: zed.messages.RespondToContactRequest.response:type_name -> zed.messages.ContactRequestResponse
	61, // 48: zed.messages.UpdateContacts.contacts:type_name -> zed.messages.Contact
	50, // 49: zed.messages.UpdateContacts.incoming_requests:type_name -> zed.messages.IncomingContactRequest
	73, // 50: zed.messages.Follow.leader_id:type_name -> zed.messages.PeerId
	58, // 51: zed.messages.FollowResponse.active_view:type_name -> zed.messages.View
	55, // 52: zed.messages.FollowResponse.active_view_id:type_name -> zed.messages.ViewId
	58, // 53: zed.messages.FollowResponse.views:type_name -> zed.messages.View
	58, // 54: zed.messages.UpdateFollowers.create_view:type_name -> zed.messages.View
	56, // 55: zed.messages.UpdateFollowers.update_active_view:type_name -> zed.messages.UpdateActiveView
	57, // 56: zed.messages.UpdateFollowers.update_view:type_name -> zed.messages.UpdateView
	73, // 57: zed.messages.Unfollow.leader_id:type_name -> zed.messages.PeerId
	73, // 58: zed.messages.ViewId.creator:type_name -> zed.messages.PeerId
	55, // 59: zed.messages.UpdateActiveView.id:type_name -> zed.messages.ViewId
	73, // 60: zed.messages.UpdateActiveView.leader_id:type_name -> zed.messages.PeerId
	58, // 61: zed.messages.UpdateActiveView.view:type_name -> zed.messages.View
	55, // 62: zed.messages.UpdateView.id:type_name -> zed.messages.ViewId
	73, // 63: zed.messages.UpdateView.leader_id:type_name -> zed.messages.PeerId
	66, // 64: zed.messages.UpdateView.editor:type_name -> zed.messages.UpdateView.Editor
	55, // 65: zed.messages.View.id:type_name -> zed.messages.ViewId
	73, // 66: zed.messages.View.leader_id:type_name -> zed.messages.PeerId
	1,  // 67: zed.messages.View.panel_id:type_name -> zed.messages.PanelId
	67, // 68: zed.messages.View.editor:type_name -> zed.messages.View.Editor
	68, // 69: zed.messages.View.channel_view:type_name -> zed.messages.View.ChannelView
	69, // 70: zed.messages.View.context_editor:type_name -> zed.messages.View.ContextEditor
	60, // 71: zed.messages.ExcerptInsertion.excerpt:type_name -> zed.messages.Excerpt
	79, // 72: zed.messages.Excerpt.context_start:type_name -> zed.messages.Anchor
	79, // 73: zed.messages.Excerpt.context_end:type_name -> zed.messages.Anchor
	79, // 74: zed.messages.Excerpt.primary_start:type_name -> zed.messages.Anchor
	79, // 75: zed.messages.Excerpt.primary_end:type_name -> zed.messages.Anchor
	74, // 76: zed.messages.SetRoomParticipantRole.role:type_name -> zed.messages.ChannelRole
	59, // 77: zed.messages.UpdateView.Editor.inserted_excerpts:type_name -> zed.messages.ExcerptInsertion
	80, // 78: zed.messages.UpdateView.Editor.selections:type_name -> zed.messages.Selection
	80, // 79: zed.messages.UpdateView.Editor.pending_selection:type_name -> zed.messages.Selection
	81, // 80: zed.messages.UpdateView.Editor.scroll_top_anchor:type_name -> zed.messages.EditorAnchor
	60, // 81: zed.messages.View.Editor.excerpts:type_name -> zed.messages.Excerpt
	80, // 82: zed.messages.View.Editor.selections:type_name -> zed.messages.Selection
	80, // 83: zed.messages.View.Editor.pending_selection:type_name -> zed.messages.Selection
	81, // 84: zed.messages.View.Editor.scroll_top_anchor:type_name -> zed.messages.EditorAnchor
	67, // 85: zed.messages.View.ChannelView.editor:type_name -> zed.messages.View.Editor
	67, // 86: zed.messages.View.ContextEditor.editor:type_name -> zed.messages.View.Editor
	87, // [87:87] is the sub-list for method output_type
	87, // [87:87] is the sub-list for method input_type
	87, // [87:87] is the sub-list for extension type_name
	87, // [87:87] is the sub-list for extension extendee
	0,  // [0:87] is the sub-list for field type_name
}

func init() { file_call_proto_init() }
func file_call_proto_init() {
	if File_call_proto != nil {
		return
	}
	file_core_proto_init()
	file_worktree_proto_init()
	file_buffer_proto_init()
	file_lsp_proto_init()
	file_channel_proto_init()
	file_git_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_call_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoomResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinRoomResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RejoinRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RejoinRemoteProjects); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RejoinRemoteProjectsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RejoinProject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RejoinWorktree); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RejoinRepository); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RejoinRoomResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResharedProject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RejoinedProject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Room); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Participant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PendingParticipant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParticipantProject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Follower); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParticipantLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Call); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncomingCall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallCanceled); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelCall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeclineCall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateParticipantLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiveKitConnectionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareProject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareProjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnshareProject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinProject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinProjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveProject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWorktree); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepositoryEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddProjectCollaborator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProjectCollaborator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveProjectCollaborator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FuzzySearchUsers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestContact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveContact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespondToContactRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateContacts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowContacts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncomingContactRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Follow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FollowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFollowers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Unfollow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateActiveView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*View); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExcerptInsertion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Excerpt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRoomParticipantRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParticipantLocation_SharedProject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParticipantLocation_UnsharedProject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParticipantLocation_External); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateView_Editor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*View_Editor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*View_ChannelView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_call_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*View_ContextEditor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_call_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_call_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_call_proto_msgTypes[16].OneofWrappers = []interface{}{}
	file_call_proto_msgTypes[19].OneofWrappers = []interface{}{
		(*ParticipantLocation_SharedProject_)(nil),
		(*ParticipantLocation_UnsharedProject_)(nil),
		(*ParticipantLocation_External_)(nil),
	}
	file_call_proto_msgTypes[20].OneofWrappers = []interface{}{}
	file_call_proto_msgTypes[21].OneofWrappers = []interface{}{}
	file_call_proto_msgTypes[36].OneofWrappers = []interface{}{}
	file_call_proto_msgTypes[49].OneofWrappers = []interface{}{}
	file_call_proto_msgTypes[50].OneofWrappers = []interface{}{}
	file_call_proto_msgTypes[51].OneofWrappers = []interface{}{
		(*UpdateFollowers_CreateView)(nil),
		(*UpdateFollowers_UpdateActiveView)(nil),
		(*UpdateFollowers_UpdateView)(nil),
	}
	file_call_proto_msgTypes[52].OneofWrappers = []interface{}{}
	file_call_proto_msgTypes[54].OneofWrappers = []interface{}{}
	file_call_proto_msgTypes[55].OneofWrappers = []interface{}{
		(*UpdateView_Editor_)(nil),
	}
	file_call_proto_msgTypes[56].OneofWrappers = []interface{}{
		(*View_Editor_)(nil),
		(*View_ChannelView_)(nil),
		(*View_ContextEditor_)(nil),
	}
	file_call_proto_msgTypes[57].OneofWrappers = []interface{}{}
	file_call_proto_msgTypes[64].OneofWrappers = []interface{}{}
	file_call_proto_msgTypes[65].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_call_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   68,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_call_proto_goTypes,
		DependencyIndexes: file_call_proto_depIdxs,
		EnumInfos:         file_call_proto_enumTypes,
		MessageInfos:      file_call_proto_msgTypes,
	}.Build()
	File_call_proto = out.File
	file_call_proto_rawDesc = nil
	file_call_proto_goTypes = nil
	file_call_proto_depIdxs = nil
}
